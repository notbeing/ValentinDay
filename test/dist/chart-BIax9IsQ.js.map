{"version":3,"file":"chart-BIax9IsQ.js","sources":["../src/lib/tchart/animator.ts","../src/lib/tchart/format.ts","../src/lib/tchart/utils.ts","../src/lib/tchart/areas.ts","../src/lib/tchart/axisX.ts","../src/lib/tchart/axisY.ts","../src/lib/tchart/bars.ts","../src/lib/tchart/composer.ts","../src/lib/tchart/fade.ts","../src/lib/tchart/drag.ts","../src/lib/tchart/handle.ts","../src/lib/tchart/lines.ts","../src/lib/tchart/switchers.ts","../src/lib/tchart/tip.ts","../src/lib/tchart/chart.ts"],"sourcesContent":["import TComposer from './composer';\r\nimport {TChartAnimationItem, TChartAnimationProperty, TChartState} from './types';\r\n\r\nconst easing = (st: number, ed: number, per: number, tween: string) => {\r\n  const functions: Record<string, (t: number, b: number, c: number, d: number) => number> = {\r\n    linear: (t, b, c, d) => {\r\n      return c * t / d + b;\r\n    },\r\n\r\n    easeInOutQuad: (t, b, c, d) => {\r\n      t /= d * 0.5;\r\n      if(t < 1) return c * 0.5 * t * t + b;\r\n      t--;\r\n      return -c / 2 * (t * (t - 2) - 1) + b;\r\n    }\r\n  };\r\n\r\n  return functions[tween](per, st, ed - st, 1);\r\n};\r\n\r\nexport default class TAnimator {\r\n  private composer: TComposer;\r\n  private state: TChartState;\r\n  private queue: Record<keyof TChartState, TChartAnimationItem> = {} as any;\r\n  private queueSize: number = 0;\r\n  private animFrame?: number;\r\n\r\n  constructor(opts: {state: TChartState, composer: TComposer}) {\r\n    this.composer = opts.composer;\r\n    this.state = opts.state;\r\n  }\r\n\r\n  public add<T extends TChartAnimationProperty<any>>(params: T[]) {\r\n    let i = 0;\r\n    const j = 0;\r\n    const cur = +new Date();\r\n    let item: TChartAnimationItem, param: TChartAnimationProperty, delta: number;\r\n    const queue = this.queue;\r\n\r\n    while(i < params.length) {\r\n      param = params[i];\r\n      item = queue[param.prop];\r\n\r\n      if(!item) {\r\n        if(param.end === param.state[param.prop]) {\r\n          param.cbEnd && param.cbEnd(param.state);\r\n          i++;\r\n          continue;\r\n        }\r\n\r\n        item = {\r\n          lastStart: 1\r\n        } as TChartAnimationItem;\r\n        queue[param.prop] = item;\r\n        this.queueSize++;\r\n      }\r\n\r\n      delta = cur - item.lastStart;\r\n\r\n      param.duration *= this.state.speed;\r\n      param.delay *= this.state.speed;\r\n\r\n      item.cbEnd = param.cbEnd;\r\n      item.state = param.state;\r\n      item.lastStart = cur;\r\n      item.start = param.state[param.prop] as number;\r\n      item.end = param.end;\r\n      item.startDt = cur + (param.delay || 0);\r\n      item.endDt =\r\n        item.startDt +\r\n        (param.duration || 0) -\r\n        (param.fixed ? 0 : Math.max(param.duration - delta, 0));\r\n      item.tween = param.tween || 'easeInOutQuad';\r\n      item.speed = param.speed;\r\n      item.group = param.group;\r\n\r\n      i++;\r\n    }\r\n\r\n    if(!this.animFrame) {\r\n      this.animFrame = requestAnimationFrame(this.step);\r\n    }\r\n  }\r\n\r\n  public get(prop: keyof TChartState) {\r\n    return this.queue[prop];\r\n  }\r\n\r\n  private step = () => {\r\n    const done: (keyof TChartState)[] = [];\r\n    const cur = +new Date();\r\n    let item: TChartAnimationItem,\r\n      time: number,\r\n      duration: number,\r\n      per: number,\r\n      curVal: number,\r\n      newVal: number;\r\n    const group: TChartAnimationProperty['group'] = {top: false, bottom: false};\r\n\r\n    for(const itemKey in this.queue) {\r\n      item = this.queue[itemKey as keyof TChartState];\r\n      time = cur;\r\n      duration = item.endDt - item.startDt;\r\n      curVal = item.state[itemKey as keyof TChartState] as number;\r\n      const delayed = time < item.startDt;\r\n\r\n      if(time < item.startDt) {\r\n        time = item.startDt;\r\n      } else if(time > item.endDt) {\r\n        time = item.endDt;\r\n      }\r\n\r\n      per = duration ? (time - item.startDt) / duration : (delayed ? 0 : 1);\r\n\r\n      let newVal: number;\r\n      if(per < 1) {\r\n        if(item.tween === 'exp') {\r\n          newVal = curVal + (item.end - curVal) * item.speed;\r\n        } else {\r\n          newVal = easing(item.start, item.end, per, item.tween);\r\n        }\r\n      } else {\r\n        newVal = item.end;\r\n      }\r\n\r\n      if(newVal !== curVal) {\r\n        // @ts-ignore\r\n        item.state[itemKey as keyof TChartState] = newVal;\r\n        group.top = group.top || item.group.top;\r\n        group.bottom = group.bottom || item.group.bottom;\r\n      } else if(newVal === item.end) {\r\n        done.push(itemKey as keyof TChartState);\r\n      }\r\n    }\r\n\r\n    // Remove animations that are done\r\n    let j = 0;\r\n    while(j < done.length) {\r\n      this.queue[done[j]].cbEnd && this.queue[done[j]].cbEnd(this.queue[done[j]].state);\r\n      delete this.queue[done[j]];\r\n      j++;\r\n    }\r\n\r\n    this.queueSize -= done.length;\r\n\r\n    this.composer.render(group);\r\n\r\n    if(!this.queueSize) {\r\n      delete this.animFrame;\r\n    } else {\r\n      this.animFrame = requestAnimationFrame(this.step);\r\n    }\r\n  };\r\n}\r\n","import {TChartData} from './types';\r\n\r\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nconst MONTHS_SHORT = MONTHS.map((month) => month.slice(0, 3));\r\nconst WEEK_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nconst WEEK_DAYS_SHORT = WEEK_DAYS.map((month) => month.slice(0, 3));\r\n\r\nexport function statsFormatDayHour(value: number, data: TChartData) {\r\n  return statsFormatDayHourFull(value, data);\r\n}\r\n\r\nlet utcDiff: number;\r\nexport function statsFormatDayHourFull(value: number, data: TChartData) {\r\n  if(utcDiff === undefined) {\r\n    utcDiff = new Date().getTimezoneOffset() * 60e3;\r\n  }\r\n\r\n  return data.getLabelTime(86400e3 + +value * 3600e3 + utcDiff);\r\n}\r\n\r\nexport function statsFormatDay(value: number, data: TChartData) {\r\n  return data.getLabelDate(value, {isShort: true, displayYear: false});\r\n}\r\n\r\nexport function statsFormatMin(value: number, data: TChartData) {\r\n  return data.getLabelTime(value);\r\n}\r\n\r\nexport function statsFormatText(value: number | string) {\r\n  return '' + value;\r\n}\r\n\r\nexport function getLabelDate(\r\n  value: number,\r\n  {\r\n    isShort,\r\n    isMonthShort = true,\r\n    displayWeekDay,\r\n    displayYear = true,\r\n    displayHours\r\n  }: {\r\n    isShort?: boolean,\r\n    isMonthShort?: boolean,\r\n    displayWeekDay?: boolean,\r\n    displayYear?: boolean,\r\n    displayHours?: boolean\r\n  } = {}\r\n) {\r\n  const date = new Date(value);\r\n  const weekDaysArray = isShort ? WEEK_DAYS_SHORT : WEEK_DAYS;\r\n\r\n  let string = `${date.getUTCDate()} ${(isMonthShort ? MONTHS_SHORT : MONTHS)[date.getUTCMonth()]}`;\r\n  if(displayWeekDay) {\r\n    string = `${weekDaysArray[date.getUTCDay()]}, ` + string;\r\n  }\r\n  if(displayYear) {\r\n    string += ` ${date.getUTCFullYear()}`;\r\n  }\r\n  if(displayHours) {\r\n    string += `, ${('0' + date.getUTCHours()).slice(-2)}:${('0' + date.getUTCMinutes()).slice(-2)}`\r\n  }\r\n\r\n  return string;\r\n}\r\n\r\nexport function getLabelTime(value: number) {\r\n  return new Date(value).toString().match(/(\\d+:\\d+):/)[1];\r\n}\r\n","import {statsFormatDay, statsFormatDayHour, statsFormatDayHourFull, statsFormatMin} from './format';\r\nimport {TChartData} from './types';\r\n\r\nMath.log2 ||= function(x) {\r\n  return Math.log(x) * Math.LOG2E;\r\n};\r\n\r\nMath.log10 ||= function(x) {\r\n  return Math.log(x) * Math.LOG10E;\r\n};\r\n\r\nexport function simplifyData(tp: any, x: number[], ys: TChartData['ys'], xScale: number, xShift: number, visibleCols: number[], xInd1: number, xInd2: number, dw: number) {\r\n  const pointsPerPixel = (xInd2 - xInd1) / dw;\r\n  const optX: number[] = [];\r\n  const optYs: {y: number[]}[] = [];\r\n\r\n  if(pointsPerPixel <= 1) {\r\n    return {\r\n      xInd1: xInd1,\r\n      xInd2: xInd2,\r\n      x: x,\r\n      ys: ys\r\n    };\r\n  } else {\r\n    let xInd = 0;\r\n    let xPrev = -999999999;\r\n    const colsLen = visibleCols.length;\r\n    let cnt: number;\r\n\r\n    for(let i = xInd1; i <= xInd2; i++) {\r\n      const tmpX = x[i] * xScale + xShift << 0;\r\n      const notTheSame = tmpX > xPrev;\r\n\r\n      if(notTheSame) {\r\n        optX[xInd] = x[i];\r\n        xInd++;\r\n      } else {\r\n        cnt++;\r\n      }\r\n\r\n      // calc avg y per column that fits inside same x in pixels\r\n      for(let j = 0; j < colsLen; j++) {\r\n        const visColInd = visibleCols[j];\r\n        optYs[visColInd] = optYs[visColInd] || {y: []};\r\n        const prevOptY = optYs[visColInd].y[xInd - 1];\r\n        const curY = ys[visColInd].y[i];\r\n        if(prevOptY === undefined) {\r\n          optYs[visColInd].y[xInd - 1] = curY;\r\n        } else {\r\n          optYs[visColInd].y[xInd - 1] += curY;\r\n        }\r\n        if(xInd > 1) {\r\n          if(notTheSame) {\r\n            optYs[visColInd].y[xInd - 2] /= cnt;\r\n          }\r\n          if(i === xInd2) {\r\n            optYs[visColInd].y[xInd - 1] /= cnt;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(notTheSame) {\r\n        cnt = 1;\r\n      }\r\n\r\n      xPrev = tmpX;\r\n    }\r\n\r\n    xInd1 = 0;\r\n    xInd2 = xInd - 1;\r\n\r\n    return {\r\n      isOptimized: pointsPerPixel > 1,\r\n      xInd1: 0,\r\n      xInd2: xInd - 1,\r\n      x: optX,\r\n      ys: optYs\r\n    };\r\n  }\r\n}\r\n\r\nexport function getElemPagePos($el: HTMLElement) {\r\n  const rect = $el.getBoundingClientRect();\r\n\r\n  return {\r\n    x: rect.left + (window.pageXOffset || document.documentElement.scrollLeft),\r\n    y: rect.top + (window.pageYOffset || document.documentElement.scrollTop)\r\n  };\r\n}\r\n\r\nexport function getXIndex(x: number[], xc: number, doNotClip?: boolean) {\r\n  let i1 = 0;\r\n  let i2 = x.length - 1;\r\n\r\n  if(!doNotClip) {\r\n    if(xc < x[i1]) {\r\n      xc = x[i1];\r\n    } else if(xc > x[i2]) {\r\n      xc = x[i2];\r\n    }\r\n  }\r\n\r\n  while(Math.abs(i1 - i2) > 1) {\r\n    const i = Math.round((i1 + i2) / 2);\r\n\r\n    if(xc >= x[i1] && xc <= x[i]) {\r\n      i2 = i;\r\n    } else {\r\n      i1 = i;\r\n    }\r\n  }\r\n\r\n  return i1 + (xc - x[i1]) / (x[i2] - x[i1]);\r\n}\r\n\r\nexport function triggerEvent(eventName: string, details: any) {\r\n  if(typeof(window.CustomEvent) !== 'function') return;\r\n  document.dispatchEvent(new CustomEvent(eventName, {detail: details || null}));\r\n}\r\n\r\nexport function isTouchDevice() {\r\n  const prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\r\n  const mq = (query: string) => {\r\n    return window.matchMedia(query).matches;\r\n  };\r\n\r\n  // @ts-ignore\r\n  if(('ontouchstart' in window) || (window as any).DocumentTouch && document instanceof DocumentTouch) {\r\n    return true;\r\n  }\r\n\r\n  const query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\r\n  return mq(query);\r\n}\r\n\r\nexport function drawRoundedRect(ctx: CanvasRenderingContext2D, dpi: number, w: number, h: number, x: number, y: number, r: [number, number, number, number] | number) {\r\n  w *= dpi;\r\n  h *= dpi;\r\n  x *= dpi;\r\n  y *= dpi;\r\n\r\n  if(typeof(r) === 'number') {\r\n    r = [r, r, r, r];\r\n  }\r\n\r\n  r[0] *= dpi; // tl\r\n  r[1] *= dpi; // tr\r\n  r[2] *= dpi; // br\r\n  r[3] *= dpi; // bl\r\n\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + r[0], y);\r\n  ctx.lineTo(x + w - r[1], y);\r\n  ctx.quadraticCurveTo(x + w, y, x + w, y + r[1]);\r\n  ctx.lineTo(x + w, y + h - r[2]);\r\n  ctx.quadraticCurveTo(x + w, y + h, x + w - r[2], y + h);\r\n  ctx.lineTo(x + r[3], y + h);\r\n  ctx.quadraticCurveTo(x, y + h, x, y + h - r[3]);\r\n  ctx.lineTo(x, y + r[0]);\r\n  ctx.quadraticCurveTo(x, y, x + r[0], y);\r\n  ctx.closePath();\r\n}\r\n\r\nexport function drawRoundedRect2(ctx: CanvasRenderingContext2D, dpi: number, w: number, h: number, x: number, y: number, r: number) {\r\n  w *= dpi;\r\n  h *= dpi;\r\n  x *= dpi;\r\n  y *= dpi;\r\n  r *= dpi;\r\n\r\n  if(w < 2 * r) r = w / 2;\r\n  if(h < 2 * r) r = h / 2;\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + r, y);\r\n  ctx.arcTo(x + w, y, x + w, y + h, r);\r\n  ctx.arcTo(x + w, y + h, x, y + h, r);\r\n  ctx.arcTo(x, y + h, x, y, r);\r\n  ctx.arcTo(x, y, x + w, y, r);\r\n  ctx.closePath();\r\n}\r\n\r\ntype Formatter = (x: number, isZoom?: boolean, unknown?: boolean) => string;\r\n\r\nexport function getFormatter(formatterName: 'xRangeFormatter' | 'xTickFormatter' | 'xTooltipFormatter' | 'yTickFormatter' | 'yTooltipFormatter', data: TChartData, zoomMorph: number): Formatter {\r\n  const lookupIn = zoomMorph && zoomMorph > 0.5 && data.details ? data.details : data;\r\n  const f: string = lookupIn[formatterName as keyof typeof lookupIn];\r\n  const map: Record<string, Formatter> = {\r\n    'statsFormatDayHourFull': (value) => statsFormatDayHourFull(value, data),\r\n    'statsFormatDayHour': (value) => statsFormatDayHour(value, data),\r\n    'statsFormat(\\'week\\')': (value) => statsFormatDay(value, data),\r\n    'statsFormat(\\'day\\')': (value) => statsFormatDay(value, data),\r\n    'statsFormat(\\'hour\\')': (value) => statsFormatMin(value, data),\r\n    'statsFormat(\\'5min\\')': (value) => statsFormatMin(value, data),\r\n    'statsFormatTooltipValue': yTooltipFormatter,\r\n    'statsTooltipFormat(\\'week\\')': (value) => data.getLabelDate(value),\r\n    'statsTooltipFormat(\\'day\\')': (value) => data.getLabelDate(value),\r\n    'statsTooltipFormat(\\'hour\\')': (value) => data.getLabelTime(value),\r\n    'statsTooltipFormat(\\'5min\\')': (value) => data.getLabelTime(value),\r\n    'null': (value) => '' + value\r\n  };\r\n\r\n  let formatter = map[f] || map['null'];\r\n  if(f === 'null') {\r\n    const m: Record<string, Formatter> = {\r\n      xRangeFormatter: (value) => data.getLabelDate(value, {isShort: false, isMonthShort: false}),\r\n      yTickFormatter: yTickFormatter as any\r\n    };\r\n\r\n    formatter = m[formatterName] || formatter;\r\n  }\r\n\r\n  return formatter;\r\n}\r\n\r\nexport function yTickFormatter(val: number, step: number, isFractional?: boolean) {\r\n  if(val === 0) return '' + 0;\r\n\r\n  if(step < 1000) {\r\n    return '' + Math.floor(val);\r\n  } else {\r\n    if(step >= 1000 && step < 1000000) {\r\n      if(isFractional) {\r\n        return Math.floor(10 * val / 1000) / 10 + 'K';\r\n      } else {\r\n        return Math.round(val / 1000) + 'K';\r\n      }\r\n    } else {\r\n      if(isFractional) {\r\n        return Math.floor(10 * val / 1000000) / 10 + 'M';\r\n      } else {\r\n        return Math.round(val / 1000000) + 'M';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function yTooltipFormatter(val: number | string) {\r\n  if(typeof(val) !== 'number') {\r\n    return typeof(val) === 'string' ? val : '?';\r\n  }\r\n  // var endingZeroesReg = new RegExp('\\\\.0+$', 'g');\r\n  // var numValue = item.y[xInd];\r\n  // if (typeof numValue === 'number') {\r\n  //     numValue = numValue.toFixed(2).toString(10);\r\n  // } else {\r\n  //     numValue = numValue + '';\r\n  // }\r\n  // this.labels[ind].$valueText.nodeValue = numValue.replace(endingZeroesReg, '').replace(thSepReg, ' ');\r\n  return statsFormatKMBT(val);\r\n}\r\n\r\nexport function statsFormatKMBT(val: number, kmbt?: string, precision?: number) {\r\n  if(val === 0) {\r\n    return '0';\r\n  }\r\n  if(kmbt === undefined) {\r\n    kmbt = statsChooseNumKMBT(val);\r\n  }\r\n  const sval = statsFormatFixedKMBT(val, kmbt);\r\n  if(precision === undefined) {\r\n    precision = statsChoosePrecision(sval);\r\n  }\r\n  return sval.toFixed(precision) + kmbt;\r\n}\r\n\r\nexport function statsFormatFixedKMBT(val: number, kmbt: string) {\r\n  switch(kmbt) {\r\n    case 'K':\r\n      return val / 1000;\r\n    case 'M':\r\n      return val / 1000000;\r\n    case 'B':\r\n      return val / 1000000000;\r\n    case 'T':\r\n      return val / 1000000000000;\r\n  }\r\n  return val\r\n}\r\n\r\nexport function statsChoosePrecision(val: number) {\r\n  var absVal = Math.abs(val);\r\n  if(absVal > 10) {\r\n    return 0;\r\n  }\r\n  if(absVal >= 1.0) {\r\n    return (Math.abs(absVal - Math.floor(absVal)) < 0.001) ? 0 : 1;\r\n  }\r\n  return 2;\r\n}\r\n\r\nexport function statsChooseNumKMBT(val: number) {\r\n  var absVal = Math.abs(val);\r\n  if(absVal >= 1000000000000) {\r\n    return 'T';\r\n  } else if(absVal >= 1000000000) {\r\n    return 'B';\r\n  } else if(absVal >= 1000000) {\r\n    return 'M';\r\n  } else if(absVal >= 2000) {\r\n    return 'K';\r\n  }\r\n  return '';\r\n}\r\n\r\ntype RoundedRange = {\r\n  good?: boolean,\r\n  yMin: number,\r\n  yMax: number,\r\n  yMinOrig: number,\r\n  yMaxOrig: number\r\n};\r\nexport function roundRange(y1: number, y2: number, cnt?: number, refRange?: RoundedRange): RoundedRange {\r\n  // for paired graphs, second one should fit range of the first one (wich is rounded)\r\n  if(Math.abs(y2 - y1) < 1) {\r\n    y1 -= y1 / 10;\r\n    y2 += y2 / 10;\r\n  }\r\n  if(refRange) {\r\n    const yd1 = (refRange.yMinOrig - refRange.yMin) / (refRange.yMaxOrig - refRange.yMinOrig);\r\n    const yd2 = (refRange.yMax - refRange.yMaxOrig) / (refRange.yMaxOrig - refRange.yMinOrig);\r\n    return {\r\n      yMin: y1 - (y2 - y1) * yd1,\r\n      yMax: y2 + (y2 - y1) * yd2,\r\n      yMinOrig: y1,\r\n      yMaxOrig: y2\r\n    };\r\n  }\r\n\r\n  const calc = (d: number) => {\r\n    const power = curPower * d;\r\n    const min = Math.floor(y1 / power) * power;\r\n    const max = min + cnt * Math.ceil((y2 - min) * scale / power) * power;\r\n\r\n    return {\r\n      good: max <= maxLevel && min >= minLevel,\r\n      yMin: Math.round(min),\r\n      yMax: Math.round(max),\r\n      yMinOrig: y1,\r\n      yMaxOrig: y2\r\n    };\r\n  };\r\n\r\n  const scale = 1 / cnt;\r\n  const step = (y2 - y1) * scale;\r\n  let curPower = Math.max(Math.pow(10, Math.floor(Math.log10(step))), 1);\r\n  const minLevel = y1 - step * 0.5;\r\n  const maxLevel = y2 + step * 0.5;\r\n  let range;\r\n\r\n  let c = 1;\r\n\r\n  while(true) {\r\n    range = calc(5);\r\n    if(range.good) break;\r\n    range = calc(2);\r\n    if(range.good) break;\r\n    range = calc(1);\r\n    if(range.good) break;\r\n    curPower *= 0.1;\r\n    c++;\r\n    if(c > 10) { // seems impossible? but have no time to prove it, so this is save exit from cycle\r\n      return {\r\n        yMinOrig: y1,\r\n        yMaxOrig: y2,\r\n        yMin: y1,\r\n        yMax: y2\r\n      };\r\n    }\r\n  }\r\n\r\n  return range;\r\n}\r\n","import {getXIndex, simplifyData} from './utils';\r\nimport {TChartAngle, TChartUnitOptions} from './types';\r\n\r\nexport default class TAreas {\r\n  private opts: TChartUnitOptions;\r\n  private $canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private cached: string;\r\n  private isDarkMode: boolean;\r\n  private savedX1: number;\r\n  private savedX2: number;\r\n  private prevElastic: number;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n\r\n    if(opts.additional.mini) {\r\n      this.$canvas = document.createElement('canvas');\r\n      this.ctx = this.$canvas.getContext('2d', {alpha: true});\r\n    }\r\n  }\r\n\r\n  onResize() {\r\n    if(this.opts.additional.mini) {\r\n      var dpi = this.opts.settings.dpi;\r\n      var dims = this.opts.additional.mini ? this.opts.state.dims.mini : this.opts.state.dims.graph;\r\n      this.$canvas.width = dims.w * dpi;\r\n      this.$canvas.height = dims.h * dpi;\r\n      this.cached = '';\r\n    }\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n  }\r\n\r\n  render() {\r\n    let i, j, y, o, xScale;\r\n    const opts = this.opts;\r\n    const ys = opts.data.ys;\r\n    const state = opts.state;\r\n    const mini = opts.additional.mini;\r\n    const x1 = mini ? state.xg1 : state.x1;\r\n    const x2 = mini ? state.xg2 : state.x2;\r\n    const settings = opts.settings;\r\n    const pTop = settings[`PADD${mini ? '_MINI_AREA' : ''}`][0];\r\n    const pRight = settings[`PADD${mini ? '_MINI_AREA' : ''}`][1];\r\n    const pBottom = settings[`PADD${mini ? '_MINI_AREA' : ''}`][2];\r\n    const pLeft = settings[`PADD${mini ? '_MINI_AREA' : ''}`][3];\r\n    const x = opts.data.x;\r\n    const dpi = opts.settings.dpi;\r\n    const ctx = mini ? this.ctx : this.opts.ctx;\r\n    const prevY = [];\r\n    const totalPerX = [];\r\n    const totalPerY = [];\r\n    const overlap = mini ? 0 : 0;\r\n    const dims = mini ? state.dims.mini : state.dims.graph;\r\n    const zoomMorph = state.zoomMorph === undefined ? 0 : state.zoomMorph;\r\n    let morph = zoomMorph;\r\n    const zoom = state.zoomMode;\r\n    const ysLen = ys.length;\r\n\r\n    // cache rendered version\r\n    if(mini) {\r\n      const hash = [dims.w, dims.h, state.xg1, state.xg2, this.isDarkMode, state.zoomMode, zoomMorph];\r\n      for(i = 0; i < ysLen; i++) {\r\n        hash.push(state[`om_${i}`]);\r\n        hash.push(state[`f_${i}`]);\r\n      }\r\n      const joinedHash = hash.join(',');\r\n\r\n      if(joinedHash === this.cached) {\r\n        this.opts.ctx.drawImage(this.$canvas, dims.l * dpi, dims.t * dpi);\r\n        return;\r\n      }\r\n\r\n      this.cached = joinedHash;\r\n    }\r\n\r\n    xScale = (dims.w - pRight - pLeft) / (x2 - x1);\r\n    let xInd1 = Math.floor(getXIndex(x, x1 - pLeft / xScale));\r\n    let xInd2 = Math.ceil(getXIndex(x, x2 + pRight / xScale));\r\n\r\n    xScale *= dpi;\r\n    const xShift = (pLeft + (mini ? 0 : dims.l)) * dpi - x1 * xScale;\r\n    const hBottom = (dims.h - pBottom + (mini ? 0 : dims.t)) * dpi;\r\n\r\n    const visibleCols = [];\r\n    const opacityCols = [];\r\n    let textToCenter = 0; // animation for text moving to center for only 1 selected column\r\n    let fullyVisibleCount = 0;\r\n    let fullyVisibleInd = 0;\r\n    let hasUnfocusedColumns = false;\r\n    for(i = 0; i < ysLen; i++) {\r\n      o = mini ? state[`om_${i}`] : state[`o_${i}`];\r\n\r\n      hasUnfocusedColumns = hasUnfocusedColumns || state[`f_${i}`] < 1;\r\n\r\n      if(o < 1 && o > 0) {\r\n        textToCenter = o;\r\n      }\r\n\r\n      if(o > 0) {\r\n        visibleCols.push(i);\r\n        opacityCols.push(o);\r\n\r\n        if(o === 1 && state[`e_${i}`]) {\r\n          fullyVisibleCount++;\r\n          fullyVisibleInd = visibleCols.length - 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    const colsLen = visibleCols.length;\r\n    textToCenter = fullyVisibleCount === 1 ? textToCenter : 1;\r\n\r\n    const y1 = mini ? state['y1m'] : state['y1'];\r\n    const y2 = mini ? state['y2m'] : state['y2'];\r\n    const optData = simplifyData('line', x, ys, xScale, xShift, visibleCols, xInd1, xInd2, dims.w - pRight - pLeft);\r\n\r\n    xInd1 = optData.xInd1;\r\n    xInd2 = optData.xInd2;\r\n    const optX = optData.x;\r\n    const optYs = optData.ys;\r\n    let hasGapsInData = false;\r\n\r\n    for(j = xInd1; j <= xInd2; j++) {\r\n      prevY[j] = 0;\r\n      totalPerX[j] = 0;\r\n      for(i = 0; i < colsLen; i++) {\r\n        totalPerX[j] += (optYs[visibleCols[i]].y[j] || 0) * opacityCols[i];\r\n      }\r\n      if(totalPerX[j] === 0) {\r\n        hasGapsInData = true;\r\n      }\r\n    }\r\n\r\n    if(hasGapsInData || hasUnfocusedColumns) {\r\n      ctx.fillStyle = this.opts.settings.COLORS.background;\r\n      ctx.fillRect(0, 0, dims.w * dpi, dims.h * dpi);\r\n    }\r\n\r\n    let angles: TChartAngle[], radius: number, cx: number, cy: number;\r\n\r\n    // calc totals for fractional period so all animations will be transformed for pie representation\r\n    if(zoomMorph > 0 && !mini) {\r\n      if(morph === 1) {\r\n        this.savedX1 = x1;\r\n        this.savedX2 = x2;\r\n      }\r\n\r\n      let xInd1Real: number, xInd2Real: number;\r\n      if(morph < 1) {\r\n        const x1AnimItem = this.opts.animator.get('x1');\r\n        const x2AnimItem = this.opts.animator.get('x2');\r\n        const x1End = x1AnimItem ? x1AnimItem.end : this.opts.state['x1'];\r\n        const x2End = x2AnimItem ? x2AnimItem.end : this.opts.state['x2'];\r\n        xInd1Real = getXIndex(x, this.opts.state.zoomDir === -1 ? this.savedX1 : x1End, true);\r\n        xInd2Real = getXIndex(x, this.opts.state.zoomDir === -1 ? this.savedX2 : x2End, true);\r\n      } else {\r\n        xInd1Real = getXIndex(x, x1, true);\r\n        xInd2Real = getXIndex(x, x2, true);\r\n      }\r\n      xInd2Real--;\r\n\r\n      var xInd1RealFloor = Math.floor(xInd1Real);\r\n      var xInd1RealCeil = Math.ceil(xInd1Real);\r\n      var xInd2RealFloor = Math.floor(xInd2Real);\r\n      var xInd2RealCeil = Math.ceil(xInd2Real);\r\n      var totalForAll = 0;\r\n      var totalPerItem = [];\r\n\r\n      for(i = 0; i < colsLen; i++) {\r\n        totalPerItem[i] = 0;\r\n        const tmpY = ys[visibleCols[i]].y;\r\n\r\n        let tmp: number;\r\n        for(j = xInd1RealCeil; j <= xInd2RealFloor; j++) {\r\n          tmp = (tmpY[j] || 0) * opacityCols[i];\r\n          totalPerItem[i] += tmp;\r\n          totalForAll += tmp;\r\n        }\r\n\r\n        // partly visible data from left side\r\n        tmp = ((xInd1RealCeil - xInd1Real) * (tmpY[xInd1RealFloor] || 0)) * opacityCols[i];\r\n        totalPerItem[i] += tmp;\r\n        totalForAll += tmp;\r\n\r\n        // partly visible data from right side\r\n        tmp = ((xInd2Real - xInd2RealFloor) * (tmpY[xInd2RealCeil] || 0)) * opacityCols[i];\r\n        totalPerItem[i] += tmp;\r\n        totalForAll += tmp;\r\n      }\r\n\r\n      // calc angles for pie representation\r\n      const elastic =  this.opts.state.zoomDir === 1 ? Math.pow(Math.min(Math.max(morph < 0.85 ? (morph-0.65)/0.2 : 1 - (morph-0.9)/0.15, 0), 1), 0.8) : this.prevElastic;\r\n      let prevAngle = 2 * Math.PI - Math.PI / (7 - morph) - Math.PI / 8 * elastic;\r\n      const initAngle = prevAngle;\r\n\r\n\r\n      if(this.opts.state.zoomDir === 1) {\r\n        morph = Math.min(Math.max((morph - 0.25) / 0.4, 0), 1);\r\n        this.prevElastic = elastic;\r\n      } else {\r\n        morph = Math.min(Math.max((morph * 2.4) - 1.4, 0), 1);\r\n      }\r\n\r\n\r\n      angles = [];\r\n      radius = settings.PIE_RADIUS * (zoomMorph < 1 ? 2.31 : 1) * dpi; // during zoom animation use clipping, then use plain geometry to create sectors\r\n      cx = dpi * (dims.w / 2 + dims.l);\r\n      cy = dpi * (dims.h / 2 + dims.t + 2);\r\n      const rLen =  2 * Math.PI * radius / dpi;\r\n      const pointsPerArcLen = 1 / 13; // 1 point per each 10 pixels of arc\r\n      for(i = 0; i < colsLen; i++) {\r\n        let percentage = totalPerItem[i] / totalForAll;\r\n        percentage = percentage || 0; // absent data\r\n        const len = 2 * Math.PI * percentage;\r\n        let newAngle = prevAngle - len;\r\n        const additionalPoints = Math.round(percentage * rLen * pointsPerArcLen);\r\n        if(i === colsLen - 1) newAngle = initAngle - 2 * Math.PI;\r\n        const overlapAng = Math.PI * 2 * 0.1 / (rLen);\r\n        const yItem = ys[visibleCols[i]];\r\n        angles.push({\r\n          st: prevAngle + overlapAng,\r\n          ed: newAngle - overlapAng,\r\n          mid: prevAngle - len / 2 - overlapAng / 2,\r\n          additionalPoints: Math.max(additionalPoints, 4),\r\n          percentage: percentage === 0 ? 0 : Math.max(Math.round(percentage * 100), 1),\r\n          percentageText: percentage === 0 ? '' : (percentage < 0.01 ? '<1%' : Math.round(percentage * 100) + '%'),\r\n          ind: visibleCols[i],\r\n          value: totalPerItem[i],\r\n          label: yItem.label,\r\n          color: this.isDarkMode ? yItem.colors_n[2] : yItem.colors_d[2]\r\n        });\r\n\r\n\r\n        prevAngle = newAngle;\r\n      }\r\n\r\n      state.pieAngles = angles;\r\n    }\r\n\r\n    const yScale = dpi * (dims.h - pTop - pBottom + (mini ? 0 : -4));\r\n    const yShift = (dims.h - pBottom + (mini ? 0 : dims.t)) * dpi;\r\n\r\n    let colInd = 0;\r\n\r\n    for(i = 0; i < ysLen; i++) {\r\n      o = mini ? state[`om_${i}`] : state[`o_${i}`];\r\n\r\n      if(o <= 0) {\r\n        continue;\r\n      }\r\n\r\n      y = optYs[i].y;\r\n\r\n      const k = o * yScale;\r\n\r\n      ctx.fillStyle = this.isDarkMode ? ys[i].colors_n[0] : ys[i].colors_d[0];\r\n      ctx.globalAlpha = state[`f_${i}`] * 0.9 + 0.1;\r\n      ctx.beginPath();\r\n\r\n      if(zoomMorph === 0 || !mini) {\r\n        // use regular version to skip complex math evaluations\r\n        // despite of fact that they produce same result for morph === 0\r\n        if(zoomMorph === 0) {\r\n          if(i > 0) {\r\n            ctx.moveTo(optX[xInd2] * xScale + xShift << 0, hBottom - prevY[xInd2] + overlap << 0);\r\n            for(j = xInd2 - 1; j >= xInd1; j--) {\r\n              ctx.lineTo(optX[j] * xScale + xShift << 0, hBottom - prevY[j] + overlap << 0);\r\n            }\r\n          } else {\r\n            ctx.moveTo(optX[xInd2] * xScale + xShift << 0, hBottom << 0);\r\n            ctx.lineTo(optX[xInd1] * xScale + xShift << 0, hBottom << 0);\r\n          }\r\n\r\n          if(colInd < colsLen - 1 || hasGapsInData) {\r\n            for(j = xInd1; j <= xInd2; j++) {\r\n              const curY = (yShift - ((y[j] * k / totalPerX[j]) || 0));\r\n              const curH = hBottom - curY;\r\n              let sy = prevY[j] + curH;\r\n              if(sy > yScale) sy = yScale;\r\n              ctx.lineTo(optX[j] * xScale + xShift << 0, hBottom - sy << 0);\r\n              prevY[j] += curH;\r\n            }\r\n          } else {\r\n            ctx.lineTo(optX[xInd1] * xScale + xShift << 0, hBottom - yScale << 0);\r\n            ctx.lineTo(optX[xInd2] * xScale + xShift << 0, hBottom - yScale << 0);\r\n          }\r\n        } else {\r\n          // magic starts here\r\n          const calcTrans = (fromX: number, fromY: number, toAngle: number, toR: number) => {\r\n            let sx = 0;\r\n            let sy = 0;\r\n            if(selectionOffset && fullyVisibleCount > 1) {\r\n              sx = Math.cos(angles[colInd].mid) * selectionOffset * 8 * dpi;\r\n              sy = -Math.sin(angles[colInd].mid) * selectionOffset * 8 * dpi;\r\n            }\r\n\r\n            if(toR > radius) toR = radius;\r\n            let fromAngle = Math.atan2(cy - fromY, fromX - cx);\r\n            fromAngle = fromAngle < 0 ? Math.PI * 2 + fromAngle : fromAngle;\r\n            const fromR = Math.pow((cy - fromY) * (cy - fromY) + (fromX - cx) * (fromX - cx), 0.5);\r\n\r\n            if(Math.abs(toAngle - fromAngle) > Math.PI * (colsLen === 1 ? 1.5 : 1)) {\r\n              toAngle -= Math.PI * 2;\r\n            }\r\n            if(toAngle < -Math.PI * 2) {\r\n              toAngle -= -Math.PI * 2;\r\n            }\r\n\r\n            const ang = fromAngle + morph * (toAngle - fromAngle);\r\n            const r = fromR + morph * (toR - fromR);\r\n            const res = [\r\n              cx + Math.cos(ang) * r + sx,\r\n              cy - Math.sin(ang) * r + sy\r\n            ] as const;\r\n\r\n            return res;\r\n          };\r\n\r\n          const additionalSteps = (zoomMorph < 1 ? 4 : angles[colInd].additionalPoints);\r\n          let dist: number;\r\n          let cBot = false, cTop = false, xj: number;\r\n          var selectionOffset = state[`pieInd_${visibleCols[colInd]}`] || 0;\r\n\r\n          if(angles[colInd].percentage === 0) {\r\n            ctx.globalAlpha = 0;\r\n          }\r\n\r\n          let res = calcTrans(optX[xInd2] * xScale + xShift, hBottom - prevY[xInd2], angles[0].st, radius);\r\n          ctx.moveTo(res[0], res[1]);\r\n\r\n          if(colInd > 0) {\r\n            for(j = xInd2 - 1; j >= xInd1; j--) {\r\n              xj = optX[j] * xScale + xShift;\r\n              if(xj === cx) cBot = true;\r\n              if(xj >= cx) {\r\n                dist = (xj - cx) / (dims.w * dpi / 2);\r\n                if(morph === 0) dist = 0;\r\n                res = calcTrans(xj, hBottom - prevY[j] + overlap, angles[0].st, radius * dist);\r\n              } else {\r\n                if(!cBot) {\r\n                  cBot = true;\r\n                  const sc = (cx - xj) / (optX[j + 1] * xScale + xShift - xj);\r\n                  const sy1 = hBottom - prevY[j] + overlap;\r\n                  const sy2 = hBottom - prevY[j + 1] + overlap;\r\n                  res = calcTrans(cx, sy1 + sc * (sy2 - sy1), angles[colInd].st, 0);\r\n                  ctx.lineTo(res[0], res[1]);\r\n                }\r\n                dist = (cx - xj) / (dims.w * dpi / 2);\r\n                res = calcTrans(xj, hBottom - prevY[j] + overlap, angles[colInd].st, radius * dist);\r\n              }\r\n              ctx.lineTo(res[0], res[1]);\r\n            }\r\n          } else {\r\n            res = calcTrans(\r\n              optX[xInd1] * xScale + xShift,\r\n              hBottom,\r\n              angles[0].st,\r\n              radius\r\n            );\r\n            ctx.lineTo(res[0], res[1]);\r\n          }\r\n\r\n          if(colInd < colsLen - 1) {\r\n            let sy1: number;\r\n            for(j = 0; j <= additionalSteps; j++) {\r\n              const curY = (yShift - ((y[xInd1] * k / totalPerX[xInd1]) || 0));\r\n              const curH = hBottom - curY;\r\n              sy1 = hBottom - prevY[xInd1] + overlap;\r\n              const sy2 = hBottom - prevY[xInd1] - curH;\r\n\r\n              res = calcTrans(\r\n                optX[xInd1] * xScale + xShift,\r\n                sy1 + (j / additionalSteps) * (sy2 - sy1),\r\n                angles[colInd].st + (j / additionalSteps) * (angles[colInd].ed - angles[colInd].st),\r\n                radius\r\n              );\r\n\r\n              ctx.lineTo(res[0], res[1]);\r\n            }\r\n\r\n            for(j = xInd1; j <= xInd2; j++) {\r\n              const curY = (yShift - ((y[j] * k / totalPerX[j]) || 0));\r\n              const curH = hBottom - curY;\r\n              xj = optX[j] * xScale + xShift;\r\n\r\n              if(xj === cx) cTop = true;\r\n              if(xj <= cx) {\r\n                dist = (cx - xj) / (dims.w * dpi / 2);\r\n                var xjprev = xj;\r\n                var syprev = hBottom - prevY[j] - curH;\r\n                res = calcTrans(xj, syprev, angles[colInd].ed, radius * dist);\r\n              } else {\r\n                if(!cTop) {\r\n                  cTop = true;\r\n                  const sc = (cx - xjprev) / (xj - xjprev);\r\n                  sy1 = syprev;\r\n                  const sy2 = hBottom - prevY[j] - curH;\r\n                  res = calcTrans(cx, sy1 + sc * (sy2 - sy1), angles[colInd].ed, 0);\r\n                  ctx.lineTo(res[0], res[1]);\r\n                }\r\n                dist = (xj - cx) / (dims.w * dpi / 2);\r\n                if(morph === 0) dist = 0;\r\n                res = calcTrans(xj, hBottom - prevY[j] - curH, angles[0].st, radius * dist);\r\n              }\r\n\r\n              ctx.lineTo(res[0], res[1]);\r\n              prevY[j] += curH;\r\n            }\r\n\r\n            if(xj < cx) { // last day, haack\r\n              if(!cTop) {\r\n                res = calcTrans(cx, sy1, angles[colInd].ed, 0);\r\n                ctx.lineTo(res[0], res[1]);\r\n              }\r\n            }\r\n          } else {\r\n            for(j = 0; j <= additionalSteps; j++) {\r\n              res = calcTrans(\r\n                (optX[xInd1] + (j / additionalSteps) * (optX[xInd2] - optX[xInd1])) * xScale + xShift,\r\n                0,\r\n                angles[colInd].st + (j / additionalSteps) * (angles[0].st - 2 * Math.PI  - angles[colInd].st),\r\n                radius\r\n              );\r\n\r\n              ctx.lineTo(res[0], res[1]);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        const xw = this.opts.data.mainPeriodLen * xScale;\r\n\r\n        ctx.moveTo(optX[xInd2] * xScale + xw + xShift, hBottom - prevY[xInd2]);\r\n\r\n        if(i > 0) {\r\n          ctx.lineTo(optX[xInd2] * xScale + xShift, hBottom - prevY[xInd2]);\r\n\r\n          for(j = xInd2; j >= xInd1 + 1; j--) {\r\n            ctx.lineTo(optX[j] * xScale + xShift, hBottom - (prevY[j] + morph * (prevY[j - 1] - prevY[j])) + overlap);\r\n            ctx.lineTo(optX[j - 1] * xScale + xShift, hBottom - prevY[j - 1] + overlap);\r\n          }\r\n        } else {\r\n          ctx.lineTo(optX[xInd1] * xScale + xShift, hBottom);\r\n        }\r\n\r\n        let curHNext: number;\r\n        if(colInd < colsLen - 1) {\r\n          for(j = xInd1; j <= xInd2 - 1; j++) {\r\n            let curY = (yShift - ((y[j] * k / totalPerX[j]) || 0));\r\n            const curH = hBottom - curY;\r\n\r\n            if(j === xInd1) {\r\n              ctx.lineTo(optX[xInd1] * xScale + xShift, hBottom - prevY[xInd1] - curH);\r\n            }\r\n\r\n            curY = (yShift - ((y[j + 1] * k / totalPerX[j + 1]) || 0));\r\n            curHNext = hBottom - curY;\r\n\r\n            const yTo = prevY[j] + curH;\r\n            const yFrom = prevY[j + 1] + curHNext;\r\n\r\n            ctx.lineTo(optX[j+1] * xScale + xShift, hBottom - (yFrom + morph * (yTo - yFrom)));\r\n            ctx.lineTo(optX[j+1] * xScale + xShift, hBottom - yFrom);\r\n\r\n            if(j === xInd2 - 1) {\r\n              ctx.lineTo(optX[xInd2] * xScale + xw + xShift, hBottom - prevY[xInd2] - curHNext);\r\n            }\r\n\r\n            prevY[j] += curH;\r\n          }\r\n        } else {\r\n          ctx.lineTo(optX[xInd1] * xScale + xShift << 0, hBottom - yScale << 0);\r\n          ctx.lineTo(optX[xInd2] * xScale + xShift << 0, hBottom - yScale << 0);\r\n        }\r\n\r\n        prevY[xInd2] += curHNext;\r\n      }\r\n\r\n      ctx.closePath();\r\n      ctx.fill();\r\n\r\n      // texts\r\n      if(!mini && zoomMorph > 0 && angles[colInd].percentageText) {\r\n        const opacity = Math.pow(morph, this.opts.state.zoomDir === 1 ? 4 : 20) * o * (state[`f_${i}`] * 0.9 + 0.1);\r\n        let fontSize = Math.max(Math.min(angles[colInd].percentage * 2, 26), 10);\r\n        const rad = settings.PIE_RADIUS;\r\n        let offset = rad * 2 / 3;\r\n        const cosVal = Math.cos(angles[colInd].mid);\r\n        const sinVal = Math.sin(angles[colInd].mid);\r\n        const isOutboard = angles[colInd].percentage < opts.data.pieLabelsPercentages.outboard;\r\n\r\n        let sx = 0;\r\n        let sy = 0;\r\n        if(selectionOffset && fullyVisibleCount > 1) {\r\n          sx = cosVal * selectionOffset * 8 * dpi;\r\n          sy = -sinVal * selectionOffset * 8 * dpi;\r\n        }\r\n\r\n        ctx.fillStyle = 'white';\r\n        ctx.textAlign = 'center';\r\n        ctx.globalAlpha = opacity;\r\n\r\n        if(angles[colInd].percentage < opts.data.pieLabelsPercentages.hoverOnly) {\r\n          ctx.globalAlpha = selectionOffset * opacity;\r\n        }\r\n\r\n        if(isOutboard) {\r\n          fontSize = Math.max(fontSize, 14);\r\n          offset = rad + fontSize / 3 + 13;\r\n          ctx.fillStyle = this.isDarkMode ? ys[i].colors_n[0] : ys[i].colors_d[0];\r\n          ctx.lineWidth = 1;\r\n          ctx.strokeStyle = this.isDarkMode ? ys[i].colors_n[0] : ys[i].colors_d[0];\r\n\r\n          const lx1 = cx + sx + (cosVal * (rad - 1)) * dpi;\r\n          const ly1 = cy + sy - (sinVal * (rad - 1)) * dpi;\r\n          const lx2 = cx + sx + (cosVal * (rad + 6 * (1 - selectionOffset) - 1)) * dpi;\r\n          const ly2 = cy + sy - (sinVal * (rad + 6 * (1 - selectionOffset) - 1)) * dpi;\r\n\r\n          ctx.beginPath();\r\n          ctx.moveTo(lx1, ly1);\r\n          ctx.lineTo(lx2, ly2);\r\n          ctx.stroke();\r\n        }\r\n\r\n        const dx = (cosVal * offset) * (fullyVisibleInd === colInd ? textToCenter : 1);\r\n        const tx = cx + sx + dx * dpi + (isOutboard ? (fontSize / 4 * angles[colInd].percentageText.length * dx / offset) * dpi : 0);\r\n        const ty = cy + sy - (sinVal * offset) * (fullyVisibleInd === colInd ? textToCenter : 1) * dpi;\r\n\r\n        ctx.font = `${opts.settings.FONT.bold} ${fontSize * dpi}px ${opts.settings.FONT.family}`;\r\n        ctx.fillText(angles[colInd].percentageText, tx, ty + fontSize * dpi / 2.9);// fontSize * dpi / 2.9 cause text render point is baseline\r\n\r\n        ctx.globalAlpha = 1;\r\n      }\r\n\r\n      colInd++;\r\n    }\r\n\r\n    ctx.globalAlpha = 1;\r\n\r\n    mini && this.opts.ctx.drawImage(this.$canvas, dims.l * dpi, dims.t * dpi);\r\n  }\r\n}\r\n","import {getXIndex} from './utils';\r\nimport {TChartUnitOptions} from './types';\r\n\r\ntype C = {[key in `ox_${string}`]: number};\r\nexport type TChartAxisXItem = {\r\n  tp: number,\r\n  xi: number,\r\n  i: number,\r\n  state: {\r\n    ind: string\r\n  } & C,\r\n};\r\n\r\nexport default class TAxisX {\r\n  private opts: TChartUnitOptions;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private items: Record<string, TChartAxisXItem>;\r\n  private isDarkMode: boolean;\r\n  private noAnimation: boolean;\r\n  private prevXStep: number;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.ctx = opts.ctx;\r\n    this.items = {};\r\n\r\n    this.setAnimation(false);\r\n  }\r\n\r\n  onResize() {\r\n    this.setAnimation(false);\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n  }\r\n\r\n  setAnimation(enabled: boolean) {\r\n    this.noAnimation = !enabled;\r\n  }\r\n\r\n  hideItem(ind: string, k: number) {\r\n    this.items[ind].tp = 2;\r\n\r\n    this.opts.animator.add([{\r\n      prop: `ox_${ind}`,\r\n      state: this.items[ind].state,\r\n      end: 0,\r\n      duration: this.noAnimation ? 0 : 200 * k,\r\n      tween: 'linear',\r\n      group: {top: true},\r\n      cbEnd: this.deleteItem\r\n    }]);\r\n  }\r\n\r\n  deleteItem = (state: TChartAxisXItem['state']) => {\r\n    delete this.items[state.ind];\r\n  };\r\n\r\n  render(opacity: number) {\r\n    const opts = this.opts;\r\n    const dpi = opts.settings.dpi;\r\n    const x = opts.data.x;\r\n    const state = opts.state;\r\n    const pRight = opts.settings.PADD[1];\r\n    const pLeft = opts.settings.PADD[3];\r\n    const animator = opts.animator;\r\n    const xLen = x.length;\r\n    const dims = this.opts.state.dims.axisX;\r\n    const dimsDates = this.opts.state.dims.dates;\r\n    const zoomMode = state.zoomMode;\r\n    const zoomMorph = state.zoomMorph === undefined ? 0 : state.zoomMorph;\r\n\r\n    const x1 = Math.floor(getXIndex(x, state.x1));\r\n    const x2 = Math.ceil(getXIndex(x, state.x2));\r\n    let x1End = x1;\r\n    let x2End = x2;\r\n\r\n    const isPointHasWidth = opts.graphStyle === 'bar' || opts.graphStyle === 'step';\r\n\r\n    // fast calculation of average space occupied by label\r\n    const space = (state.zoomMode && opts.data.details ?\r\n      opts.data.details.maxXTickLength :\r\n      opts.data.maxXTickLength) * 9;\r\n\r\n    const offsetForBarGraphMain = isPointHasWidth ? this.opts.data.mainPeriodLen : 0;\r\n    const offsetForBarGraphDetail = isPointHasWidth ? this.opts.data.detailPeriodLen : 0;\r\n    const offsetForBarGraph = offsetForBarGraphMain + (offsetForBarGraphDetail - offsetForBarGraphMain) * zoomMorph;\r\n    const offsetForBarGraphScale = offsetForBarGraphMain * (1 - zoomMorph);\r\n\r\n    const xStepMain = (dims.w - pRight - pLeft) / Math.round((state.x2 - state.x1 + offsetForBarGraphMain) / this.opts.data.mainPeriodLen);\r\n    const xStepDetail = (dims.w - pRight - pLeft) / Math.round((state.x2 - state.x1 + offsetForBarGraphDetail) / this.opts.data.detailPeriodLen);\r\n    const xStep = xStepMain + (xStepDetail - xStepMain) * zoomMorph;\r\n\r\n    let skipEachMain = Math.pow(2, Math.ceil(Math.log2(space / xStepMain)));\r\n    let skipEachDetail = Math.pow(2, Math.ceil(Math.log2(space / xStepDetail)));\r\n    const lxScale = (dims.w - pLeft - pRight) / (state.x2 - state.x1 + offsetForBarGraphScale);\r\n\r\n    if(skipEachMain < 1) {\r\n      skipEachMain = 1;\r\n    }\r\n    if(skipEachDetail < 1) {\r\n      skipEachDetail = 1;\r\n    }\r\n\r\n    this.ctx.font = `${this.opts.settings.FONT.normal} ${11 * dpi}px ${this.opts.settings.FONT.family}`;\r\n    this.ctx.textAlign = 'center';\r\n    this.ctx.fillStyle = this.opts.settings.COLORS.axis.x;\r\n\r\n    const changeSpeed = this.prevXStep ? (this.prevXStep > xStepMain ? this.prevXStep / xStepMain : xStepMain / this.prevXStep) : 1;\r\n    let k = 1 / Math.pow(changeSpeed, 5);\r\n\r\n    if(zoomMode && zoomMorph === 1) {\r\n      k /= 2;\r\n    }\r\n\r\n    this.prevXStep = xStepMain;\r\n    const x1Start = Math.max(x1 - Math.ceil((pLeft + space * 0.5) / xStep), 0);\r\n    const x2Start = Math.min(x2 + Math.ceil((pRight + space * 0.5) / xStep), x.length - 1);\r\n\r\n    if(zoomMode) {\r\n      const x1AnimItem = this.opts.animator.get('x1');\r\n      const x2AnimItem = this.opts.animator.get('x2');\r\n      x1End = x1AnimItem ? x1AnimItem.end : this.opts.state['x1'];\r\n      x2End = x2AnimItem ? x2AnimItem.end : this.opts.state['x2'];\r\n      x1End = Math.floor(getXIndex(x, x1End));\r\n      x2End = Math.floor(getXIndex(x, x2End));\r\n    }\r\n\r\n    let dtOffset: number;\r\n    if(zoomMode) {\r\n      const tmp1 = Math.max(x[this.opts.state.detailInd1], this.opts.state.xMainMin);\r\n      const tmp2 = Math.min(x[this.opts.state.detailInd2], this.opts.state.xMainMax);\r\n      dtOffset = Math.round((tmp2 - tmp1) / this.opts.data.mainPeriodLen) + (isPointHasWidth ? 0 : 1);\r\n    }\r\n\r\n    for(let i = x1Start; i <= x2Start; i++) {\r\n      let shown = (i % skipEachMain) === 0;\r\n      let prefix = 'm';\r\n\r\n      if(zoomMode) {\r\n        if(i < this.opts.state.detailInd1) {\r\n          shown = (i % skipEachMain) === 0 && zoomMorph < 1;\r\n        } else if(i <= this.opts.state.detailInd2) {\r\n          shown = (Math.max(i - this.opts.state.detailInd1, 0) % skipEachDetail) === 0;\r\n          prefix = 'd';\r\n        } else {\r\n          shown = (Math.max(i - (this.opts.state.detailInd2 - this.opts.state.detailInd1 + 1 - dtOffset), 0) % skipEachMain) === 0 && zoomMorph < 1;\r\n        }\r\n      }\r\n\r\n      const id = x[i] + prefix;\r\n      let item = this.items[id];\r\n\r\n      if(shown) {\r\n        if(!item) { // not exist or removed\r\n          item = {\r\n            tp: 1,\r\n            xi: x[i],\r\n            i: i,\r\n            state: {\r\n              ind: id\r\n            }\r\n          };\r\n          item.state[`ox_${id}`] = 0;\r\n          this.items[id] = item;\r\n\r\n          animator.add([{\r\n            prop: `ox_${id}`,\r\n            state: item.state,\r\n            end: 1,\r\n            duration: this.noAnimation ? 0 : 200 * k,\r\n            tween: 'linear',\r\n            group: {top: true}\r\n          }]);\r\n        } else if(item.tp === 2) { // is hiding\r\n          item.tp = 1;\r\n\r\n          animator.add([{\r\n            prop: `ox_${id}`,\r\n            state: item.state,\r\n            end: 1,\r\n            duration: this.noAnimation ? 0 : 200 * k,\r\n            tween: 'linear',\r\n            group: {top: true}\r\n          }]);\r\n        }\r\n      } else {\r\n        if(item && item.tp === 1) { // is showing or shown\r\n          this.hideItem(id, k);\r\n        }\r\n      }\r\n\r\n      if(item && item.state[`ox_${id}`] > 0) {\r\n        const xc = (item.xi - state.x1 + offsetForBarGraph / 2) * lxScale + pLeft;\r\n\r\n        this.ctx.globalAlpha = item.state[`ox_${id}`] * opacity;\r\n\r\n        if(xc + space / 2 >= dims.l && xc - space / 2 <= dims.l + dims.w) {\r\n          // first and last labels manual align\r\n          const xAligned = (xc + dims.l) * dpi;\r\n\r\n          this.ctx.fillText(opts.data.datesShort[i], xAligned, (dims.t + 9) * dpi);\r\n        }\r\n      }\r\n    }\r\n\r\n    // remove the old ones, which is outside the current range\r\n    for(const i in this.items) {\r\n      const item = this.items[i];\r\n      if(item.tp === 1 && ((item.xi < state.x1 - pLeft / lxScale) || (item.xi > state.x2 + pRight / lxScale))) {\r\n        this.hideItem(i, k);\r\n      }\r\n    }\r\n\r\n    this.ctx.globalAlpha = 1;\r\n\r\n    if(!opts.data.subchart.show) {\r\n      return;\r\n    }\r\n\r\n    let datesStr: string;\r\n    if(zoomMode && zoomMorph === 1) {\r\n      x2End--;\r\n    }\r\n\r\n    if(x2End < x1End) x2End = x1End;\r\n\r\n    if(opts.data.datesRange[x1End] === opts.data.datesRange[x2End]) {\r\n      datesStr = opts.data.datesRange[x1End];\r\n    } else {\r\n      datesStr = opts.data.datesRange[x1End] + ' — ' + opts.data.datesRange[x2End];\r\n    }\r\n\r\n    let fontSize = opts.settings.DATES_FONT_SIZE;\r\n    if(!fontSize) {\r\n      fontSize = 13;\r\n      if(dims.w < 375) {\r\n        fontSize = 11;\r\n      }\r\n    }\r\n\r\n    this.ctx.font = `${opts.settings.FONT[opts.settings.DATES_WEIGHT]} ${fontSize * dpi}px ${opts.settings.FONT.family}`;\r\n    this.ctx.textAlign = opts.settings.DATES_SIDE;\r\n    this.ctx.fillStyle = opts.settings.COLORS.dates;\r\n    this.ctx.fillText(\r\n      datesStr,\r\n      (dimsDates.l + (opts.settings.DATES_SIDE === 'right' ? dimsDates.w : 0)) * dpi,\r\n      (dimsDates.t + dimsDates.h - 7) * dpi\r\n    );\r\n  }\r\n}\r\n","import {getFormatter, yTickFormatter} from './utils';\r\nimport {TChartAnimationProperty, TChartState, TChartUnitOptions} from './types';\r\n\r\nexport type TChartAxisYItem = {\r\n  animated?: boolean,\r\n  numLeft?: number,\r\n  strLeft: string,\r\n  numRight?: number,\r\n  strRight: string,\r\n  newTo?: number,\r\n  oProp?: `${'oyt' | 'oy'}_${number}`,\r\n  yProp?: `${'yyt' | 'yy'}_${number}`,\r\n  y?: number,\r\n  state?: {\r\n    id: string | number,\r\n    numLeft?: number,\r\n    strLeft?: string,\r\n    numRight?: number,\r\n    strRight?: string\r\n  } & {[key in TChartAxisYItem['oProp'] | TChartAxisYItem['yProp']]: number}\r\n};\r\n\r\nexport default class TAxisY {\r\n  private opts: TChartUnitOptions;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private uuid: number;\r\n  private items: {[id: string]: TChartAxisYItem};\r\n  private isDarkMode: boolean;\r\n  private noAnimation: boolean;\r\n  private forceUpdate: boolean;\r\n  private animationInProgress: boolean;\r\n  private animationEndTimeout: number;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.ctx = opts.ctx;\r\n    this.uuid = 1;\r\n    this.items = {};\r\n\r\n    this.setAnimation(false);\r\n    this.setForceUpdate(false);\r\n  }\r\n\r\n  onResize() {\r\n    this.setAnimation(false);\r\n    this.setForceUpdate(false);\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n  }\r\n\r\n  setAnimation(enabled: boolean) {\r\n    this.noAnimation = !enabled;\r\n  }\r\n\r\n  setForceUpdate(enabled: boolean) {\r\n    this.forceUpdate = enabled;\r\n  }\r\n\r\n  deleteItem = (state: TChartState) => {\r\n    delete this.items[state.id];\r\n  };\r\n\r\n  render(opacity: number) {\r\n    let calcDataLeft: ReturnType<TAxisY['calcAxisData']>, calcDataRight: ReturnType<TAxisY['calcAxisData']>;\r\n    if(this.opts.pairY) {\r\n      calcDataLeft = this.calcAxisData('y1_0', 'y2_0');\r\n      calcDataRight = this.calcAxisData('y1_1', 'y2_1');\r\n\r\n      // left axis is main, if both need animation priority goes to left\r\n      if((calcDataRight.needAnimation && !calcDataLeft.needAnimation) || this.opts.state['o_0'] < 1) {\r\n        this.updateAxisState('y1_1', 'y2_1', 'numRight', calcDataRight, calcDataLeft, calcDataRight);\r\n      } else {\r\n        this.updateAxisState('y1_0', 'y2_0', 'numLeft', calcDataLeft, calcDataLeft, calcDataRight);\r\n      }\r\n    } else {\r\n      calcDataLeft = this.calcAxisData('y1', 'y2');\r\n      this.updateAxisState('y1', 'y2', 'numLeft', calcDataLeft, calcDataLeft, calcDataLeft);\r\n    }\r\n\r\n    this.renderState(opacity);\r\n  }\r\n\r\n  calcAxisData(y1Name: 'y1' | `y1_${number}`, y2Name: 'y2' | `y2_${number}`) {\r\n    const state = this.opts.state;\r\n    const pTop = this.opts.settings.PADD[0];\r\n    const pBottom = this.opts.settings.PADD[2];\r\n    const linesCount = Math.floor(this.opts.settings.Y_AXIS_RANGE);\r\n    let withAnimation = false;\r\n\r\n    const y1AnimItem = this.opts.animator.get(y1Name);\r\n    const y2AnimItem = this.opts.animator.get(y2Name);\r\n    const y1 = y1AnimItem ? y1AnimItem.end : state[y1Name];\r\n    const y2 = y2AnimItem ? y2AnimItem.end : state[y2Name];\r\n\r\n    const yRealStep = Math.round((y2 - y1) / this.opts.settings.Y_AXIS_RANGE);\r\n    const yRealStart = y1;\r\n\r\n    const yCurRange = state[y2Name] - state[y1Name];\r\n    const changeSpeedFirst = state[y1Name] > y1 ? state[y1Name] / y1 : y1 / state[y1Name];\r\n    const changeSpeedLast = state[y2Name] > y2 ? state[y2Name] / y2 : y2 / state[y2Name];\r\n\r\n    const yEndRange = y2 - y1;\r\n    const yScaleCur = (this.opts.state.dims.axisYLines.h - pTop - pBottom) / yCurRange;\r\n    const yScaleEnd = (this.opts.state.dims.axisYLines.h - pTop - pBottom) / yEndRange;\r\n\r\n    if(changeSpeedFirst > 1.05 || changeSpeedLast > 1.05 || this.forceUpdate) {\r\n      withAnimation = true;\r\n    }\r\n\r\n    // this.items[0] check that items have been created\r\n    withAnimation = this.items[0] && withAnimation && !this.noAnimation && !this.animationInProgress;\r\n\r\n    return {\r\n      needAnimation: withAnimation,\r\n      y1: y1,\r\n      y2: y2,\r\n      yRealStep: yRealStep,\r\n      yRealStart: yRealStart,\r\n      yScaleCur: yScaleCur,\r\n      yScaleEnd: yScaleEnd\r\n    };\r\n  }\r\n\r\n  updateAxisState(\r\n    y1Name: 'y1' | `y1_${number}`,\r\n    y2Name: 'y2' | `y2_${number}`,\r\n    numName: 'numLeft' | 'numRight',\r\n    baseData: ReturnType<TAxisY['calcAxisData']>,\r\n    leftData: ReturnType<TAxisY['calcAxisData']>,\r\n    rightData: ReturnType<TAxisY['calcAxisData']>\r\n  ) {\r\n    const opts = this.opts;\r\n    const settings = opts.settings;\r\n    const dpi = opts.settings.dpi;\r\n    const state = opts.state;\r\n    const pTop = opts.settings.PADD[0];\r\n    const pBottom = opts.settings.PADD[2];\r\n    const pLeft = opts.settings.PADD[3];\r\n    const pRight = opts.settings.PADD[1];\r\n    const animator = opts.animator;\r\n    let item: TChartAxisYItem;\r\n    const linesCount = Math.floor(opts.settings.Y_AXIS_RANGE);\r\n    let startedAtLeastOne = false;\r\n    const dims = this.opts.state.dims.axisYLines;\r\n\r\n    if(baseData.needAnimation) {\r\n      this.animationInProgress = true;\r\n    }\r\n\r\n    for(let i = 0; i <= linesCount; ++i) {\r\n      const numReal = baseData.yRealStart + Math.round(baseData.yRealStep * i);\r\n      const numRealLeft = leftData.yRealStart + Math.round(leftData.yRealStep * i);\r\n      const numRealRight = rightData.yRealStart + Math.round(rightData.yRealStep * i);\r\n      const formatter = getFormatter('yTickFormatter', opts.data, state.zoomMorph) as any as typeof yTickFormatter;\r\n\r\n      const numDisplayLeftStr = formatter(numRealLeft, leftData.yRealStep);\r\n\r\n      // then first graph is hidden we will show rounded range and numbers for second one\r\n      // else we will fit second graphic exactly to same bound as first one,\r\n      // thus loosing the ability to use rounded numvers and range for second graph (but showing it exactly as needed)\r\n      // upd disabled let it always be fractional even then first graph is not seen\r\n      // to avoid small 2nd graph scale on first graph is off (cause no fit to first graph is needed)\r\n      const numDisplayRightStr = formatter(Math.max(numRealRight, 0), rightData.yRealStep, true /* , this.opts.state['e_0']*/ );\r\n\r\n      if(baseData.needAnimation) {\r\n        const oldFrom = dims.t + dims.h - pBottom - (numReal - baseData.y1) * baseData.yScaleEnd;\r\n        const oldTo = dims.t + dims.h - pBottom - (this.items[i][numName] - baseData.y1) * baseData.yScaleEnd;\r\n        const newFrom = dims.t + dims.h - pBottom - (numReal - state[y1Name]) * baseData.yScaleCur;\r\n        const newTo = dims.t + dims.h - pBottom - (numReal - baseData.y1) * baseData.yScaleEnd;\r\n\r\n        // if stays on the same pos - no animation\r\n        if(Math.abs(oldTo - newTo) < 1) {\r\n          this.items[i] = {\r\n            numLeft: numRealLeft,\r\n            strLeft: numDisplayLeftStr,\r\n            numRight: numRealRight,\r\n            strRight: numDisplayRightStr,\r\n            y: newTo\r\n          };\r\n        } else {\r\n          startedAtLeastOne = true;\r\n\r\n          // hide previous one static\r\n          this.uuid++;\r\n          item = {\r\n            animated: true,\r\n            strLeft: this.items[i].strLeft,\r\n            strRight: this.items[i].strRight,\r\n            oProp: `oyt_${this.uuid}`,\r\n            yProp: `yyt_${this.uuid}`,\r\n            state: {\r\n              id: `t_${this.uuid}`\r\n            }\r\n          };\r\n          item.state[item.oProp] = 1;\r\n          item.state[item.yProp] = oldFrom;\r\n          this.items[item.state.id] = item;\r\n\r\n          animator.add([{\r\n            prop: item.oProp,\r\n            state: item.state,\r\n            end: 0,\r\n            duration: this.noAnimation ? 0 : 200,\r\n            tween: 'linear',\r\n            group: {top: true}\r\n          }, {\r\n            prop: item.yProp,\r\n            state: item.state,\r\n            end: oldTo,\r\n            duration: this.noAnimation ? 0 : (!this.forceUpdate ? 500 : 333),\r\n            fixed: !this.forceUpdate,\r\n            tween: !this.forceUpdate ? 'exp' : null,\r\n            speed: 0.18,\r\n            group: {top: true},\r\n            cbEnd: this.deleteItem\r\n          }]);\r\n\r\n          delete this.items[i];\r\n\r\n          // show new which one will became static after animation end\r\n          this.uuid++;\r\n          item = {\r\n            animated: true,\r\n            strLeft: numDisplayLeftStr,\r\n            strRight: numDisplayRightStr,\r\n            oProp: `oy_${i}`,\r\n            yProp: `yy_${i}`,\r\n            state: {\r\n              id: i,\r\n              numLeft: numRealLeft,\r\n              strLeft: numDisplayLeftStr,\r\n              numRight: numRealRight,\r\n              strRight: numDisplayRightStr\r\n            }\r\n          }\r\n          item.state[item.oProp] = 0;\r\n          item.state[item.yProp] = newFrom;\r\n          this.items[item.state.id] = item;\r\n\r\n          const props: TChartAnimationProperty<typeof item['state']>[] = [{\r\n            prop: item.oProp,\r\n            state: item.state,\r\n            end: 1,\r\n            duration: this.noAnimation ? 0 : 200,\r\n            tween: 'linear',\r\n            group: {top: true}\r\n          }, {\r\n            prop: item.yProp,\r\n            state: item.state,\r\n            end: newTo,\r\n            duration: this.noAnimation ? 0 : (!this.forceUpdate ? 500 : 333),\r\n            fixed: !this.forceUpdate,\r\n            tween: !this.forceUpdate ? 'exp' : null,\r\n            speed: 0.18,\r\n            group: {top: true},\r\n            cbEnd: (state) => {\r\n              this.items[state.id] = {\r\n                numLeft: state.numLeft,\r\n                strLeft: state.strLeft,\r\n                numRight: state.numRight,\r\n                strRight: state.strRight,\r\n                y: state[`yy_${state.id as number}`]\r\n              }\r\n\r\n              clearTimeout(this.animationEndTimeout);\r\n              this.animationEndTimeout = window.setTimeout(() => {\r\n                this.animationInProgress = false;\r\n              }, 30);\r\n            }\r\n          }];\r\n\r\n          animator.add(props);\r\n        }\r\n      } else {\r\n        if(this.items[i] && this.items[i].animated) {\r\n          this.items[i].numLeft = numRealLeft;\r\n          this.items[i].strLeft = numDisplayLeftStr;\r\n          this.items[i].numRight = numRealRight;\r\n          this.items[i].strRight = numDisplayRightStr;\r\n          this.items[i].state.numLeft = numRealLeft;\r\n          this.items[i].state.strLeft = numDisplayLeftStr;\r\n          this.items[i].state.numRight = numRealRight;\r\n          this.items[i].state.strRight = numDisplayRightStr;\r\n        } else {\r\n          this.items[i] = {\r\n            numLeft: numRealLeft,\r\n            strLeft: numDisplayLeftStr,\r\n            numRight: numRealRight,\r\n            strRight: numDisplayRightStr,\r\n            y: dims.t + dims.h - pBottom - (numReal - baseData.y1) * baseData.yScaleEnd\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if(baseData.needAnimation && !startedAtLeastOne) {\r\n      this.animationInProgress = false;\r\n    }\r\n\r\n    this.forceUpdate = false;\r\n  }\r\n\r\n  renderState(opacity: number) {\r\n    const dpi = this.opts.settings.dpi;\r\n    const dimsLeft = this.opts.state.dims.axisYLeft;\r\n    const dimsRight = this.opts.state.dims.axisYRight;\r\n    const dimsLines = this.opts.state.dims.axisYLines;\r\n    const ys = this.opts.data.ys;\r\n\r\n    this.ctx.font = `${this.opts.settings.FONT.normal} ${11 * dpi}px ${this.opts.settings.FONT.family}`;\r\n    this.ctx.strokeStyle = this.opts.settings.COLORS.grid;\r\n    this.ctx.lineWidth = 1 * dpi;\r\n    this.ctx.lineCap = 'square';\r\n    // @ts-ignore\r\n    this.ctx.lineJoin = 'square';\r\n\r\n    for(const i in this.items) {\r\n      const item = this.items[i];\r\n\r\n      let o: number, y: number;\r\n      if(item.animated) {\r\n        y = item.state[item.yProp];\r\n        o = item.state[item.oProp];\r\n      } else {\r\n        y = item.y;\r\n        o = 1;\r\n      }\r\n\r\n      if((y - 6) >= 0 && (y - 16) <= dimsLeft.h) {\r\n        this.ctx.globalAlpha = o  * (this.opts.pairY ? this.opts.state['o_0'] : 1) * opacity;\r\n        this.ctx.textAlign = 'left';\r\n\r\n        if(this.opts.pairY) {\r\n          this.ctx.fillStyle = this.isDarkMode ? ys[0].colors_n[1] : ys[0].colors_d[1];\r\n        } else {\r\n          this.ctx.fillStyle = this.opts.settings.COLORS.axis.y;\r\n        }\r\n\r\n        this.ctx.fillText(item.strLeft, dimsLeft.l * dpi, (y - 7) * dpi);\r\n\r\n        if(this.opts.pairY) {\r\n          this.ctx.globalAlpha = o * this.opts.state['o_1'] * opacity;\r\n          this.ctx.textAlign = 'right';\r\n          this.ctx.fillStyle = this.isDarkMode ? ys[1].colors_n[1] : ys[1].colors_d[1];\r\n\r\n          this.ctx.fillText(item.strRight, (dimsRight.l + dimsRight.w) * dpi, (y - 7) * dpi);\r\n        }\r\n      }\r\n\r\n      y = (y << 0) - 0.5;\r\n      if(y >= 0 && y <= dimsLeft.h) {\r\n        this.ctx.beginPath();\r\n        this.ctx.globalAlpha = o * opacity;\r\n        this.ctx.moveTo(dimsLines.l * dpi, (y) * dpi);\r\n        this.ctx.lineTo((dimsLines.l + dimsLines.w) * dpi, (y) * dpi);\r\n        this.ctx.stroke();\r\n      }\r\n    }\r\n\r\n    this.ctx.globalAlpha = 1;\r\n  }\r\n}\r\n","import {getXIndex} from './utils';\r\nimport {TChartUnitOptions} from './types';\r\n\r\nexport default class TBars {\r\n  private opts: TChartUnitOptions;\r\n  private filteredX1: number[];\r\n  private filteredX2: number[];\r\n  private filteredJ: number[];\r\n  private prevY: number[];\r\n  private $canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private isDarkMode: boolean;\r\n  private w: number;\r\n  private h: number;\r\n  private cached: string;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.filteredX1 = [];\r\n    this.filteredX2 = [];\r\n    this.filteredJ = [];\r\n    this.prevY = [];\r\n\r\n    // fillrect dramatically drops fps on iPhones after 5th (4s and 5 are ok, but 5s, SE, 7+ etc are freezing)\r\n    // on direct onscreen canvas draw, so for this case we should use offscreen canvas\r\n    this.$canvas = document.createElement('canvas');\r\n    this.ctx = this.$canvas.getContext('2d', {alpha: false})!;\r\n  }\r\n\r\n  onResize() {\r\n    const dpi = this.opts.settings.dpi;\r\n    const dims = this.opts.additional.mini ? this.opts.state.dims.mini : this.opts.state.dims.graph;\r\n    this.$canvas.width = dims.w * dpi;\r\n    this.$canvas.height = dims.h * dpi;\r\n    this.cached = '';\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n  }\r\n\r\n  render() {\r\n    let i: number, j: number, y: number[], o: number, y1: number, y2: number, xScale: number, yScale: number, yShift: number, yFrom: number[];\r\n    const opts = this.opts;\r\n    const ys = opts.data.ys;\r\n    const state = opts.state;\r\n    const mini = opts.additional.mini;\r\n    const x1 = mini ? state.xg1 : state.x1;\r\n    const x2 = mini ? state.xg2 : state.x2;\r\n    const settings = opts.settings;\r\n    const w = this.w;\r\n    const h = this.h;\r\n    const pTop = settings[`PADD${mini ? '_MINI_BAR' : ''}`][0];\r\n    const pRight = settings[`PADD${mini ? '_MINI_BAR' : ''}`][1];\r\n    const pBottom = settings[`PADD${mini ? '_MINI_BAR' : ''}`][2];\r\n    const pLeft = settings[`PADD${mini ? '_MINI_BAR' : ''}`][3];\r\n    const x = opts.data.x;\r\n    const dpi = opts.settings.dpi;\r\n    let xInd1: number, xInd2: number;\r\n    const ctx = this.ctx;\r\n    const dims = mini ? state.dims.mini : state.dims.graph;\r\n    const zoom = state.zoomMode;\r\n    const d1 = state.detailInd1;\r\n    const d2 = state.detailInd2;\r\n    const zoomMorph = state.zoomMorph === undefined ? 0 : state.zoomMorph;\r\n\r\n    const filteredX1 = this.filteredX1;\r\n    const filteredX2 = this.filteredX2;\r\n    const filteredJ = this.filteredJ;\r\n    const prevY = this.prevY;\r\n\r\n    const ysLength = ys.length;\r\n\r\n    // cache both versions (big one is useful for selection)\r\n    const hash = [dims.w, dims.h, mini ? state.xg1 : state.x1, mini ? state.xg2 : state.x2, this.isDarkMode, zoom];\r\n    if(!mini) {\r\n      hash.push(state.y1);\r\n      hash.push(state.y2);\r\n    }\r\n    for(i = 0; i < ysLength; i++) {\r\n      hash.push(mini ? state[`om_${i}`] : state[`o_${i}`]);\r\n      hash.push(state[`f_${i}`]);\r\n    }\r\n    const joinedHash = hash.join(',');\r\n\r\n    if(joinedHash === this.cached) {\r\n      this.opts.ctx.drawImage(this.$canvas, dims.l * dpi, dims.t * dpi);\r\n      if(mini) return;\r\n    }\r\n\r\n    xScale = (dims.w - pRight - pLeft) / (x2 - x1 + this.opts.data.mainPeriodLen * (1 - zoomMorph));\r\n    xInd1 = Math.floor(getXIndex(x, x1 - pLeft / xScale));\r\n    xInd2 = Math.ceil(getXIndex(x, x2 + pRight / xScale));\r\n\r\n    if(zoom && zoomMorph === 1) {\r\n      if(xInd1 < this.opts.state.xg1Ind) xInd1 = this.opts.state.xg1Ind;\r\n      if(xInd2 > this.opts.state.xg2Ind) xInd2 = this.opts.state.xg2Ind - 1;\r\n    }\r\n    xScale *= dpi;\r\n    const xShift = (pLeft) * dpi - x1 * xScale;\r\n    const hBottom = (dims.h - pBottom) * dpi;\r\n\r\n    const xwMain = this.opts.data.mainPeriodLen * xScale;\r\n    const xwDetail = this.opts.data.detailPeriodLen * xScale;\r\n\r\n    if(joinedHash !== this.cached) {\r\n      ctx.fillStyle = this.opts.settings.COLORS.background;\r\n      ctx.fillRect(0, 0, dims.w * dpi, dims.h * dpi);\r\n\r\n      let filteredInd = 0;\r\n\r\n      for(j = xInd1; j <= xInd2; j++) {\r\n        let xw: number;\r\n        if(zoom) {\r\n          if(j >= d1 && j <= d2) {\r\n            xw = xwDetail;\r\n          } else {\r\n            xw = xwMain;\r\n          }\r\n        } else {\r\n          xw = xwMain;\r\n        }\r\n\r\n        const tmpX1 = Math.round(x[j] * xScale + xShift);\r\n        const tmpX2 = Math.round(x[j] * xScale + xShift + xw);\r\n\r\n        if(tmpX2 - tmpX1 > 0) {\r\n          filteredX1[filteredInd] = tmpX1;\r\n          filteredX2[filteredInd] = tmpX2;\r\n          filteredJ[filteredInd] = j;\r\n          prevY[filteredInd] = 0;\r\n          filteredInd++;\r\n        }\r\n      }\r\n\r\n      for(i = 0; i < ysLength; i++) {\r\n        o = mini ? state[`om_${i}`] : state[`o_${i}`];\r\n\r\n        if(o > 0) {\r\n          y = ys[i].y;\r\n          yFrom = ys[i].yFrom;\r\n\r\n          y1 = mini ? state['y1m'] : state['y1'];\r\n          y2 = mini ? state['y2m'] : state['y2'];\r\n\r\n          yScale = dpi * (dims.h - pTop - pBottom) / (y2 - y1);\r\n          yShift = (dims.h - pBottom) * dpi + y1 * yScale;\r\n\r\n          const k = o * yScale;\r\n\r\n          ctx.fillStyle = this.isDarkMode ? ys[i].colors_n[0] : ys[i].colors_d[0];\r\n          ctx.globalAlpha = state[`f_${i}`] * 0.9 + 0.1;\r\n\r\n          let yVal;\r\n\r\n          ctx.beginPath();\r\n          ctx.moveTo(Math.round(x[xInd2] * xScale + xShift + (zoomMorph === 1 ? xwDetail : xwMain)), Math.round(hBottom));\r\n\r\n          if(i > 0) {\r\n            for(j = filteredInd - 1; j >= 0; j--) {\r\n              const curY = hBottom - prevY[j];\r\n              ctx.lineTo(filteredX2[j], Math.round(curY));\r\n              ctx.lineTo(filteredX1[j], Math.round(curY));\r\n            }\r\n          } else {\r\n            ctx.lineTo(Math.round(x[xInd1] * xScale + xShift), Math.round(hBottom));\r\n          }\r\n\r\n          for(j = 0; j < filteredInd; j++) {\r\n            const jInd = filteredJ[j];\r\n            if(zoom) {\r\n              if(jInd >= d1 && jInd <= d2) {\r\n                yVal = yFrom[jInd] + zoomMorph * (y[jInd] - yFrom[jInd]);\r\n              } else {\r\n                yVal = y[jInd] + zoomMorph * (y[d1] - y[jInd]); // approximation\r\n              }\r\n            } else {\r\n              yVal = y[jInd];\r\n            }\r\n\r\n            yVal = yVal || 0; // absent values\r\n\r\n            const curY = ((yShift - yVal * k));\r\n            const curH = hBottom - curY;\r\n\r\n            prevY[j] += curH;\r\n\r\n            ctx.lineTo(filteredX1[j], Math.round(hBottom - prevY[j]));\r\n            ctx.lineTo(filteredX2[j], Math.round(hBottom - prevY[j]));\r\n          }\r\n\r\n          ctx.closePath();\r\n          ctx.fill();\r\n        }\r\n      }\r\n\r\n      ctx.globalAlpha = 1;\r\n\r\n      this.opts.ctx.drawImage(this.$canvas, dims.l * dpi, dims.t * dpi);\r\n    }\r\n\r\n    // tooltip selection\r\n    if(state.barInd > -1 && !mini) {\r\n      this.opts.ctx.fillStyle = this.opts.settings.COLORS.barsSelectionBackground;\r\n      this.opts.ctx.globalAlpha = state.barO;\r\n      this.opts.ctx.fillRect(0, 0, dims.w * dpi, dims.h * dpi);\r\n      let yStart = 0;\r\n\r\n      for(i = 0; i < ysLength; i++) {\r\n        o = state[`o_${i}`];\r\n        if(o > 0) {\r\n          y = ys[i].y;\r\n          yFrom = ys[i].yFrom;\r\n          y1 = state['y1'] as number;\r\n          y2 = state['y2'] as number;\r\n          yScale = dpi * (dims.h - pTop - pBottom) / (y2 - y1);\r\n          yShift = (dims.h - pBottom) * dpi + y1 * yScale;\r\n          const k = o * yScale;\r\n\r\n          this.opts.ctx.fillStyle = this.isDarkMode ? ys[i].colors_n[0] : ys[i].colors_d[0];\r\n          this.opts.ctx.globalAlpha = state[`f_${i}`] * 0.9 + 0.1;\r\n\r\n          let yVal: number, xw: number;\r\n          if(zoom) {\r\n            if(state.barInd >= d1 && state.barInd <= d2) {\r\n              yVal = yFrom[state.barInd] + zoomMorph * (y[state.barInd] - yFrom[state.barInd]);\r\n              xw = xwDetail;\r\n            } else {\r\n              xw = xwMain;\r\n              yVal = y[state.barInd] + zoomMorph * (y[d1] - y[state.barInd]); // approx\r\n            }\r\n          } else {\r\n            yVal = y[state.barInd];\r\n            xw = xwMain;\r\n          }\r\n\r\n          yVal = yVal || 0; // absent values\r\n\r\n          const yEnd = hBottom - ((yShift - yVal * k)) + yStart;\r\n\r\n          this.opts.ctx.fillRect(\r\n            Math.round(x[state.barInd] * xScale + xShift),\r\n            Math.round(hBottom - yStart + dims.t * dpi),\r\n            Math.max(Math.round(xw), 1),\r\n            Math.round(yStart) - Math.round(yEnd)\r\n          );\r\n\r\n          yStart = yEnd;\r\n        }\r\n      }\r\n\r\n      ctx.globalAlpha = 1;\r\n    }\r\n\r\n    this.cached = joinedHash;\r\n  }\r\n}\r\n","import {drawRoundedRect, drawRoundedRect2} from './utils';\r\nimport {TChartAnimationProperty, TChartUnitOptions} from './types';\r\n\r\nexport default class TComposer {\r\n  private opts: TChartUnitOptions;\r\n  public $canvas: HTMLCanvasElement;\r\n  public ctx: CanvasRenderingContext2D;\r\n  private deviceSpeed: number;\r\n  private isDarkMode: boolean;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.$canvas = document.createElement('canvas');\r\n    this.$canvas.className = 'tchart--graph-canvas';\r\n    this.ctx = this.$canvas.getContext('2d')!;\r\n    opts.$parent.appendChild(this.$canvas);\r\n    this.deviceSpeed = undefined;\r\n  }\r\n\r\n  onResize() {\r\n    const dpi = this.opts.settings.dpi;\r\n    const dims = this.opts.state.dims.composer;\r\n    this.$canvas.width = dims.w * dpi;\r\n    this.$canvas.height = dims.h * dpi;\r\n    this.render({top: true, bottom: true});\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n    // full reset canvas due to clearing areas optimizations\r\n    this.onResize();\r\n  }\r\n\r\n  render(groups: TChartAnimationProperty['group']) {\r\n    if(this.deviceSpeed === undefined) {\r\n      const t1 = performance.now();\r\n      const prevX = this.opts.state.x1;\r\n      this.opts.state.x1 = this.opts.state.xMainMin;\r\n      this.renderInner(groups);\r\n      const t2 = performance.now();\r\n      this.opts.state.x1 = prevX;\r\n      this.deviceSpeed = (t2 - t1) / (this.opts.graphStyle === 'line' || this.opts.graphStyle === 'step' ? 1.5 : 2) / (this.opts.data.x.length * this.opts.data.ys.length);\r\n      this.opts.state.deviceSpeed = this.deviceSpeed;\r\n    }\r\n    this.renderInner(groups);\r\n  }\r\n\r\n  renderInner(groups: TChartAnimationProperty['group']) {\r\n    const dims = this.opts.state.dims;\r\n    const state = this.opts.state;\r\n    const ctx = this.ctx;\r\n    const dpi = this.opts.settings.dpi;\r\n    const settings = this.opts.settings;\r\n    const padd = settings.PADD;\r\n    const zoomMorph = state.zoomMorph === undefined ? 0 : state.zoomMorph;\r\n    const pieChartAnimating = this.opts.graphStyle === 'area' && state.zoomMode && zoomMorph < 1;\r\n    const pieChartAnimated = this.opts.graphStyle === 'area' && state.zoomMode && zoomMorph === 1;\r\n\r\n    if(this.opts.data.master) {\r\n      this.$canvas.style.opacity = '' + state.masterVisibility;\r\n    }\r\n\r\n    if(this.opts.data.slave) {\r\n      this.$canvas.style.opacity = '' + state.slaveVisibility;\r\n      this.opts.chart.$el.style.visibility = state.slaveVisibility > 0 ? 'visible' : 'hidden';\r\n    }\r\n\r\n    if(groups.top) {\r\n      ctx.clearRect(dims.dates.l * dpi, dims.dates.t * dpi, dims.dates.w * dpi, dims.dates.h * dpi);\r\n\r\n      if(this.opts.graphStyle === 'line' || this.opts.graphStyle === 'step' || (this.opts.graphStyle === 'area' && zoomMorph > 0) || (this.opts.data.slave && state.slaveVisibility < 1) || (this.opts.data.master && state.masterVisibility < 1)) {\r\n        if(pieChartAnimated) {\r\n          // for pie chart, need a little bit more region to clear, cause of outboard labels\r\n          ctx.clearRect(dims.graph.l * dpi, (dims.graph.t - 18) * dpi, dims.graph.w * dpi, (dims.graph.h + 30) * dpi);\r\n        } else {\r\n          ctx.clearRect(dims.graph.l * dpi, dims.graph.t * dpi, dims.graph.w * dpi, dims.graph.h * dpi);\r\n        }\r\n      }\r\n\r\n      // hack, clear only edges\r\n      if((this.opts.graphStyle === 'area' && zoomMorph === 0) || (this.opts.graphStyle === 'bar')) {\r\n        ctx.clearRect(dims.graph.l * dpi, dims.graph.t * dpi, dims.graph.w * dpi, (settings.PADD[0] + 4) * dpi);\r\n        ctx.clearRect(dims.graph.l * dpi, (dims.graph.t + padd[0]) * dpi, padd[3] * dpi, (dims.graph.h - padd[0] - padd[2]) * dpi);\r\n        ctx.clearRect(dims.graph.l * dpi, (dims.graph.t + dims.graph.h - padd[2]) * dpi, dims.graph.w * dpi, (padd[2]) * dpi);\r\n        ctx.clearRect((dims.graph.l + dims.graph.w - padd[1] - 1) * dpi, (dims.graph.t + padd[0]) * dpi, (padd[1] + 1) * dpi, (dims.graph.h - padd[0] - padd[2]) * dpi);\r\n      }\r\n\r\n      if(!pieChartAnimating && !pieChartAnimated) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.rect(dims.graph.l * dpi, dims.graph.t * dpi, dims.graph.w * dpi, dims.graph.h * dpi);\r\n        ctx.clip();\r\n      }\r\n\r\n      if(this.opts.data.master && state.masterVisibility < 1) {\r\n        ctx.save();\r\n        const scale = (1 - state.masterVisibility) * 5 + 1;\r\n        ctx.translate(dims.graph.w * state.zoomSpecialOrigin * (1 - scale), 0);\r\n        ctx.scale(scale, 1);\r\n      }\r\n\r\n      if(this.opts.data.slave && state.slaveVisibility < 1) {\r\n        ctx.save();\r\n        const scale = state.slaveVisibility;\r\n        ctx.translate(dims.graph.w * state.zoomSpecialOrigin * (1 - scale), 0);\r\n        ctx.scale(scale, 1);\r\n      }\r\n\r\n      let opacity = 1;\r\n      if(this.opts.graphStyle === 'area' && state.zoomMode) {\r\n        opacity = 1 - zoomMorph;\r\n      }\r\n\r\n      if(pieChartAnimating) {\r\n        ctx.save();\r\n        const r = settings.PIE_RADIUS;\r\n        const cw = dims.graph.w + zoomMorph * (r * 2 - dims.graph.w);\r\n        const ch = dims.graph.h - 42 + zoomMorph * (r * 2 - dims.graph.h + 42);\r\n\r\n        drawRoundedRect2(\r\n          ctx,\r\n          dpi,\r\n          cw,\r\n          ch,\r\n          (dims.graph.w - cw) / 2 + dims.graph.l,\r\n          (dims.graph.h - 42 - ch) / 2 + dims.graph.t + 23,\r\n          zoomMorph * r\r\n        );\r\n\r\n        ctx.clip();\r\n      }\r\n\r\n      this.opts.chart.graph.render();\r\n\r\n      if(pieChartAnimating) {\r\n        ctx.restore();\r\n      }\r\n\r\n      if(this.opts.data.master && state.masterVisibility < 1) {\r\n        ctx.restore();\r\n      }\r\n\r\n      if(this.opts.data.slave && state.slaveVisibility < 1) {\r\n        ctx.restore();\r\n      }\r\n\r\n      this.opts.chart.axisY.render(opacity);\r\n      this.opts.chart.fade.render();\r\n\r\n      if(!pieChartAnimating && !pieChartAnimated) {\r\n        ctx.restore();\r\n      }\r\n\r\n      this.opts.chart.axisX.render(opacity);\r\n    }\r\n\r\n    if(groups.bottom) {\r\n      ctx.clearRect((dims.graph.l) * dpi, (dims.handle.t - 1) * dpi, (dims.graph.w) * dpi, (dims.handle.h + 2) * dpi);\r\n\r\n      let subchartShown = this.opts.data.subchart.show;\r\n      const isNotSpecialAndChangedSubchart = !this.opts.data.master && !this.opts.data.slave && this.opts.data.details && this.opts.data.subchart.show !== this.opts.data.details.subchart.show;\r\n\r\n      if(isNotSpecialAndChangedSubchart) {\r\n        if(subchartShown) {\r\n          subchartShown = zoomMorph < 1;\r\n        } else {\r\n          subchartShown = zoomMorph > 0;\r\n        }\r\n      }\r\n\r\n      if(subchartShown) {\r\n        ctx.save();\r\n        drawRoundedRect(ctx, dpi, dims.mini.w, dims.mini.h, dims.mini.l, dims.mini.t, 7);\r\n        ctx.clip();\r\n        this.opts.chart.mini.render();\r\n        ctx.restore();\r\n        this.opts.chart.handle.render();\r\n      }\r\n\r\n      if(isNotSpecialAndChangedSubchart) {\r\n        if(zoomMorph > 0 && zoomMorph < 1) {\r\n          ctx.fillStyle = this.opts.settings.COLORS.background;\r\n          ctx.globalAlpha = this.opts.data.subchart.show ? zoomMorph : 1 - zoomMorph;\r\n          ctx.fillRect((dims.graph.l) * dpi, (dims.handle.t - 1) * dpi, (dims.graph.w) * dpi, (dims.handle.h + 2) * dpi);\r\n          ctx.globalAlpha = 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {TChartUnitOptions} from './types';\r\n\r\nexport default class TFade {\r\n  private opts: TChartUnitOptions;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private $fadeTop: HTMLCanvasElement;\r\n  private ctxFadeTop: CanvasRenderingContext2D;\r\n  private $fadeBottom: HTMLCanvasElement;\r\n  private ctxFadeBottom: CanvasRenderingContext2D;\r\n  private isDarkMode: boolean;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.ctx = opts.ctx;\r\n\r\n    if(this.opts.graphStyle !== 'area') {\r\n      this.$fadeTop = document.createElement('canvas');\r\n      this.ctxFadeTop = this.$fadeTop.getContext('2d');\r\n\r\n      if(this.opts.graphStyle !== 'bar') {\r\n        this.$fadeBottom = document.createElement('canvas');\r\n        this.ctxFadeBottom = this.$fadeBottom.getContext('2d');\r\n      }\r\n    }\r\n  }\r\n\r\n  onResize() {\r\n    const dpi = this.opts.settings.dpi;\r\n    const dimsTop = this.opts.state.dims.fadeTop;\r\n    const dimsBottom = this.opts.state.dims.fadeBottom;\r\n    const backgroundRgbJoined = this.opts.settings.COLORS.backgroundRgb.join(', ');\r\n\r\n    if(this.opts.graphStyle !== 'area') {\r\n      const gradientTop = this.ctxFadeTop.createLinearGradient(0, 0, 0, dimsTop.h * dpi);\r\n      gradientTop.addColorStop(0, `rgba(${backgroundRgbJoined}, 1)`);\r\n      gradientTop.addColorStop(1, `rgba(${backgroundRgbJoined}, 0)`);\r\n      this.$fadeTop.width = dimsTop.w * dpi;\r\n      this.$fadeTop.height = dimsTop.h * dpi;\r\n      this.ctxFadeTop.fillStyle = gradientTop;\r\n      this.ctxFadeTop.fillRect(0, 0, dimsTop.w * dpi, dimsTop.h * dpi);\r\n\r\n      if(this.opts.graphStyle !== 'bar') {\r\n        const gradientBottom = this.ctxFadeBottom!.createLinearGradient(0, 0, 0, dimsBottom.h * dpi);\r\n        gradientBottom.addColorStop(0, `rgba(${backgroundRgbJoined}, 0)`);\r\n        gradientBottom.addColorStop(1, `rgba(${backgroundRgbJoined}, 1)`);\r\n        this.$fadeBottom.width = dimsBottom.w * dpi;\r\n        this.$fadeBottom.height = dimsBottom.h * dpi;\r\n        this.ctxFadeBottom.fillStyle = gradientBottom;\r\n        this.ctxFadeBottom.fillRect(0, 0, dimsBottom.w * dpi, dimsBottom.h * dpi);\r\n      }\r\n    }\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n    this.onResize();\r\n  }\r\n\r\n  render() {\r\n    const dpi = this.opts.settings.dpi;\r\n    const dimsTop = this.opts.state.dims.fadeTop;\r\n    const dimsBottom = this.opts.state.dims.fadeBottom;\r\n\r\n    this.$fadeTop && this.ctx.drawImage(this.$fadeTop, dimsTop.l * dpi, dimsTop.t * dpi);\r\n    this.$fadeBottom && this.ctx.drawImage(this.$fadeBottom, dimsBottom.l * dpi, dimsBottom.t * dpi);\r\n  }\r\n}\r\n","import {isTouchDevice} from './utils';\r\nimport {TChartUnitOptions} from './types';\r\n\r\nexport default class TDrag {\r\n  private opts: TChartUnitOptions & {\r\n    $el: HTMLElement,\r\n    useElForMove?: boolean,\r\n    onDragStart?: (params: {\r\n      pageX: number,\r\n      pageY: number,\r\n      isTouch: boolean\r\n    }) => any,\r\n    onDragMove?: (params: {\r\n      canceled: boolean,\r\n      d: number,\r\n      pageX: number,\r\n      pageY: number,\r\n      isTouch: boolean\r\n    }) => any,\r\n    onDragEnd?: (params: {\r\n      isTouch: boolean,\r\n      e: Event\r\n    }) => any,\r\n    noPrevent?: boolean\r\n  };\r\n  private isTouch: boolean;\r\n  private skipMoveEnd: boolean;\r\n  private scroll: string | undefined;\r\n  private x: number;\r\n  private y: number;\r\n  private dX: number;\r\n  private dY: number;\r\n  private pageX: number;\r\n  private pageY: number;\r\n  private prevDx: number | undefined;\r\n  private prevDy: number | undefined;\r\n  private pointerTimeout: number;\r\n\r\n  constructor(opts: TDrag['opts']) {\r\n    this.opts = opts;\r\n    this.isTouch = isTouchDevice();\r\n    this.skipMoveEnd = true;\r\n\r\n    const $global = opts.useElForMove ? opts.$el : window;\r\n\r\n    opts.$el.addEventListener(this.isTouch ? 'touchstart' : 'mousedown', this.onDragStart, {\r\n      passive: false\r\n    });\r\n\r\n    $global.addEventListener(this.isTouch ? 'touchmove' : 'mousemove', this.onDragMove, {\r\n      passive: false\r\n    });\r\n\r\n    $global.addEventListener(this.isTouch ? 'touchend' : 'mouseup', this.onDragEnd, {\r\n      passive: false\r\n    });\r\n  }\r\n\r\n  onDragStart = (e: any) => {\r\n    this.skipMoveEnd = true;\r\n    clearTimeout(this.pointerTimeout);\r\n\r\n    if(this.isTouch) {\r\n      if(e.touches.length > 1) return;\r\n    }\r\n\r\n    this.scroll = undefined;\r\n    this.x = this.isTouch ? e.touches[0].pageX : e.pageX;\r\n    this.y = this.isTouch ? e.touches[0].pageY : e.pageY;\r\n    this.dX = 0;\r\n    this.dY = 0;\r\n    this.pageX = this.x;\r\n    this.pageY = this.y;\r\n    delete this.prevDx;\r\n    delete this.prevDy;\r\n\r\n    const cancelDrag = this.opts.onDragStart({\r\n      pageX: this.x,\r\n      pageY: this.y,\r\n      isTouch: this.isTouch\r\n    });\r\n\r\n    if(cancelDrag) return;\r\n\r\n    this.skipMoveEnd = false;\r\n  };\r\n\r\n  onDragMove = (e: any) => {\r\n    if(this.skipMoveEnd) return;\r\n\r\n    if(this.scroll === 'v') {\r\n      return;\r\n    }\r\n\r\n    const x = this.isTouch ? e.touches[0].pageX : e.pageX;\r\n    const y = this.isTouch ? e.touches[0].pageY : e.pageY;\r\n\r\n    this.dX = x - this.x;\r\n    this.dY = y - this.y;\r\n\r\n    this.pageX = x;\r\n    this.pageY = y;\r\n\r\n    if(this.isTouch) {\r\n      if(this.scroll === 'h') {\r\n        !this.opts.noPrevent && e.preventDefault();\r\n      } else if(Math.abs(this.dX) > 5 || Math.abs(this.dY) > 5) {\r\n        this.scroll = Math.abs(this.dX) > Math.abs(this.dY) ? 'h' : 'v';\r\n      }\r\n    }\r\n\r\n    if(this.prevDx !== this.dX || this.prevDy !== this.dY) {\r\n      this.opts.onDragMove && this.opts.onDragMove({\r\n        canceled: this.scroll === 'v',\r\n        d: this.dX,\r\n        pageX: this.pageX,\r\n        pageY: this.pageY,\r\n        isTouch: this.isTouch\r\n      });\r\n\r\n      this.prevDx = this.dX;\r\n      this.prevDy = this.dY;\r\n    }\r\n  };\r\n\r\n  onDragEnd = (e: any) => {\r\n    if(this.skipMoveEnd) return;\r\n\r\n    this.skipMoveEnd = true;\r\n\r\n    this.opts.onDragEnd && this.opts.onDragEnd({\r\n      isTouch: this.isTouch,\r\n      e: e\r\n    });\r\n  };\r\n}\r\n","import TDrag from './drag';\r\nimport {isTouchDevice, getElemPagePos, drawRoundedRect} from './utils';\r\nimport {TChartUnitOptions} from './types';\r\n\r\nexport default class THandle {\r\n  private opts: TChartUnitOptions;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private isTouch: boolean | undefined;\r\n  private $canvas: HTMLCanvasElement | undefined;\r\n  private drag: TDrag;\r\n  private canvasPos: ReturnType<typeof getElemPagePos>;\r\n  private tp: string | undefined;\r\n  private firstMove: boolean | undefined;\r\n  private prevX1: number | undefined;\r\n  private prevX2: number | undefined;\r\n  private isDarkMode: boolean | undefined;\r\n  private minRange: number | undefined;\r\n  private _x1: number;\r\n  private _x2: number;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.ctx = opts.ctx;\r\n\r\n    this.isTouch = isTouchDevice();\r\n    this.$canvas = opts.$canvas;\r\n\r\n    this.drag = new TDrag({\r\n      $el: this.$canvas,\r\n      onDragStart: (params) => {\r\n        this.canvasPos = getElemPagePos(this.$canvas);\r\n        const dx = params.pageX - this.canvasPos.x;\r\n        const dy = params.pageY - this.canvasPos.y;\r\n        this._x1 = opts.state.x1;\r\n        this._x2 = opts.state.x2;\r\n        this.constrainHandleSize(false);\r\n        this.tp = this.getTp(\r\n          dx - opts.settings.PADD[3],\r\n          dy - (this.opts.state.dims.composer.h - opts.settings.MINI_GRAPH_HEIGHT - opts.settings.MINI_GRAPH_BOTTOM),\r\n          params.isTouch\r\n        );\r\n        this.firstMove = true;\r\n        return !this.tp;\r\n      },\r\n      onDragMove: (params) => {\r\n        this.onDragMove(params.d);\r\n        this.firstMove = false;\r\n      },\r\n      onDragEnd: (params) => {\r\n      }\r\n    });\r\n\r\n    this.trackMouse(true);\r\n  }\r\n\r\n  getTp(x: number, y: number, isTouch: boolean) {\r\n    const dims = this.opts.state.dims.handle;\r\n    const state = this.opts.state;\r\n    const zoomMode = this.opts.state.zoomMode;\r\n\r\n    if(y < 0 || y > dims.h) return '';\r\n\r\n    let xw = isTouch ? dims.w * 0.3 : 10;\r\n    if(isTouch && xw < 14) xw = 14;\r\n    if(isTouch && xw > 30) xw = 30;\r\n\r\n    const xl1 = this.prevX1 + (isTouch ? (state.x1 === state.xg1 ? -5 : -15) : 0);\r\n    let xl2 = xl1 + xw;\r\n\r\n    const xr2 = this.prevX2 + (isTouch ? (state.x2 === state.xg2 ? 5 : 15) : 0);\r\n    let xr1 = xr2 - xw;\r\n\r\n    if(Math.abs(state.x2 - state.x1 - (zoomMode ? this.opts.data.mainPeriodLen : this.minRange)) < 0.01) {\r\n      if(state.x2 === state.xg2) {\r\n        xr1 = xr2 + 1;\r\n      }\r\n      if(state.x1 === state.xg1) {\r\n        xl2 = xl1 - 1;\r\n      }\r\n    }\r\n\r\n    if(x > xl2 && x < xr1) {\r\n      return 'both';\r\n    }\r\n\r\n    if(x >= xl1 && x <= xl2) {\r\n      return 'start';\r\n    }\r\n\r\n    if(x >= xr1 && x <= xr2) {\r\n      return 'end';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  trackMouse(enabled: boolean) {\r\n    if(this.isTouch) return;\r\n\r\n    this.$canvas.addEventListener('mousemove', this.onMouseMove);\r\n    this.$canvas.addEventListener('mouseleave', this.onMouseLeave);\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.$canvas.classList.remove('tchart--graph-canvas__handle-pointer');\r\n    this.$canvas.classList.remove('tchart--graph-canvas__handle-grab');\r\n    this.$canvas.classList.remove('tchart--graph-canvas__handle-col-resize');\r\n    delete this.canvasPos;\r\n  };\r\n\r\n  onMouseMove = (e: MouseEvent) => {\r\n    this.canvasPos = this.canvasPos || getElemPagePos(this.$canvas);\r\n    const dx = e.pageX - this.canvasPos.x;\r\n    const dy = e.pageY - this.canvasPos.y;\r\n    const tp = this.getTp(\r\n      dx - this.opts.settings.PADD[3],\r\n      dy - (this.opts.state.dims.composer.h - this.opts.settings.MINI_GRAPH_HEIGHT - this.opts.settings.MINI_GRAPH_BOTTOM),\r\n      false\r\n    );\r\n\r\n    const cursors: Record<string, string> = {\r\n      '': '',\r\n      'both': this.opts.settings.isIE ? 'pointer' : 'grab',\r\n      'start': 'col-resize',\r\n      'end': 'col-resize'\r\n    };\r\n\r\n    this.onMouseLeave();\r\n    cursors[tp] && this.$canvas.classList.add('tchart--graph-canvas__handle-' + cursors[tp]);\r\n  };\r\n\r\n  onResize(rect?: any) {\r\n    this.constrainHandleSize(true);\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n  }\r\n\r\n  constrainHandleSize(updateHandle: boolean) {\r\n    const dims = this.opts.state.dims.handle;\r\n    const xScale = dims.w / (this.opts.state.xg2 - this.opts.state.xg1);\r\n    const minRange = 32 / xScale; // 45 min handle width\r\n    let x1 = this.opts.state.x1;\r\n    let x2 = this.opts.state.x2;\r\n    const xg1 = this.opts.state.xg1;\r\n    const xg2 = this.opts.state.xg2;\r\n\r\n    this.minRange = minRange;\r\n\r\n    if(x2 - x1 < minRange) {\r\n      x2 = x1 + minRange;\r\n\r\n      if(x2 > xg2) {\r\n        x2 = xg2;\r\n        x1 = x2 - minRange;\r\n      }\r\n\r\n      updateHandle && this.opts.additional.cb(x1, x2, 'constraint');\r\n    }\r\n  }\r\n\r\n  onDragMove(d: number) {\r\n    const dims = this.opts.state.dims.handle;\r\n    const tp = this.tp;\r\n    const state = this.opts.state;\r\n    const per = (d / dims.w) * (state.xg2 - state.xg1);\r\n    let x1, x2;\r\n    const _x1 = this._x1;\r\n    const _x2 = this._x2;\r\n\r\n    if(tp === 'both') {\r\n      x1 = _x1 + per;\r\n      x2 = _x2 + per;\r\n      if(x1 < state.xg1) {\r\n        x1 = state.xg1;\r\n        x2 = state.xg1 + _x2 - _x1;\r\n      }\r\n      if(x2 > state.xg2) {\r\n        x1 = state.xg2 - (_x2 - _x1);\r\n        x2 = state.xg2;\r\n      }\r\n    }\r\n\r\n    if(tp === 'start') {\r\n      x2 = state.x2;\r\n      x1 = Math.min(Math.max(_x1 + per, state.xg1), x2 - this.minRange);\r\n    }\r\n\r\n    if(tp === 'end') {\r\n      x1 = state.x1;\r\n      x2 = Math.max(Math.min(_x2 + per, state.xg2), x1 + this.minRange);\r\n    }\r\n\r\n    if(state.x1 === x1 && state.x2 === x2) return;\r\n\r\n    this.opts.additional.cb(x1, x2, tp, this.firstMove);\r\n  }\r\n\r\n  render() {\r\n    const dims = this.opts.state.dims.handle;\r\n    const dpi = this.opts.settings.dpi;\r\n    const state = this.opts.state;\r\n    const xScale = 1 / (state.xg2 - state.xg1);\r\n    const x1 = Math.round((state.x1 - state.xg1) * xScale * dims.w);\r\n    const x2 = Math.round((state.x2 - state.xg1) * xScale * dims.w);\r\n    const ctx = this.ctx;\r\n\r\n    ctx.fillStyle = this.opts.settings.COLORS.miniMask;\r\n    drawRoundedRect(ctx, dpi, x1 + 4, dims.h - 2, dims.l, dims.t + 1, [7, 0, 0, 7]);\r\n    ctx.fill();\r\n    drawRoundedRect(ctx, dpi, dims.w - x2 + 4, dims.h - 2, dims.l + x2 - 4, dims.t + 1, [0, 7, 7, 0]);\r\n    ctx.fill();\r\n\r\n    // * Extra border around handle frame\r\n    // if(!this.isDarkMode && this.opts.graphStyle !== 'line' && this.opts.graphStyle !== 'step') {\r\n    //   ctx.fillStyle = '#fff';\r\n    //   drawRoundedRect(ctx, dpi, 12, dims.h + 2, dims.l + x1 - 1, dims.t - 1, [8, 0, 0, 8]);\r\n    //   ctx.fill();\r\n    //   drawRoundedRect(ctx, dpi, 12, dims.h + 2, dims.l + x2 - 11, dims.t - 1, [0, 8, 8, 0]);\r\n    //   ctx.fill();\r\n    // }\r\n\r\n    ctx.fillStyle = this.opts.settings.COLORS.miniFrame;\r\n    drawRoundedRect(ctx, dpi, 10, dims.h, dims.l + x1, dims.t, [7, 0, 0, 7]);\r\n    ctx.fill();\r\n    drawRoundedRect(ctx, dpi, 10, dims.h, dims.l + x2 - 10, dims.t, [0, 7, 7, 0]);\r\n    ctx.fill();\r\n\r\n    ctx.fillRect((dims.l + x1 + 10) * dpi, (dims.t) * dpi, (x2 - x1 - 20) * dpi, dpi);\r\n    ctx.fillRect((dims.l + x1 + 10) * dpi, (dims.t + dims.h - 1) * dpi, (x2 - x1 - 20) * dpi, dpi);\r\n\r\n    ctx.strokeStyle = '#fff';\r\n    this.ctx.lineCap = 'round';\r\n    this.ctx.lineJoin = 'round';\r\n    this.ctx.lineWidth = 2 * dpi;\r\n    ctx.beginPath();\r\n    ctx.moveTo((dims.l + x1 + 5) * dpi, (dims.t + 17) * dpi);\r\n    ctx.lineTo((dims.l + x1 + 5) * dpi, (dims.t + 25) * dpi);\r\n    ctx.moveTo((dims.l + x2 - 5) * dpi, (dims.t + 17) * dpi);\r\n    ctx.lineTo((dims.l + x2 - 5) * dpi, (dims.t + 25) * dpi);\r\n    ctx.stroke();\r\n\r\n    this.prevX1 = x1;\r\n    this.prevX2 = x2;\r\n  }\r\n}\r\n","import {getXIndex} from './utils';\r\nimport {TChartUnitOptions} from './types';\r\n\r\nexport default class TLines {\r\n  private opts: TChartUnitOptions;\r\n  private $canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private cached: string;\r\n  private isDarkMode: boolean;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n\r\n    this.$canvas = document.createElement('canvas');\r\n    this.ctx = this.$canvas.getContext('2d', {alpha: true});\r\n  }\r\n\r\n  onResize() {\r\n    const dpi = this.opts.settings.dpi;\r\n    const dims = this.opts.additional.mini ? this.opts.state.dims.mini : this.opts.state.dims.graph;\r\n    this.$canvas.width = dims.w * dpi;\r\n    this.$canvas.height = dims.h * dpi;\r\n    this.cached = '';\r\n    this.ctx.fillStyle = this.opts.settings.COLORS.background;\r\n    this.ctx.fillRect(0, 0, dims.w * dpi, dims.h * dpi);\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n  }\r\n\r\n  render() {\r\n    let i: number, j: number, y: number[], o: number, y1: number, y2: number, xScale: number, yScale: number, yShift: number, e: boolean, yFrom: number[];\r\n    const opts = this.opts;\r\n    const ys = opts.data.ys;\r\n    const state = opts.state;\r\n    const mini = opts.additional.mini;\r\n    const toCache = mini || ((opts.data.master && state.masterVisibility < 1 && state.masterVisibility > 0) || (opts.data.slave && state.slaveVisibility < 1 && state.slaveVisibility > 0));\r\n    const x1 = mini ? state.xg1 : state.x1;\r\n    const x2 = mini ? state.xg2 : state.x2;\r\n    const settings = opts.settings;\r\n    const pTop = settings[`PADD${mini ? '_MINI' : ''}`][0];\r\n    const pRight = settings[`PADD${mini ? '_MINI' : ''}`][1];\r\n    const pBottom = settings[`PADD${mini ? '_MINI' : ''}`][2];\r\n    const pLeft = settings[`PADD${mini ? '_MINI' : ''}`][3];\r\n    const x = opts.data.x;\r\n    const dpi = opts.settings.dpi;\r\n    let xInd1, xInd2;\r\n    const ctx = toCache ? this.ctx : this.opts.ctx;\r\n    const dims = mini ? state.dims.mini : state.dims.graph;\r\n    const zoom = state.zoomMode;\r\n    const d1 = state.detailInd1;\r\n    const d2 = state.detailInd2;\r\n    const morph = state.zoomMorph === undefined ? 0 : state.zoomMorph;\r\n    const ysLen = ys.length;\r\n    const isStepMode = opts.graphStyle === 'step';\r\n\r\n    xScale = (dims.w - pRight - pLeft) / (x2 - x1 + (isStepMode ? this.opts.data.mainPeriodLen * (1 - morph) : 0));\r\n    xInd1 = Math.floor(getXIndex(x, x1 - pLeft / xScale));\r\n    xInd2 = Math.ceil(getXIndex(x, x2 + pRight / xScale));\r\n    xScale *= dpi;\r\n    const xShift = (pLeft + (toCache ? 0 : dims.l)) * dpi - x1 * xScale;\r\n\r\n    if(isStepMode && zoom && morph === 1) {\r\n      if(xInd1 < this.opts.state.xg1Ind) xInd1 = this.opts.state.xg1Ind;\r\n      if(xInd2 > this.opts.state.xg2Ind) xInd2 = this.opts.state.xg2Ind - 1;\r\n    }\r\n\r\n    let xw: number;\r\n    const xwMain = this.opts.data.mainPeriodLen * xScale;\r\n    const xwDetail = this.opts.data.detailPeriodLen * xScale;\r\n\r\n    // Cache rendered version\r\n    if(toCache) {\r\n      const hash = [dims.w, dims.h, mini ? state.xg1 : state.x1, mini ? state.xg2 : state.x2, this.isDarkMode, zoom];\r\n      if(!mini) {\r\n        hash.push(state.y1 as number);\r\n        hash.push(state.y2 as number);\r\n      }\r\n      for(i = 0; i < ysLen; i++) {\r\n        hash.push(mini ? state[`om_${i}`] : state[`o_${i}`]);\r\n        hash.push(state[`f_${i}`]);\r\n      }\r\n      const joinedHash = hash.join(',');\r\n\r\n      if(joinedHash === this.cached) {\r\n        this.opts.ctx.drawImage(this.$canvas, dims.l * dpi, dims.t * dpi);\r\n        return;\r\n      }\r\n\r\n      this.cached = joinedHash;\r\n\r\n      ctx.clearRect(0, 0, dims.w * dpi, dims.w * dpi);\r\n    }\r\n\r\n    // console.log(mini, this.opts.data.master ? 'master' : '', this.opts.data.slave ? 'slave' : '', 'render');\r\n\r\n    const lineWidth = (opts.additional.mini ? 1 : (opts.data.strokeWidth === 'auto' ? (ysLen > 5 ? 1 : 2) : opts.data.strokeWidth)) * dpi;\r\n    const lineWidthShift = lineWidth % 2 === 0 ? 0 : 0.5;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.lineCap = opts.additional.mini ? 'square' : 'round';\r\n    // @ts-ignore\r\n    ctx.lineJoin = opts.additional.mini ? 'square' : 'round';\r\n\r\n    for(i = 0; i < ysLen; i++) {\r\n      o = mini ? state[`om_${i}`] : state[`o_${i}`];\r\n      e = state[`e_${i}`];\r\n\r\n      if(o <= 0) {\r\n        continue;\r\n      }\r\n\r\n      y = ys[i].y;\r\n      yFrom = ys[i].yFrom;\r\n\r\n      if(opts.pairY) {\r\n        y1 = mini ? state[`y1m_${i}`] : state[`y1_${i}`];\r\n        y2 = mini ? state[`y2m_${i}`] : state[`y2_${i}`];\r\n      } else {\r\n        if(mini) {\r\n          if(e && o < 1) {\r\n            y1 = state['y1m_show'];\r\n            y2 = state['y2m_show'];\r\n          } else if(!e && o < 1) {\r\n            y1 = state['y1m_hidd'];\r\n            y2 = state['y2m_hidd'];\r\n          } else {\r\n            y1 = state['y1m'];\r\n            y2 = state['y2m'];\r\n          }\r\n        } else {\r\n          y1 = state['y1'];\r\n          y2 = state['y2'];\r\n        }\r\n      }\r\n\r\n      yScale = dpi * (dims.h - pTop - pBottom) / (y2 - y1);\r\n      yShift = (dims.h - pBottom + (toCache ? 0 : dims.t)) * dpi + y1 * yScale;\r\n\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = this.isDarkMode ? ys[i].colors_n[0] : ys[i].colors_d[0];\r\n      ctx.globalAlpha = o * (state[`f_${i}`] * 0.9 + 0.1);\r\n\r\n      let yVal: number;\r\n      let xc: number;\r\n      let minY = Number.MAX_VALUE;\r\n      let maxY = -Number.MAX_VALUE;\r\n      let prevXc = -Number.MAX_VALUE;\r\n      let prevYc: number;\r\n      let hasPrev = false;\r\n      let needMove = true;\r\n\r\n      for(j = xInd1; j <= xInd2; j++) {\r\n        if(zoom) {\r\n          if(j >= d1 && j <= d2) {\r\n            yVal = yFrom[j] + morph * (y[j] - yFrom[j]);\r\n            xw = xwDetail;\r\n          } else {\r\n            yVal = y[j] + morph * (y[d1] - y[j]); // approx\r\n            xw = xwMain;\r\n          }\r\n        } else {\r\n          yVal = y[j];\r\n          xw = xwMain;\r\n        }\r\n\r\n        // Skip absent values\r\n        if(isNaN(yVal)) {\r\n          needMove = true;\r\n          continue;\r\n        }\r\n\r\n        xc = x[j] * xScale + xShift << 0;\r\n        const yc = yShift - yVal * yScale << 0;\r\n\r\n        if(xc > prevXc || (isStepMode && j === d2 + 1)) {\r\n          // Merge vertical lines into one\r\n          if(hasPrev) {\r\n            if(prevYc === minY) {\r\n              ctx.moveTo(prevXc + lineWidthShift, maxY - lineWidthShift);\r\n              ctx.lineTo(prevXc + lineWidthShift, minY - lineWidthShift);\r\n            } else {\r\n              ctx.moveTo(prevXc + lineWidthShift, minY - lineWidthShift);\r\n              ctx.lineTo(prevXc + lineWidthShift, maxY - lineWidthShift);\r\n              if(prevYc !== maxY) {\r\n                ctx.moveTo(prevXc + lineWidthShift, prevYc - lineWidthShift);\r\n              }\r\n            }\r\n\r\n            hasPrev = false;\r\n          }\r\n\r\n          if(needMove) {\r\n            ctx.moveTo(xc + lineWidthShift, yc - lineWidthShift);\r\n            needMove = false;\r\n          }\r\n\r\n          minY = yc;\r\n          maxY = yc;\r\n          ctx.lineTo(xc + lineWidthShift, yc - lineWidthShift);\r\n          isStepMode && ctx.lineTo((x[j] * xScale + xw + xShift << 0) + lineWidthShift, yc - lineWidthShift);\r\n        } else {\r\n          minY = Math.min(minY, yc);\r\n          maxY = Math.max(maxY, yc);\r\n          hasPrev = true;\r\n        }\r\n        prevXc = xc;\r\n        prevYc = yc;\r\n      }\r\n\r\n      if(hasPrev) {\r\n        ctx.moveTo(prevXc + lineWidthShift, minY - lineWidthShift);\r\n        ctx.lineTo(prevXc + lineWidthShift, maxY - lineWidthShift);\r\n      }\r\n\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.globalAlpha = 1;\r\n\r\n    toCache && this.opts.ctx.drawImage(this.$canvas, dims.l * dpi, dims.t * dpi);\r\n  }\r\n}\r\n","import TDrag from './drag';\r\nimport {isTouchDevice} from './utils';\r\nimport {TChartUnitOptions} from './types';\r\n\r\nexport default class TSwitchers {\r\n  private opts: TChartUnitOptions;\r\n  private timeout: NodeJS.Timeout | undefined;\r\n  private preventClick = false;\r\n  private isTouch: boolean;\r\n  private enabled: number;\r\n  public switchers: HTMLDivElement[];\r\n  private isDarkMode: boolean;\r\n  private drag: TDrag;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n    this.isTouch = isTouchDevice();\r\n    this.enabled = opts.data.ys.length;\r\n\r\n    if(this.enabled === 1 && !opts.data.forceLegend) {\r\n      opts.$parent.style.display = 'none';\r\n    }\r\n\r\n    this.switchers = opts.data.ys.map((item, ind, arr) => {\r\n      const $div = document.createElement('div');\r\n      $div.className = 'tchart--switcher';\r\n\r\n      if(ind === 0) {\r\n        $div.classList.add('tchart--switcher__first');\r\n      } else if(ind === (arr.length - 1)) {\r\n        $div.classList.add('tchart--switcher__last');\r\n      }\r\n\r\n      if(opts.state[`e_${ind}`]) {\r\n        $div.classList.toggle('tchart--switcher__active');\r\n      } else {\r\n        this.enabled--;\r\n      }\r\n\r\n      $div.setAttribute('data-label', item.label);\r\n      opts.$parent.appendChild($div);\r\n\r\n      const $span = document.createElement('span');\r\n      $span.className = 'tchart--switcher-text';\r\n      $span.textContent = item.label;\r\n      $div.appendChild($span);\r\n\r\n      if(!this.isTouch) {\r\n        $div.addEventListener('mouseenter', () => {\r\n          if(opts.state[`e_${ind}`]) {\r\n            opts.additional.onEnter(ind);\r\n          }\r\n        });\r\n\r\n        $div.addEventListener('mouseleave', () => {\r\n          if(opts.state[`e_${ind}`]) {\r\n            opts.additional.onLeave(ind);\r\n          }\r\n        });\r\n      }\r\n\r\n      $div.addEventListener('click', (e) => {\r\n        if(this.preventClick) {\r\n          this.preventClick = false;\r\n          return;\r\n        }\r\n\r\n        const isActive = $div.classList.contains('tchart--switcher__active');\r\n\r\n        if(isActive && this.enabled === 1) {\r\n          $div.classList.add('tchart--switcher__denied');\r\n\r\n          clearTimeout(this.timeout!);\r\n          this.timeout = setTimeout(() => {\r\n            $div.classList.remove('tchart--switcher__denied');\r\n          }, 500);\r\n          return;\r\n        }\r\n\r\n        if(!this.isTouch) {\r\n          isActive ? opts.additional.onLeave(ind) : opts.additional.onEnter(ind);\r\n        }\r\n\r\n        opts.additional.onClick(!isActive, ind);\r\n      });\r\n\r\n      let dx: number, dy: number;\r\n      let longTapTimer: NodeJS.Timeout;\r\n\r\n      this.drag = new TDrag({\r\n        $el: $div,\r\n        noPrevent: true,\r\n        useElForMove: true,\r\n        onDragStart: (params) => {\r\n          dx = params.pageX;\r\n          dy = params.pageY;\r\n\r\n          longTapTimer = setTimeout(() => {\r\n            this.preventClick = true;\r\n            if(!this.isTouch) {\r\n              opts.additional.onEnter(ind);\r\n            }\r\n            opts.additional.onLongTap(ind);\r\n          }, 500);\r\n        },\r\n        onDragMove: (params) => {\r\n          if(Math.abs(dx - params.pageX) > 5 || Math.abs(dy - params.pageY) > 5) {\r\n            clearTimeout(longTapTimer);\r\n          }\r\n        },\r\n        onDragEnd: (params) => {\r\n          clearTimeout(longTapTimer);\r\n        }\r\n      });\r\n\r\n      return $div;\r\n    });\r\n\r\n    this.updateColors();\r\n  }\r\n\r\n  onResize() {}\r\n\r\n  updateColors() {\r\n    const ys = this.opts.data.ys;\r\n    for(let i = 0; i < this.switchers.length; i++) {\r\n      this.switchers[i].style.color = this.isDarkMode ? ys[i].colors_n[1] : ys[i].colors_d[1];\r\n    }\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n    this.updateColors();\r\n  }\r\n\r\n  render(o: boolean[]) {\r\n    this.enabled = 0;\r\n\r\n    for(let i = 0; i < this.switchers.length; i++) {\r\n      if(o[i]) {\r\n        this.enabled++;\r\n        this.switchers[i].classList.add('tchart--switcher__active');\r\n      } else {\r\n        this.switchers[i].classList.remove('tchart--switcher__active');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import TDrag from './drag';\r\nimport {isTouchDevice, getElemPagePos, triggerEvent, getFormatter, getXIndex} from './utils';\r\nimport {TChartAngle, TChartAnimationProperty, TChartData, TChartUnitOptions} from './types';\r\n\r\ntype TipLabel = ReturnType<TTip['addLabel']>;\r\n\r\nexport default class TTip {\r\n  private opts: TChartUnitOptions;\r\n  private shown: boolean;\r\n  private isTouch: boolean;\r\n  private cache: any;\r\n  public labels: TipLabel[];\r\n  private allLabel: TipLabel;\r\n  private pieLabel: TipLabel;\r\n  private tooltipOnHover: boolean;\r\n  private points: HTMLElement[];\r\n  private drag: TDrag;\r\n  private canvasPos: {x: number; y: number;};\r\n  private dx: number;\r\n  private dy: number;\r\n  private tp: string;\r\n  private showTimeout: number;\r\n\r\n  private $canvas: HTMLElement;\r\n  private $line: HTMLElement;\r\n  private $lineFill: HTMLElement;\r\n  private $tip: HTMLElement;\r\n  private $tipDt: HTMLElement;\r\n  private $tipDtText: Text;\r\n  private $tipArrow: HTMLElement;\r\n  private $tipLoader: HTMLElement;\r\n  private $tipScrollerWrapper: HTMLElement;\r\n  private $tipScroller: HTMLElement;\r\n  private bodyTimeout: number;\r\n  private detailCallbacks: any[];\r\n  private prevXInd: number;\r\n  private isDarkMode: boolean;\r\n  private lastCurPieItemInd: number;\r\n  private lastTipTop: number;\r\n  private lastTipLeft: number;\r\n  private tipH: number;\r\n  private tipW: number;\r\n  private itemsVisible: number;\r\n  private maxLabelWidth: number;\r\n  private maxValueWidth: number;\r\n  private maxPercentageWidth: number;\r\n  private maxDateWidth: number;\r\n  private rowPaddings: number;\r\n\r\n  constructor(opts: TChartUnitOptions) {\r\n    this.opts = opts;\r\n\r\n    this.shown = false;\r\n\r\n    this.isTouch = isTouchDevice();\r\n    this.$canvas = opts.$canvas;\r\n    this.cache = {};\r\n\r\n    this.$tip = document.createElement('div');\r\n    this.$tip.className = 'tchart--tip';\r\n    opts.$parent.appendChild(this.$tip);\r\n\r\n    this.$tipDt = document.createElement('h6');\r\n    this.$tipDt.className = 'tchart--tip-header';\r\n    this.$tip.appendChild(this.$tipDt);\r\n\r\n    this.$tipDtText = document.createTextNode('');\r\n    this.$tipDt.appendChild(this.$tipDtText);\r\n    this.$tipDtText.nodeValue = '.';\r\n\r\n    this.$tipArrow = document.createElement('div');\r\n    this.$tipArrow.className = 'tchart--tip-arrow';\r\n    this.$tip.appendChild(this.$tipArrow);\r\n\r\n    this.$tipLoader = document.createElement('div');\r\n    this.$tipLoader.className = 'tchart--tip-loader';\r\n    this.$tip.appendChild(this.$tipLoader);\r\n\r\n    this.$tipScrollerWrapper = document.createElement('div');\r\n    this.$tipScrollerWrapper.className = 'tchart--tip-scroller-wrapper';\r\n    this.$tip.appendChild(this.$tipScrollerWrapper);\r\n\r\n    this.$tipScroller = document.createElement('div');\r\n    this.$tipScroller.className = 'tchart--tip-scroller';\r\n    this.$tipScrollerWrapper.appendChild(this.$tipScroller);\r\n\r\n    this.$tipScroller.addEventListener('scroll', this.updateTipScrollClasses);\r\n\r\n    this.labels = [];\r\n    opts.data.ys.forEach((item) => {\r\n      this.labels.push(this.addLabel(item));\r\n    });\r\n\r\n    if(opts.graphStyle === 'bar' && opts.data.ys.length > 1) {\r\n      this.allLabel = this.addLabel({\r\n        label: opts.settings.ALL_LABEL,\r\n        outside: true\r\n      });\r\n    }\r\n\r\n    if(opts.graphStyle === 'area') {\r\n      this.pieLabel = this.addLabel({\r\n        label: 'pie',\r\n        outside: true\r\n      });\r\n    }\r\n\r\n    this.tooltipOnHover = this.isTouch ? false : opts.data.tooltipOnHover;\r\n\r\n    if(opts.graphStyle !== 'bar') {\r\n      this.$line = document.createElement('div');\r\n      this.$line.className = 'tchart--line';\r\n      opts.$parent.appendChild(this.$line);\r\n\r\n      this.$lineFill = document.createElement('div');\r\n      this.$lineFill.className = 'tchart--line-fill';\r\n      this.$line.appendChild(this.$lineFill);\r\n\r\n      if(opts.graphStyle !== 'area') {\r\n        this.points = opts.data.ys.map(() => {\r\n          const $el = document.createElement('span');\r\n          $el.className = 'tchart--line-point';\r\n          this.$line.appendChild($el);\r\n          return $el;\r\n        });\r\n      }\r\n    } else {\r\n      opts.state.barInd = -1;\r\n      opts.state.barO = 0;\r\n    }\r\n\r\n    if(!this.tooltipOnHover) {\r\n      this.drag = new TDrag({\r\n        $el: this.$canvas,\r\n        onDragStart: (params) => {\r\n          this.canvasPos = getElemPagePos(this.$canvas);\r\n          this.dx = params.pageX - this.canvasPos.x;\r\n          this.dy = params.pageY - this.canvasPos.y;\r\n\r\n          const dims = this.opts.state.dims.tip;\r\n          this.tp = this.getTp(this.dx, this.dy - dims.t, params.isTouch);\r\n\r\n          delete this.prevXInd;\r\n\r\n          clearTimeout(this.showTimeout);\r\n          this.showTimeout = window.setTimeout(() => {\r\n            this.toggle(!!this.tp);\r\n            this.tp && this.render();\r\n          }, this.isTouch ? 100 : 30);\r\n\r\n          document.body.removeEventListener('click', this.onBodyClick);\r\n\r\n          return !this.tp;\r\n        },\r\n        onDragMove: (params) => {\r\n          if(params.canceled) {\r\n            clearTimeout(this.showTimeout);\r\n            this.toggle(false);\r\n            return;\r\n          }\r\n          this.canvasPos = this.canvasPos || getElemPagePos(this.$canvas);\r\n          this.dx = params.pageX - this.canvasPos.x;\r\n          this.dy = params.pageY - this.canvasPos.y;\r\n          this.render({isMove: true});\r\n        },\r\n        onDragEnd: () => {\r\n          delete this.canvasPos;\r\n          this.bodyTimeout = window.setTimeout(() => {\r\n            document.body.addEventListener('click', this.onBodyClick);\r\n          }, 140);\r\n        }\r\n      });\r\n\r\n\r\n      this.$tip.addEventListener('click', this.onTipClick);\r\n    } else {\r\n      this.$canvas.addEventListener('mousemove', (e) => {\r\n        this.canvasPos = this.canvasPos || getElemPagePos(this.$canvas);\r\n        this.dx = e.pageX - this.canvasPos.x;\r\n        this.dy = e.pageY - this.canvasPos.y;\r\n\r\n        const dims = this.opts.state.dims.tip;\r\n        this.tp = this.getTp(this.dx, this.dy - dims.t, this.isTouch);\r\n\r\n        if(this.tp) {\r\n          if(!this.shown) {\r\n            delete this.prevXInd;\r\n            this.toggle(true);\r\n            this.render({});\r\n          } else {\r\n            this.render({isMove: true});\r\n          }\r\n        } else {\r\n          this.toggle(false);\r\n        }\r\n      });\r\n\r\n      this.$canvas.addEventListener('mouseleave', () => {\r\n        delete this.canvasPos;\r\n        this.toggle(false);\r\n      });\r\n\r\n      this.$canvas.addEventListener('click', (e) => {\r\n        if(this.shown) {\r\n          this.onTipClick(e);\r\n        }\r\n      });\r\n\r\n      this.$tip.style.pointerEvents = 'none';\r\n    }\r\n\r\n    this.trackMouse(true);\r\n\r\n    this.updateColors();\r\n  }\r\n\r\n  onResize(rect?: any) {\r\n    const dims = this.opts.state.dims.tip;\r\n\r\n    if(this.$line) {\r\n      const dh = this.opts.graphStyle === 'area' ? 25 : 16;\r\n\r\n      this.$line.style.top = dims.t + 'px';\r\n      this.$line.style.height = dims.h + 'px';\r\n\r\n      this.$lineFill.style.top = dh + 'px';\r\n      this.$lineFill.style.bottom = (this.opts.settings.PADD[2] + 1) + 'px';\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  abortDetailCallbacks() {\r\n    if(!this.detailCallbacks) return;\r\n\r\n    this.detailCallbacks.forEach((item) => {\r\n      item.cancelled = true;\r\n    });\r\n\r\n    delete this.detailCallbacks;\r\n  }\r\n\r\n  onTipClick = (e: Event) => {\r\n    if(this.prevXInd === undefined) return;\r\n    if(!this.opts.additional.onClick) return;\r\n    if(!this.opts.data.hasDetail) return;\r\n    if(this.opts.state.zoomMode || this.opts.state.zoomModeSpecial) return;\r\n\r\n    e.stopPropagation();\r\n\r\n    if(this.$tip.classList.contains('tchart--tip__loading')) return;\r\n\r\n    const x = this.opts.data.x[this.prevXInd];\r\n\r\n    // area case\r\n    if(!this.opts.data.detailsFunc) {\r\n      this.toggle(false, true);\r\n      this.opts.additional.onClick(true, x);\r\n      return;\r\n    }\r\n\r\n    this.$tip.classList.remove('tchart--tip__error');\r\n    this.$tip.classList.add('tchart--tip__loading');\r\n\r\n    if(this.cache[x]) {\r\n      this.toggle(false, true);\r\n      this.opts.additional.onClick(true, x, this.cache[x]);\r\n      this.$tip.classList.remove('tchart--tip__loading');\r\n      return;\r\n    }\r\n\r\n    this.abortDetailCallbacks();\r\n\r\n    const dataPromise = this.opts.data.detailsFunc(x);\r\n\r\n    this.detailCallbacks = this.detailCallbacks || [];\r\n\r\n    const successDetailCallback = (val: any) => {\r\n      if((successDetailCallback as any).cancelled) return;\r\n      this.$tip.classList.remove('tchart--tip__loading');\r\n\r\n      if(!val || !val.columns) {\r\n        this.$tip.classList.add('tchart--tip__error');\r\n        return;\r\n      }\r\n\r\n      this.toggle(false, true);\r\n      this.opts.additional.onClick(true, x, val);\r\n      this.cache[x] = val;\r\n    };\r\n\r\n    const errorDetailCallback = (val: any) => {\r\n      if((errorDetailCallback as any).cancelled) return;\r\n      console.log('error:', val);\r\n      this.$tip.classList.remove('tchart--tip__loading');\r\n      this.$tip.classList.add('tchart--tip__error');\r\n    };\r\n\r\n    this.detailCallbacks.push(successDetailCallback);\r\n    this.detailCallbacks.push(errorDetailCallback);\r\n\r\n    dataPromise\r\n    .then(successDetailCallback)\r\n    .catch(errorDetailCallback);\r\n  };\r\n\r\n  updateColors() {\r\n    const ys = this.opts.data.ys;\r\n\r\n    this.labels.forEach((item, ind) => {\r\n      this.points && (this.points[ind].style.borderColor = this.isDarkMode ? ys[ind].colors_n[0] : ys[ind].colors_d[0]);\r\n      item.$value.style.color = this.isDarkMode ? ys[ind].colors_n[2] : ys[ind].colors_d[2];\r\n    });\r\n\r\n    if(this.allLabel) {\r\n      this.allLabel.$value.style.color = 'var(--tchart-text-color)';\r\n    }\r\n\r\n    if(this.$lineFill) {\r\n      // this.$lineFill.style.backgroundColor = 'rgba(var(--tchart-background-color-rgb), 0.1)';\r\n      this.$lineFill.style.backgroundColor = this.opts.settings.COLORS.grid;\r\n    }\r\n  }\r\n\r\n  setDarkMode(enabled: boolean) {\r\n    this.isDarkMode = enabled;\r\n    this.updateColors();\r\n  }\r\n\r\n  addLabel(item: Partial<Pick<TChartData['ys'][0], 'label' | 'outside'>>) {\r\n    const $row = document.createElement('div');\r\n    $row.className = 'tchart--tip-row';\r\n    if(item.outside) {\r\n      this.$tip.appendChild($row);\r\n      $row.classList.add('tchart--tip-row__outside');\r\n    } else {\r\n      this.$tipScroller.appendChild($row);\r\n    }\r\n\r\n    const $label = document.createElement('span');\r\n    $label.className = 'tchart--tip-row-label';\r\n    $row.appendChild($label);\r\n\r\n    const $labelText = document.createTextNode('');\r\n    $labelText.nodeValue = item.label;\r\n    $label.appendChild($labelText);\r\n\r\n    let $perText: Text;\r\n\r\n    let $per: HTMLParagraphElement;\r\n    if(this.opts.graphStyle === 'area') {\r\n      $per = document.createElement('p');\r\n      $per.className = 'tchart--tip-row-per';\r\n      $row.appendChild($per);\r\n\r\n      $perText = document.createTextNode('');\r\n      $per.appendChild($perText);\r\n    }\r\n\r\n    const $value = document.createElement('div');\r\n    $value.className = 'tchart--tip-row-value';\r\n    $row.appendChild($value);\r\n\r\n    const $valueText = document.createTextNode('');\r\n    $value.appendChild($valueText);\r\n\r\n    return {\r\n      $row: $row,\r\n      $value: $value,\r\n      $valueText: $valueText,\r\n      $label: $label,\r\n      $labelText: $labelText,\r\n      $per: $per,\r\n      $perText: $perText\r\n    };\r\n  }\r\n\r\n  getTp(x: number, y: number, isTouch?: boolean) {\r\n    if(this.opts.graphStyle === 'area' && this.opts.state.zoomMode) {\r\n      const dims = this.opts.state.dims.graph;\r\n      const cx = dims.w / 2;\r\n      const cy = dims.h / 2;\r\n      const dist = Math.pow((cy - y) * (cy - y) + (x - cx) * (x - cx), 0.5);\r\n      return dist <= this.opts.settings.PIE_RADIUS ? 'graph' : '';\r\n    } else {\r\n      const dims = this.opts.state.dims.tip;\r\n      if(y < 0 || y > dims.h) return '';\r\n      return 'graph';\r\n    }\r\n  }\r\n\r\n  trackMouse(enabled?: boolean, noPropagation?: boolean) {\r\n    if(this.isTouch) return;\r\n\r\n    this.$canvas.addEventListener('mousemove', this.onMouseMove);\r\n    this.$canvas.addEventListener('mouseleave', this.onMouseLeave);\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.$canvas.classList.remove('tchart--graph-canvas__tip-pointer');\r\n    delete this.canvasPos;\r\n  };\r\n\r\n  onMouseMove = (e: MouseEvent) => {\r\n    this.canvasPos = this.canvasPos || getElemPagePos(this.$canvas);\r\n    const dx = e.pageX - this.canvasPos.x;\r\n    const dy = e.pageY - this.canvasPos.y;\r\n\r\n    const dims = this.opts.state.dims.tip;\r\n    const tp = this.getTp(dx, dy - dims.t, false);\r\n\r\n    this.onMouseLeave();\r\n    tp && this.$canvas.classList.add('tchart--graph-canvas__tip-pointer');\r\n  };\r\n\r\n  toggle(enabled: boolean, shiftHide?: boolean) {\r\n    const opts = this.opts;\r\n    const state = opts.state;\r\n\r\n    if(enabled && !this.shown) {\r\n      this.$tip.classList.add('tchart--tip__visible');\r\n      if(this.opts.data.hasDetail && !(this.opts.state.zoomMode || this.opts.state.zoomModeSpecial)) {\r\n        this.$tip.classList.add('tchart--tip__has-zoom');\r\n      } else {\r\n        this.$tip.classList.remove('tchart--tip__has-zoom');\r\n      }\r\n      this.$tip.classList.remove('tchart--tip__shiftHide');\r\n      this.$line && this.$line.classList.add('tchart--line__visible');\r\n      triggerEvent('chart-hide-tips', {except: this.opts.chart});\r\n    }\r\n\r\n    if(!enabled && this.shown) {\r\n      delete this.lastCurPieItemInd;\r\n\r\n      if(opts.graphStyle === 'area' && state.zoomMode) {\r\n        const animProps: TChartAnimationProperty[] = [];\r\n        for(let i = 0; i < state.pieAngles.length; i++) {\r\n          const pieItem = state.pieAngles[i];\r\n          animProps.push({\r\n            prop: `pieInd_${pieItem.ind}`,\r\n            state: opts.state,\r\n            end: 0,\r\n            duration: 350,\r\n            tween: 'exp',\r\n            speed: 0.2,\r\n            group: {top: true}\r\n          });\r\n        }\r\n        opts.animator.add(animProps);\r\n      }\r\n\r\n      if(shiftHide) {\r\n        this.$tip.classList.add('tchart--tip__shiftHide');\r\n        this.lastTipTop -= 12;\r\n        this.lastTipLeft = this.lastTipLeft < this.opts.state.dims.tip.w / 2 ? this.lastTipLeft - 12 : this.lastTipLeft + 12;\r\n        this.$tip.style.transform = 'translate(' + this.lastTipLeft + 'px,' + this.lastTipTop + 'px)';\r\n        this.$tip.style.webkitTransform = 'translate(' + this.lastTipLeft + 'px,' + this.lastTipTop + 'px)';\r\n      }\r\n      this.$tip.classList.remove('tchart--tip__visible');\r\n      this.$line && this.$line.classList.remove('tchart--line__visible');\r\n\r\n      this.abortDetailCallbacks();\r\n\r\n      this.$tip.classList.remove('tchart--tip__error');\r\n      this.$tip.classList.remove('tchart--tip__loading');\r\n\r\n      // add to animaion query request to disable tooltip selection overlay\r\n      if(this.opts.graphStyle === 'bar') {\r\n        this.opts.animator.add([{\r\n          prop: 'barInd',\r\n          state: this.opts.state,\r\n          end: -1,\r\n          duration: 0,\r\n          delay: 150,\r\n          tween: 'linear',\r\n          group: {top: true}\r\n        }, {\r\n          prop: 'barO',\r\n          state: this.opts.state,\r\n          end: 0,\r\n          duration: 150,\r\n          tween: 'exp',\r\n          speed: 0.3,\r\n          group: {top: true}\r\n        }]);\r\n      }\r\n      document.body.removeEventListener('click', this.onBodyClick);\r\n    }\r\n\r\n    this.shown = enabled;\r\n  }\r\n\r\n  onBodyClick = (e: Event) => {\r\n    if(e.target === this.$canvas) return;\r\n\r\n    this.toggle(false);\r\n  };\r\n\r\n  renderPieTooltip(params?: any) {\r\n    const opts = this.opts;\r\n    const state = opts.state;\r\n    const settings = this.opts.settings;\r\n    const pTop = settings.PADD[0];\r\n    const pRight = settings.PADD[1];\r\n    const pBottom = settings.PADD[2];\r\n    const pLeft = settings.PADD[3];\r\n    const dims = state.dims.graph;\r\n    const dimsTip = state.dims.tip;\r\n    const cx = dims.w / 2;\r\n    const cy = dims.h / 2;\r\n    const formatter = getFormatter('yTooltipFormatter', opts.data, state.zoomMorph);\r\n    let ang = Math.atan2(cy - this.dy + dims.t, this.dx - cx);\r\n    ang = ang < 0 ? Math.PI * 2 + ang : ang;\r\n\r\n    let curPieItem: TChartAngle;\r\n    for(let i = 0; i < state.pieAngles.length; i++) {\r\n      const pieItem = state.pieAngles[i];\r\n      if(ang <= pieItem.st && ang >= pieItem.ed) {\r\n        curPieItem = pieItem;\r\n      }\r\n\r\n      if(ang - 2 * Math.PI <= pieItem.st && ang - 2 * Math.PI >= pieItem.ed) {\r\n        curPieItem = pieItem;\r\n      }\r\n    }\r\n\r\n    if(this.lastCurPieItemInd !== curPieItem.ind) {\r\n      const animProps: TChartAnimationProperty[] = [];\r\n      for(let i = 0; i < state.pieAngles.length; i++) {\r\n        const pieItem = state.pieAngles[i];\r\n        animProps.push({\r\n          prop: `pieInd_${pieItem.ind}`,\r\n          state: opts.state,\r\n          end: pieItem === curPieItem ? 1 : 0,\r\n          duration: 350,\r\n          tween: 'exp',\r\n          speed: 0.2,\r\n          group: {top: true}\r\n        });\r\n      }\r\n      opts.animator.add(animProps);\r\n    }\r\n\r\n\r\n    this.pieLabel.$row.style.display = 'block';\r\n    this.labels.forEach((item) => {\r\n      item.$row.style.display = 'none';\r\n    });\r\n\r\n    this.pieLabel.$labelText.nodeValue = curPieItem.label;\r\n    this.pieLabel.$valueText.nodeValue = !isNaN(curPieItem.value) ? formatter(curPieItem.value) : 'n/a';\r\n\r\n    this.pieLabel.$value.style.color = curPieItem.color;\r\n    this.$tip.classList.add('tchart--tip__piemode');\r\n    this.$line && this.$line.classList.add('tchart--line__piemode');\r\n\r\n    this.tipH = this.$tip.offsetHeight;\r\n    this.tipW = this.$tip.offsetWidth;\r\n\r\n    const tipMarginFromPointer = 20;\r\n    let left = (this.dx - this.tipW / 2);\r\n    let top = Math.min(this.dy - tipMarginFromPointer - this.tipH, dimsTip.t + dimsTip.h - this.tipH - pBottom);\r\n    if(top < dimsTip.t + pTop) {\r\n      top = dimsTip.t + pTop;\r\n    }\r\n\r\n    left = Math.min(Math.max(left, pLeft / 2), dimsTip.w - this.tipW - pRight / 2);\r\n\r\n    this.$tip.style.transform = 'translate(' + (left << 0) + 'px,' + (top << 0) + 'px)';\r\n    this.$tip.style.webkitTransform = 'translate(' + (left << 0) + 'px,' + (top << 0) + 'px)';\r\n\r\n    this.lastCurPieItemInd = curPieItem.ind;\r\n\r\n    this.updateTipScrollClasses();\r\n  }\r\n\r\n  render(params: any = {}) {\r\n    if(!this.shown) return;\r\n\r\n    const opts = this.opts;\r\n    const state = opts.state;\r\n    const settings = this.opts.settings;\r\n    const pTop = settings.PADD[0];\r\n    const pRight = settings.PADD[1];\r\n    const pBottom = settings.PADD[2];\r\n    const pLeft = settings.PADD[3];\r\n    let $el: HTMLElement;\r\n    let y1: number, y2: number;\r\n    let itemsVisible = 0;\r\n    const dims = this.opts.state.dims.tip;\r\n    const formatter = getFormatter('yTooltipFormatter', opts.data, state.zoomMorph);\r\n\r\n    const zoomMorph = state.zoomMorph === undefined ? 0 : state.zoomMorph;\r\n    const offsetForBarGraphMain = opts.graphStyle === 'bar' || opts.graphStyle === 'step' ? this.opts.data.mainPeriodLen : 0;\r\n    const offsetForBarGraphScale = offsetForBarGraphMain * (1 - zoomMorph);\r\n\r\n    this.abortDetailCallbacks();\r\n\r\n    this.$tip.classList.remove('tchart--tip__error');\r\n    this.$tip.classList.remove('tchart--tip__loading');\r\n\r\n    if(opts.graphStyle === 'area' && state.zoomMode) {\r\n      this.renderPieTooltip(params);\r\n      return;\r\n    } else {\r\n      if(this.pieLabel) {\r\n        this.pieLabel.$row.style.display = 'none';\r\n      }\r\n    }\r\n\r\n    const constrainedDx = Math.max(Math.min(this.dx, dims.w - 1), 0);\r\n    const x = state.x1 + (state.x2 - state.x1 + offsetForBarGraphScale) * ((constrainedDx - pLeft) / (dims.w - pRight - pLeft));\r\n    const xPos = getXIndex(opts.data.x, x);\r\n    let xInd = (opts.graphStyle === 'bar' || opts.graphStyle === 'step' ? Math.floor(xPos) : Math.round(xPos));\r\n\r\n    // prevent out of canvas points\r\n    if(opts.graphStyle !== 'bar' && opts.graphStyle !== 'step') {\r\n      const lx = (opts.data.x[xInd] - state.x1) / (state.x2 - state.x1 + offsetForBarGraphScale);\r\n      const cx = ((lx * (dims.w - pLeft - pRight) + pLeft) << 0);\r\n      if(cx < 0) {\r\n        xInd++\r\n      }\r\n      if(cx > dims.w - 1) {\r\n        xInd--;\r\n      }\r\n    } else {\r\n      if(this.opts.state.zoomMode || this.opts.state.zoomModeSpecial) {\r\n        if(xInd < opts.state.detailInd1) {\r\n          xInd++;\r\n        }\r\n        if(xInd > opts.state.detailInd2) {\r\n          xInd--;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // add to anitaion query request to redraw graph\r\n    // it will notice barInd: xInd and draw needed selection\r\n    if(opts.graphStyle === 'bar') {\r\n      opts.animator.add([{\r\n        prop: 'barInd',\r\n        state: opts.state,\r\n        end: xInd,\r\n        duration: 0,\r\n        tween: 'linear',\r\n        group: {top: true}\r\n      }, {\r\n        prop: 'barO',\r\n        state: this.opts.state,\r\n        end: 1,\r\n        duration: 150,\r\n        tween: 'exp',\r\n        speed: 0.3,\r\n        group: {top: true}\r\n      }]);\r\n    }\r\n\r\n    if(this.prevXInd !== xInd || !params.isMove) {\r\n      this.$tip.classList.remove('tchart--tip__piemode');\r\n      this.$line && this.$line.classList.remove('tchart--line__piemode');\r\n\r\n\r\n      this.labels.forEach((item, ind) => {\r\n        const display = opts.state[`e_${ind}`] && !isNaN(opts.data.ys[ind].y[xInd]) ? 'block' : 'none';\r\n        item.$row.style.display = display;\r\n        this.points && (this.points[ind].style.display = display);\r\n        itemsVisible += display === 'block' ? 1 : 0;\r\n      });\r\n\r\n      this.itemsVisible = itemsVisible;\r\n      if(this.allLabel) {\r\n        this.allLabel.$row.style.display = itemsVisible > 1 ? 'block' : 'none';\r\n      }\r\n\r\n      if(this.itemsVisible) {\r\n        this.$tip.classList.remove('tchart--tip__has_no_items');\r\n        this.$line && this.$line.classList.remove('tchart--line__has_no_items');\r\n      } else {\r\n        this.$tip.classList.add('tchart--tip__has_no_items');\r\n        this.$line && this.$line.classList.add('tchart--line__has_no_items');\r\n      }\r\n\r\n      let xw = 0;\r\n      if(opts.graphStyle === 'step') {\r\n        if(this.opts.state.zoomMode) {\r\n          xw = opts.data.detailPeriodLen;\r\n        } else {\r\n          xw = opts.data.mainPeriodLen;\r\n        }\r\n      }\r\n\r\n      const lx = (opts.data.x[xInd] - state.x1 + xw / 2) / (state.x2 - state.x1 + offsetForBarGraphScale);\r\n      const cx = ((lx * (dims.w - pLeft - pRight) + pLeft) << 0);\r\n\r\n      this.$line && (this.$line.style.transform = 'translateX(' + cx + 'px)');\r\n      this.$line && (this.$line.style.webkitTransform = 'translateX(' + cx + 'px)');\r\n\r\n      this.$tipDtText.nodeValue = opts.data.dates[xInd];\r\n\r\n      let sumAll = 0;\r\n      opts.data.ys.forEach((item, ind) => {\r\n        if(opts.state[`e_${ind}`] && !isNaN(item.y[xInd])) {\r\n          this.labels[ind].$valueText.nodeValue = formatter(item.y[xInd]);\r\n          sumAll += item.y[xInd] || 0\r\n\r\n          if(this.points) {\r\n            $el = this.points[ind];\r\n\r\n            if(opts.pairY) {\r\n              y1 = state[`y1_${ind}`] as number;\r\n              y2 = state[`y2_${ind}`] as number;\r\n            } else {\r\n              y1 = state['y1'] as number;\r\n              y2 = state['y2'] as number;\r\n            }\r\n\r\n            const y = (item.y[xInd] - y1) / (y2 - y1);\r\n            $el.style.transform = 'translateY(' + ((dims.h - y * (dims.h - pTop - pBottom) - pBottom) << 0) + 'px)';\r\n            $el.style.webkitTransform = 'translateY(' + ((dims.h - y * (dims.h - pTop - pBottom) - pBottom) << 0) + 'px)';\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n      if(this.allLabel) {\r\n        this.allLabel.$valueText.nodeValue = formatter(sumAll);\r\n      }\r\n\r\n      if(!params.isMove) {\r\n        // reset max width for current tooltip shown session\r\n        this.maxLabelWidth = 0;\r\n        this.maxValueWidth = 0;\r\n        this.maxPercentageWidth = 0;\r\n        this.maxDateWidth = 0;\r\n\r\n        // calc content paddings\r\n        const compStyles = window.getComputedStyle(this.$tip);\r\n        this.rowPaddings = parseInt(compStyles.getPropertyValue('padding-left'), 10) + parseInt(compStyles.getPropertyValue('padding-right'), 10);\r\n      }\r\n\r\n\r\n      if(opts.graphStyle === 'area') {\r\n        this.fillPercentages(xInd, sumAll);\r\n      }\r\n\r\n      // calc max labels and values width\r\n      this.labels.forEach((item, ind) => {\r\n        const isVisible = opts.state[`e_${ind}`] && !isNaN(opts.data.ys[ind].y[xInd]);\r\n        if(isVisible) {\r\n          const labelWidth = item.$label.offsetWidth;\r\n          if(labelWidth > this.maxLabelWidth) {\r\n            this.maxLabelWidth = labelWidth;\r\n          }\r\n          const valueWidth = item.$value.offsetWidth;\r\n          if(valueWidth > this.maxValueWidth) {\r\n            this.maxValueWidth = valueWidth;\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n      // calc tooltip width to fit all labels and values witout overlaping each another\r\n      let minWidth = this.rowPaddings + this.maxLabelWidth + 20 +this.maxValueWidth;// 20 - min margin between label and value\r\n      minWidth += opts.graphStyle === 'area' ? this.maxPercentageWidth : 0; // percentages block for area\r\n\r\n      // and don't forget about date caption, 20 - space for detail arrow\r\n      const dateWidth = this.rowPaddings + this.$tipDt.offsetWidth + 20;\r\n      if(dateWidth > this.maxDateWidth) {\r\n        this.maxDateWidth = dateWidth;\r\n      }\r\n      minWidth = Math.max(minWidth, this.maxDateWidth);\r\n\r\n      this.$tip.style.width = minWidth + 'px';\r\n\r\n      this.tipH = this.$tip.offsetHeight;\r\n      this.tipW = this.$tip.offsetWidth;\r\n    }\r\n\r\n    let pos = this.itemsVisible <= 2 ? 'center' : 'side';\r\n    const tipMarginFromPointer = 20;\r\n\r\n    let left: number, top: number;\r\n    if(pos === 'center') {\r\n      left = (this.dx - this.tipW / 2);\r\n      top = Math.min(this.dy - tipMarginFromPointer - this.tipH, dims.t + dims.h - this.tipH - pBottom);\r\n      if(top < dims.t + pTop) {\r\n        pos = 'side';\r\n      }\r\n    }\r\n\r\n    if(pos === 'side') {\r\n      if(this.dx > dims.w / 2) {\r\n        left = this.dx - this.tipW - tipMarginFromPointer;\r\n      } else {\r\n        left = this.dx + tipMarginFromPointer;\r\n      }\r\n      top = Math.min(Math.max(this.dy - this.tipH / 2, dims.t + pTop), dims.t + dims.h - this.tipH - pBottom);\r\n    }\r\n\r\n    left = Math.min(Math.max(left, pLeft / 2), dims.w - this.tipW - pRight / 2);\r\n\r\n    this.$tip.style.transform = 'translate(' + (left << 0) + 'px,' + (top << 0) + 'px)';\r\n    this.$tip.style.webkitTransform = 'translate(' + (left << 0) + 'px,' + (top << 0) + 'px)';\r\n\r\n    this.lastTipLeft = left << 0;\r\n    this.lastTipTop = top << 0;\r\n\r\n    this.prevXInd = xInd;\r\n\r\n    this.updateTipScrollClasses();\r\n  }\r\n\r\n  updateTipScrollClasses = () => {\r\n    if(this.$tipScroller.scrollHeight > this.$tipScroller.offsetHeight) {\r\n      this.$tip.classList.add('tchart--tip__scroll');\r\n    } else {\r\n      this.$tip.classList.remove('tchart--tip__scroll');\r\n    }\r\n\r\n    if(this.$tipScroller.scrollTop <= 0) {\r\n      this.$tip.classList.remove('tchart--tip__has_less');\r\n    } else {\r\n      this.$tip.classList.add('tchart--tip__has_less');\r\n    }\r\n\r\n    if(this.$tipScroller.scrollTop >= this.$tipScroller.scrollHeight - this.$tipScroller.offsetHeight) {\r\n      this.$tip.classList.remove('tchart--tip__has_more');\r\n    } else {\r\n      this.$tip.classList.add('tchart--tip__has_more');\r\n    }\r\n  };\r\n\r\n  fillPercentages(xInd: number, sumAll: number) {\r\n    const opts = this.opts;\r\n    const perInt: number[] = [];\r\n    let maxLen = 2;\r\n\r\n    opts.data.ys.forEach((item, ind) => {\r\n      if(opts.state[`e_${ind}`]) {\r\n        perInt[ind] = Math.max(Math.round(100 * item.y[xInd] / sumAll), 0);\r\n\r\n        if(isNaN(item.y[xInd]) || sumAll === 0) {\r\n          perInt[ind] = 0;\r\n        }\r\n\r\n        if(perInt[ind] === 100) {\r\n          maxLen = 3;\r\n        }\r\n      }\r\n    });\r\n\r\n    opts.data.ys.forEach((item, ind) => {\r\n      if(opts.state[`e_${ind}`]) {\r\n        const percentageWidth = (maxLen * 8 + 17); // with right padding\r\n        this.labels[ind].$label.style.transform = 'translateX(' + percentageWidth + 'px)';\r\n        this.labels[ind].$label.style.webkitTransform = 'translateX(' + percentageWidth + 'px)';\r\n        this.labels[ind].$perText.nodeValue = (perInt[ind]) + '%';\r\n        this.labels[ind].$per.style.width = (percentageWidth - 7) + 'px';\r\n        if(percentageWidth > this.maxPercentageWidth) {\r\n          this.maxPercentageWidth = percentageWidth;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import TAnimator from './animator';\r\nimport TAreas from './areas';\r\nimport TAxisX from './axisX';\r\nimport TAxisY from './axisY';\r\nimport TBars from './bars';\r\nimport TComposer from './composer';\r\nimport TFade from './fade';\r\nimport THandle from './handle';\r\nimport TLines from './lines';\r\nimport TSwitchers from './switchers';\r\nimport TTip from './tip';\r\nimport {getFormatter, getXIndex, roundRange, triggerEvent} from './utils';\r\nimport {TChartAnimationProperty, TChartConstructorOptions, TChartData, TChartDataDetails, TChartRange, TChartRangePaired, TChartRangeSingle, TChartSettings, TChartState, TChartStateZoom, TChartType, TChartTypeRenderer, TChartUnitOptions} from './types';\r\nimport {getLabelDate, getLabelTime} from './format';\r\nimport './chart.scss';\r\n\r\nexport default class TChart {\r\n  private opts: TChartConstructorOptions;\r\n  private state: TChartState;\r\n  private specialZoomTransition: boolean;\r\n  private settings: TChartSettings;\r\n  private data: TChartData;\r\n  private pairY: boolean;\r\n  private graphStyle: TChartType;\r\n  private ww: number;\r\n  private switcherLeaveTimeout: number;\r\n  private zoomEnterSpeed: number;\r\n  private hasSavedData: boolean;\r\n\r\n  public axisY: TAxisY;\r\n  public fade: TFade;\r\n  public axisX: TAxisX;\r\n  private composer: TComposer;\r\n  private switchers: TSwitchers;\r\n  public handle: THandle;\r\n  private animator: TAnimator;\r\n  private tip: TTip;\r\n  private slaveChart: TChart;\r\n  public graph: TChartTypeRenderer;\r\n  public mini: TChartTypeRenderer;\r\n\r\n  public $el: HTMLElement;\r\n  public $wrapper: HTMLElement;\r\n  private $switchers: HTMLElement;\r\n  private $graph: HTMLElement;\r\n  private $h1: HTMLElement;\r\n  private $zoom: HTMLElement;\r\n\r\n  public static render(opts: TChartConstructorOptions) {\r\n    const wrapper = document.createElement('div');\r\n    wrapper.className = 'tchart--wrapper';\r\n    opts.container.appendChild(wrapper);\r\n    opts.container = wrapper;\r\n\r\n    const tChart = new TChart(opts);\r\n    tChart.$wrapper = wrapper;\r\n    return tChart;\r\n  }\r\n\r\n  constructor(opts: TChartConstructorOptions) {\r\n    this.state = {} as any;\r\n\r\n    this.state.masterVisibility = 1;\r\n    this.state.slaveVisibility = 0;\r\n    this.specialZoomTransition = undefined;\r\n\r\n    const isIEOld = ((!!(window as any).ActiveXObject && +(/msie\\s(\\d+)/i.exec(navigator.userAgent)[1])) || NaN - 0) < 11\r\n    const isIE11 = navigator.userAgent.indexOf('Trident/') !== -1 && (navigator.userAgent.indexOf('rv:') !== -1 || navigator.appName.indexOf('Netscape') !== -1)\r\n\r\n    const DAY_COLORS: TChartSettings['COLORS'] = {\r\n      background: '#FFFFFF',\r\n      backgroundRgb: [255, 255, 255],\r\n      text: '#000000',\r\n      dates: '#000',\r\n      grid: 'rgba(24, 45, 59, 0.1)',\r\n      axis: {\r\n        x: 'rgba(37,37,41,0.5)',\r\n        y: 'rgba(37,37,41,0.5)'\r\n      },\r\n      barsSelectionBackground: 'rgba(255, 255, 255, 0.5)',\r\n      miniMask: 'rgba(226, 238, 249, 0.6)',\r\n      miniFrame: '#C0D1E1'\r\n    };\r\n\r\n    const NIGHT_COLORS: TChartSettings['COLORS'] = {\r\n      background: '#242F3E',\r\n      backgroundRgb: [36, 47, 62],\r\n      text: '#FFFFFF',\r\n      dates: '#fff',\r\n      grid: 'rgba(255, 255, 255, 0.1)',\r\n      axis: {\r\n        x: 'rgba(163,177,194,0.6)',\r\n        y: 'rgba(236,242,248,0.5)'\r\n      },\r\n      barsSelectionBackground: 'rgba(36, 47, 62, 0.5)',\r\n      miniMask: 'rgba(48, 66, 89, 0.6)',\r\n      miniFrame: '#56626D'\r\n    };\r\n\r\n    const darkMode = !!document.documentElement.classList.contains('dark');\r\n    this.settings = {\r\n      isIE: isIEOld || isIE11,\r\n      isEdge: /Edge\\/\\d./i.test(navigator.userAgent),\r\n      dpi: Math.min(window.devicePixelRatio || 1, 2),\r\n      darkMode: darkMode,\r\n      ALL_LABEL: 'All',\r\n      Y_AXIS_RANGE: 5.3, // 0.3 this is part of one step, graph is overflowed above last y axis for this value, so take care of it\r\n      PADD: [20, 16, 20, 16],\r\n      PADD_MINI: [2, 0, 2, 0],\r\n      PADD_MINI_BAR: [0, 0, 0, 0],\r\n      PADD_MINI_AREA: [0, 0, 0, 0],\r\n      Y_LABELS_WIDTH: 50,\r\n      X_LABELS_HEIGHT: 12,\r\n      DATES_HEIGHT: 18,\r\n      DATES_WIDTH: 300,\r\n      DATES_SIDE: 'right',\r\n      DATES_WEIGHT: 'bold',\r\n      ZOOM_TEXT: 'Zoom Out',\r\n      MINI_GRAPH_HEIGHT: 40,\r\n      MINI_GRAPH_TOP: 14,\r\n      MINI_GRAPH_BOTTOM: 2,\r\n      FADE_HEIGHT: 16,\r\n      PIE_RADIUS: 130,\r\n      FONT: {\r\n        family: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif',\r\n        bold: 'bold',\r\n        normal: 'normal'\r\n      },\r\n      COLORS: darkMode ? NIGHT_COLORS : DAY_COLORS,\r\n      ...(opts.settings || {})\r\n    };\r\n\r\n    this.data = {\r\n      caption: opts.data.title,\r\n      detailsFunc: opts.data.x_on_zoom,\r\n      hasDetail: !!opts.data.x_on_zoom,\r\n      slave: opts.slave,\r\n      yTickFormatter: opts.data.yTickFormatter,\r\n      yTooltipFormatter: opts.data.yTooltipFormatter,\r\n      yMinStep: opts.data.yMinStep,\r\n      xTickFormatter: opts.data.xTickFormatter,\r\n      xTooltipFormatter: opts.data.xTooltipFormatter,\r\n      xRangeFormatter: opts.data.xRangeFormatter,\r\n      strokeWidth: opts.data.strokeWidth || 'auto',\r\n      hidden: opts.data.hidden || [],\r\n      tooltipOnHover: !!opts.data.tooltipOnHover,\r\n      forceLegend: opts.data.forceLegend,\r\n      sideLegend: opts.data.sideLegend || false,\r\n      pieZoomRange: opts.data.pieZoomRange || 7 * 86400 * 1000,\r\n      pieLabelsPercentages: {\r\n        outboard: opts.data.pieLabelsPercentages && opts.data.pieLabelsPercentages.outboard !== undefined ? opts.data.pieLabelsPercentages.outboard : 5,\r\n        hoverOnly: opts.data.pieLabelsPercentages && opts.data.pieLabelsPercentages.hoverOnly !== undefined ? opts.data.pieLabelsPercentages.hoverOnly : 2\r\n      },\r\n      subchart: {\r\n        show: opts.data.subchart && opts.data.subchart.show !== undefined ? opts.data.subchart.show : true,\r\n        defaultZoom: opts.data.subchart && opts.data.subchart.defaultZoom\r\n      },\r\n      getLabelDate: opts.data.getLabelDate || getLabelDate,\r\n      getLabelTime: opts.data.getLabelTime || getLabelTime\r\n    };\r\n\r\n    if(opts.data.y_scaled) {\r\n      this.pairY = true;\r\n    }\r\n\r\n    this.graphStyle = 'line';\r\n    const settings = this.settings;\r\n\r\n    // transform data to more convinient format\r\n    opts.data.columns.forEach((item) => {\r\n      const id = item.shift() as any as string;\r\n      const tp = opts.data.types[id];\r\n\r\n      if(tp === 'x') {\r\n        this.data.x = item;\r\n\r\n        this.state.xCount = item.length;\r\n        this.state.x1 = item[(item.length * 0.75) << 0]; // initial zoom if no defaultZoom set\r\n        this.state.x2 = item[item.length - 1];\r\n        this.state.xg1 = item[0];\r\n        this.state.xg2 = item[item.length - 1];\r\n        this.state.xg1Ind = 0;\r\n        this.state.xg2Ind = item.length - 1;\r\n        this.state.xMainMin = item[0];\r\n        this.state.xMainMax = item[this.state.xg2Ind];\r\n        this.state.xgMin = item[0];\r\n        this.state.xgMax = item[this.state.xg2Ind];\r\n\r\n        const defaultZoom = this.getDefaultZoom({\r\n          x1: this.state.x1,\r\n          x2: this.state.x2,\r\n          xg1: this.state.xg1,\r\n          xg2: this.state.xg2,\r\n          default: this.data.subchart.defaultZoom\r\n        });\r\n\r\n        this.state.x1 = defaultZoom.x1;\r\n        this.state.x2 = defaultZoom.x2;\r\n\r\n        this.data.mainPeriodLen = this.data.x[1] - this.data.x[0];\r\n        this.data.detailPeriodLen = this.data.mainPeriodLen; // first detail upload would set correct value\r\n\r\n        this.data.dates = [];\r\n        this.data.datesShort = [];\r\n        this.data.datesRange = [];\r\n\r\n        const xTooltipFormatter = getFormatter('xTooltipFormatter', this.data, 0);\r\n        const xTickFormatter = getFormatter('xTickFormatter', this.data, 0);\r\n        const xRangeFormatter = this.data.subchart.show ? getFormatter('xRangeFormatter', this.data, 0) : undefined;\r\n        let maxXTickLength = 0;\r\n\r\n        item.forEach((item, ind) => {\r\n          this.data.dates[ind] = xTooltipFormatter(item, false);\r\n          this.data.datesShort[ind] = xTickFormatter(item, false);\r\n\r\n          if(xRangeFormatter) {\r\n            this.data.datesRange[ind] = xRangeFormatter(item, false);\r\n          }\r\n\r\n          if(this.data.datesShort[ind].length > maxXTickLength) {\r\n            maxXTickLength = this.data.datesShort[ind].length;\r\n          }\r\n        });\r\n\r\n        this.data.maxXTickLength = maxXTickLength;\r\n      } else {\r\n        this.data.ys = this.data.ys || [];\r\n        this.data.yIds = this.data.yIds || {};\r\n\r\n        const color = opts.data.colors[id];\r\n        this.data.ys.push({\r\n          colors_d: [color, color, color], // light mode colors: [line/area/bar/step, switcher/y_labels(for y_scaled type), tooltip entry]\r\n          colors_n: [color, color, color], // dark ones\r\n          label: opts.data.names[id],\r\n          y: item,\r\n          tp: tp,\r\n          id: id\r\n        });\r\n\r\n        // if(tp === 'line' || tp === 'step') {\r\n        //   DAY_COLORS.axis = {\r\n        //     x: '#8E8E93',\r\n        //     y: '#8E8E93'\r\n        //   };\r\n        //   NIGHT_COLORS.axis = {\r\n        //     x: 'rgba(163,177,194,0.6)',\r\n        //     y: 'rgba(163,177,194,0.6)'\r\n        //   };\r\n        // }\r\n\r\n        const yind = this.data.ys.length - 1;\r\n\r\n        const isVisible = this.data.hidden.indexOf(id) === -1;\r\n\r\n        this.data.yIds[id] = yind;\r\n        this.state[`e_${yind}`] = isVisible;\r\n        this.state[`o_${yind}`] = isVisible ? 1 : 0;\r\n        this.state[`om_${yind}`] = isVisible ? 1 : 0;\r\n        this.state[`pieInd_${yind}`] = 0;\r\n        this.state[`f_${yind}`] = 1;\r\n\r\n        this.graphStyle = tp as TChartType;\r\n      }\r\n    });\r\n\r\n    this.state.activeColumnsCount = this.data.ys.length;\r\n    this.updateSpeed();\r\n\r\n    // @ts-ignore\r\n    if(this.graphStyle === 'area') {\r\n      settings.Y_AXIS_RANGE = 4.06;\r\n      this.data.hasDetail = true;\r\n    }\r\n\r\n    // reduce global range to exclude data gaps\r\n    const reducedRange = this.reduceGlobalRange({});\r\n\r\n    if(reducedRange.isReduced) {\r\n      this.state.x1 = reducedRange.x1;\r\n      this.state.x2 = reducedRange.x2;\r\n      this.state.xg1 = reducedRange.xg1;\r\n      this.state.xg2 = reducedRange.xg2;\r\n      this.state.xg1Ind = reducedRange.xg1Ind;\r\n      this.state.xg2Ind = reducedRange.xg2Ind;\r\n    }\r\n\r\n    this.createDOM(opts.container);\r\n\r\n    window.addEventListener('resize', this.onResize);\r\n\r\n    document.addEventListener('darkmode', () => {\r\n      this.setDarkMode(!this.darkMode);\r\n    }, false);\r\n\r\n    document.addEventListener('chart-hide-tips', (e: any) => {\r\n      e.detail.except !== this && this.tip.toggle(false);\r\n    }, false);\r\n\r\n    this.opts = opts;\r\n\r\n    this.onResize();\r\n\r\n    this.darkMode && this.setDarkMode(this.darkMode);\r\n\r\n    // detect dpi changes\r\n    window.matchMedia('(-webkit-min-device-pixel-ratio: 1), (min-resolution: 96dpi)').addListener(this.onResize);\r\n    window.matchMedia('(-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi)').addListener(this.onResize);\r\n    window.matchMedia('(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)').addListener(this.onResize);\r\n    window.matchMedia('(-webkit-min-device-pixel-ratio: 3), (min-resolution: 288dpi)').addListener(this.onResize);\r\n  }\r\n\r\n  private get darkMode() {\r\n    return this.settings.darkMode;\r\n  }\r\n\r\n  reduceGlobalRange(params: TChartStateZoom) {\r\n    let x1 = params.x1 === undefined ? this.state.x1 : params.x1;\r\n    let x2 = params.x2 === undefined ? this.state.x2 : params.x2;\r\n    const xg1Orig = params.xg1 === undefined ? this.state.xg1 : params.xg1;\r\n    const xg2Orig = params.xg2 === undefined ? this.state.xg2 : params.xg2;\r\n    const x = params.useSaved ? this.data.saved.x : this.data.x;\r\n\r\n\r\n    const xg1Ind = Math.floor(getXIndex(x, this.state.xgMin));\r\n    const xg2Ind = Math.ceil(getXIndex(x, this.state.xgMax));\r\n\r\n    let minXInd = xg2Ind;\r\n    let maxXInd = xg1Ind;\r\n    let shift = this.state.zoomMode ? (this.graphStyle === 'bar' || this.graphStyle === 'step' ? 1 : 2) : 0;\r\n\r\n    if(this.graphStyle === 'area') shift = 0; // has no details insertion\r\n\r\n    this.data.ys.forEach((item, ind) => {\r\n      var y = params.useSaved ? this.data.saved.y[ind] : item.y;\r\n      if(this.state[`e_${ind}`]) {\r\n        for(let i = xg1Ind; i <= xg2Ind - shift; ++i) {\r\n          const v = y[i];\r\n          if(v !== undefined) {\r\n            minXInd = Math.min(minXInd, i);\r\n            maxXInd = Math.max(maxXInd, i);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if((maxXInd + shift) === xg2Ind) {\r\n      maxXInd = xg2Ind - Math.max(shift - 1, 0);\r\n    }\r\n\r\n    if(minXInd >= maxXInd) {\r\n      return {\r\n        isReduced: false\r\n      };\r\n    }\r\n\r\n    const xg1 = x[minXInd];\r\n    const xg2 = x[maxXInd];\r\n\r\n    if(xg1Orig === xg1 && xg2Orig === xg2) {\r\n      return {\r\n        isReduced: false\r\n      };\r\n    }\r\n\r\n    if(x2 > xg2) {\r\n      x1 = xg2 - (x2 - x1);\r\n      x2 = xg2;\r\n      if(x1 < xg1) {\r\n        x1 = xg1;\r\n      }\r\n    } else if(x1 < xg1) {\r\n      x2 = xg1 + (x2 - x1);\r\n      x1 = xg1;\r\n      if(x2 > xg2) {\r\n        x2 = xg2;\r\n      }\r\n    }\r\n\r\n    return {\r\n      isReduced: true,\r\n      x1: x1,\r\n      x2: x2,\r\n      xg1: xg1,\r\n      xg2: xg2,\r\n      xg1Ind: minXInd,\r\n      xg2Ind: maxXInd\r\n    };\r\n  }\r\n\r\n  getDefaultZoom(params: TChartStateZoom) {\r\n    if(!params.default) {\r\n      return {\r\n        x1: params.x1,\r\n        x2: params.x2\r\n      };\r\n    }\r\n\r\n    const res: TChartStateZoom = {};\r\n    res.x1 = params.default[0];\r\n    res.x2 = params.default[1];\r\n    res.x1 = Math.max(res.x1, params.xg1);\r\n    res.x2 = Math.min(res.x2, params.xg2);\r\n\r\n    if(res.x1 >= res.x2) {\r\n      res.x1 = params.xg1;\r\n      res.x2 = params.xg2;\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  updateSpeed(speed?: number) {\r\n    const points = this.state.activeColumnsCount * this.state.xCount * Math.pow((this.state.x2 - this.state.x1) / (this.state.xMainMax - this.state.xMainMin), 0.5);\r\n    const periods = (this.state.deviceSpeed * points / 16.66 << 0);\r\n    let k = Math.max(1 - 0.25 * periods, 0);\r\n    k = Math.pow(k, 0.85);\r\n    if(this.state.deviceSpeed === undefined) {\r\n      speed = 1;\r\n    }\r\n    speed = 1;\r\n    this.state.speed = speed === undefined ? k : speed;\r\n    return this.state.speed;\r\n  }\r\n\r\n  getYMinMax(x1: number, x2: number, isMini: boolean, fitTo?: boolean, useSaved?: boolean): TChartRange {\r\n    if(this.graphStyle === 'area') {\r\n      return {\r\n        min: 0,\r\n        max: 102\r\n      };\r\n    }\r\n\r\n    const graphAreaWidth = this.state.dims ? this.state.dims.graph.w : this.getGraphWidth(this.data.sideLegend).width;\r\n\r\n    let yMin = Number.MAX_VALUE;\r\n    let yMax = -Number.MAX_VALUE;\r\n    const datePerPixel = (x2 - x1) / graphAreaWidth;\r\n\r\n    let start = getXIndex(useSaved ? this.data.saved.x : this.data.x, x1 - datePerPixel * this.settings.PADD[3]);\r\n    let end = getXIndex(useSaved ? this.data.saved.x : this.data.x, x2 + datePerPixel * this.settings.PADD[1]);\r\n    const yMinStep = this.data.yMinStep || 1;\r\n    const resMin: number[] = [];\r\n    const resMax: number[] = [];\r\n    const settings = this.settings;\r\n    const state = this.state;\r\n    let prevRange: ReturnType<typeof roundRange>;\r\n    let yFirst: number;\r\n    let yLast: number;\r\n\r\n    if(!useSaved && this.state.zoomMode) { // not backing up from zoom mode\r\n      start = Math.max(start, this.state.detailInd1);\r\n      end = Math.min(end, this.state.detailInd2);\r\n    } else {\r\n      start = Math.max(start, 0);\r\n      end = Math.min(end, this.data.x.length - 1);\r\n    }\r\n\r\n    const floorStart = Math.floor(start);\r\n    const ceilStart = Math.ceil(start);\r\n    const floorEnd = Math.floor(end);\r\n    const ceilEnd = Math.ceil(end);\r\n\r\n    const proceedMinMax = (yMin: number, yMax: number, ind?: number, refRange?: ReturnType<typeof roundRange>) => {\r\n      let range: ReturnType<typeof roundRange>;\r\n      if(yMin === Number.MAX_VALUE) {\r\n        if(isMini) {\r\n          if(ind === undefined) {\r\n            yMin = state.y1m as number;\r\n            yMax = state.y2m as number;\r\n          } else {\r\n            yMin = state[`y1m_${ind}`] as number;\r\n            yMax = state[`y2m_${ind}`] as number;\r\n          }\r\n        } else {\r\n          if(ind === undefined) {\r\n            yMin = state.y1 as number;\r\n            yMax = state.y2 as number;\r\n          } else {\r\n            yMin = state[`y1_${ind}`] as number;\r\n            yMax = state[`y2_${ind}`] as number;\r\n          }\r\n        }\r\n      } else {\r\n        if(this.graphStyle === 'bar') {\r\n          yMin = 0;\r\n        }\r\n\r\n        yMin = Math.floor(yMin);\r\n        yMax = Math.ceil(yMax);\r\n\r\n        if(fitTo) {\r\n          // second pair should fit it scale to first one exactly\r\n          // but only then first one is enabled\r\n          // refRange holds data to fit within\r\n          range = roundRange(yMin, yMax, settings.Y_AXIS_RANGE, refRange);\r\n          yMin = range.yMin;\r\n          yMax = range.yMax;\r\n          if(Math.abs(yMin - yMax) < settings.Y_AXIS_RANGE * yMinStep) {\r\n            yMax = yMin + Math.floor(settings.Y_AXIS_RANGE * yMinStep);\r\n          }\r\n        }\r\n      }\r\n\r\n      if(Math.abs(yMin - yMax) < 0.1) {\r\n        yMax++;\r\n      }\r\n\r\n      return {\r\n        min: yMin,\r\n        max: yMax,\r\n        range: range\r\n      };\r\n    };\r\n\r\n    if(this.graphStyle === 'line' || this.graphStyle === 'step') {\r\n      this.data.ys.forEach((item, ind) => {\r\n        const y = useSaved ? this.data.saved.y[ind] : item.y;\r\n        const startIndex = this.graphStyle === 'step' ? floorStart : ceilStart;\r\n        const endIndex = this.graphStyle === 'step' ? ceilEnd : floorEnd;\r\n\r\n        if(state[`e_${ind}`] || (ind === 0 && this.pairY)) {\r\n          let v: number;\r\n          for(let i = startIndex; i <= endIndex; i++) {\r\n            v = y[i];\r\n            if(v === undefined) continue;\r\n            if(v < yMin) yMin = v;\r\n            if(v > yMax) yMax = v;\r\n          }\r\n\r\n          if(this.graphStyle === 'line') {\r\n            if(y[floorStart] !== undefined && y[ceilStart] !== undefined) {\r\n              yFirst = y[floorStart] + (start - floorStart) * (y[ceilStart] - y[floorStart]); // clipped part of line from the beginning\r\n              if(yFirst < yMin) yMin = yFirst;\r\n              if(yFirst > yMax) yMax = yFirst;\r\n            }\r\n\r\n            if(y[floorEnd] !== undefined && y[ceilEnd] !== undefined) {\r\n              yLast = y[floorEnd] + (end - floorEnd) * (y[ceilEnd] - y[floorEnd]); // clipped part of line from the end\r\n              if(yLast < yMin) yMin = yLast;\r\n              if(yLast > yMax) yMax = yLast;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(this.pairY) {\r\n          // this.prevRange will be available for pair graphs for second one to fit first one\r\n          // if first graph is disabled this.prevRange wiil be null and range will be rounded as always\r\n          const tunedY = proceedMinMax(yMin, yMax, ind, prevRange);\r\n          resMin[ind] = tunedY.min;\r\n          resMax[ind] = tunedY.max;\r\n          yMin = Number.MAX_VALUE;\r\n          yMax = -Number.MAX_VALUE;\r\n          // upd. disabled prevRange, caused problems\r\n          // prevRange = tunedY.range;\r\n        }\r\n      });\r\n    }\r\n\r\n    if(this.graphStyle === 'bar') {\r\n      const visibleCols: number[] = [];\r\n\r\n      for(let j = 0; j < this.data.ys.length; j++) {\r\n        if(state[`e_${j}`]) {\r\n          visibleCols.push(j);\r\n        }\r\n      }\r\n\r\n      const colsLen = visibleCols.length;\r\n\r\n      for(let i = floorStart; i <= ceilEnd; i++) {\r\n        let yCur = 0;\r\n        for(let j = 0; j < colsLen; j++) {\r\n          yCur += (useSaved ? this.data.saved.y[visibleCols[j]][i] : this.data.ys[visibleCols[j]].y[i]) || 0;\r\n        }\r\n        if(yCur > yMax) yMax = yCur;\r\n      }\r\n\r\n      yMin = 0;\r\n    }\r\n\r\n    if(this.pairY) {\r\n      // for absent values\r\n      if(isNaN(resMin[0])) resMin[0] = resMin[1];\r\n      if(isNaN(resMin[1])) resMin[1] = resMin[0];\r\n      if(isNaN(resMax[0])) resMax[0] = resMax[1];\r\n      if(isNaN(resMax[1])) resMax[1] = resMax[0];\r\n      return {\r\n        min: resMin,\r\n        max: resMax\r\n      };\r\n    } else {\r\n      const tunedY = proceedMinMax(yMin, yMax);\r\n      return {\r\n        min: tunedY.min,\r\n        max: tunedY.max\r\n      };\r\n    }\r\n  }\r\n\r\n  setDarkMode(enabled: boolean, colors?: TChartSettings['COLORS']) {\r\n    this.settings.darkMode = enabled;\r\n    if(colors) {\r\n      this.settings.COLORS = colors;\r\n    }\r\n\r\n    this.graph.setDarkMode(enabled);\r\n    this.axisY.setDarkMode(enabled);\r\n    this.fade.setDarkMode(enabled);\r\n    this.axisX.setDarkMode(enabled);\r\n    this.mini.setDarkMode(enabled);\r\n    this.handle.setDarkMode(enabled);\r\n    this.tip.setDarkMode(enabled);\r\n    this.switchers.setDarkMode(enabled);\r\n    this.composer.setDarkMode(enabled);\r\n  }\r\n\r\n  getGraphWidth(hasLegend: boolean) {\r\n    const rectEl = this.$el.getBoundingClientRect();\r\n\r\n    if(hasLegend) {\r\n      const rectLegend = this.$switchers.getBoundingClientRect();\r\n\r\n      if((rectEl.width - rectLegend.width) >= 500) {\r\n        return {\r\n          hasSpaceForLegend: true,\r\n          width: Math.max(rectEl.width - rectLegend.width, 1)\r\n        };\r\n      } else {\r\n        return {\r\n          hasSpaceForLegend: false,\r\n          width: rectEl.width\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        width: rectEl.width\r\n      };\r\n    }\r\n  }\r\n\r\n  onResize = () => {\r\n    const dpi = Math.min(window.devicePixelRatio || 1, 2);\r\n    if(this.ww === window.innerWidth && dpi === this.settings.dpi) return;\r\n    this.settings.dpi = dpi;\r\n\r\n    this.ww = window.innerWidth;\r\n\r\n    if(this.data.sideLegend) {\r\n      this.$switchers.classList.remove('tchart--switchers__no-space');\r\n\r\n      const graphWidthData = this.getGraphWidth(true);\r\n\r\n      // if no space for legend - skip sideLegend option\r\n      if(graphWidthData.hasSpaceForLegend) {\r\n        this.$graph.style.width = graphWidthData.width + 'px';\r\n      } else {\r\n        this.$switchers.classList.add('tchart--switchers__no-space');\r\n        this.$graph.style.width = graphWidthData.width + 'px';\r\n      }\r\n    }\r\n\r\n\r\n    const rectGraph = this.$graph.getBoundingClientRect();\r\n    const s = this.settings;\r\n    const graphHeight = rectGraph.height - s.DATES_HEIGHT - s.MINI_GRAPH_HEIGHT - s.MINI_GRAPH_TOP - s.MINI_GRAPH_BOTTOM;\r\n\r\n    this.state.dims = {\r\n      composer: {\r\n        w: rectGraph.width,\r\n        h: rectGraph.height,\r\n        l: 0,\r\n        t: 0\r\n      },\r\n      graph: {\r\n        w: rectGraph.width,\r\n        h: graphHeight,\r\n        l: 0,\r\n        t: s.DATES_HEIGHT\r\n      },\r\n      axisYLeft: {\r\n        w: s.Y_LABELS_WIDTH,\r\n        h: graphHeight,\r\n        l: s.PADD[3],\r\n        t: s.DATES_HEIGHT\r\n      },\r\n      axisYRight: {\r\n        w: s.Y_LABELS_WIDTH,\r\n        h: graphHeight,\r\n        l: rectGraph.width - s.PADD[1] - s.Y_LABELS_WIDTH,\r\n        t: s.DATES_HEIGHT\r\n      },\r\n      axisYLines: {\r\n        w: rectGraph.width - s.PADD[1] - s.PADD[3],\r\n        h: graphHeight,\r\n        l: s.PADD[3],\r\n        t: s.DATES_HEIGHT\r\n      },\r\n      fadeTop: {\r\n        w: rectGraph.width,\r\n        h: s.FADE_HEIGHT,\r\n        l: 0,\r\n        t: s.DATES_HEIGHT\r\n      },\r\n      fadeBottom: {\r\n        w: rectGraph.width,\r\n        h: s.FADE_HEIGHT,\r\n        l: 0,\r\n        t: s.DATES_HEIGHT + graphHeight - s.FADE_HEIGHT\r\n      },\r\n      axisX: {\r\n        w: rectGraph.width,\r\n        h: s.X_LABELS_HEIGHT,\r\n        l: 0,\r\n        t: s.DATES_HEIGHT + graphHeight - s.X_LABELS_HEIGHT\r\n      },\r\n      dates: {\r\n        w: s.DATES_WIDTH,\r\n        h: s.DATES_HEIGHT,\r\n        l: this.opts.settings.DATES_SIDE === 'right' ? rectGraph.width - s.DATES_WIDTH - s.PADD[1] : s.PADD[1],\r\n        t: 0\r\n      },\r\n      mini: {\r\n        w: rectGraph.width - s.PADD[1] - s.PADD[3],\r\n        h: s.MINI_GRAPH_HEIGHT,\r\n        l: s.PADD[3],\r\n        t: s.DATES_HEIGHT + graphHeight + s.MINI_GRAPH_TOP\r\n      },\r\n      handle: {\r\n        w: rectGraph.width - s.PADD[1] - s.PADD[3],\r\n        h: s.MINI_GRAPH_HEIGHT + 2,\r\n        l: s.PADD[3],\r\n        t: s.DATES_HEIGHT + graphHeight + s.MINI_GRAPH_TOP - 1\r\n      },\r\n      tip: {\r\n        w: rectGraph.width,\r\n        h: graphHeight,\r\n        l: 0,\r\n        t: s.DATES_HEIGHT\r\n      }\r\n    };\r\n\r\n    this.graph.onResize();\r\n    this.axisY.onResize();\r\n    this.fade.onResize();\r\n    this.axisX.onResize();\r\n    this.mini.onResize();\r\n    this.handle.onResize();\r\n    this.tip.onResize();\r\n    this.composer.onResize();\r\n  };\r\n\r\n  createDOM(container: HTMLElement) {\r\n    const settings = this.settings;\r\n\r\n    this.$el = document.createElement('div');\r\n    this.$el.className = 'tchart';\r\n\r\n    if(!this.data.subchart.show) {\r\n      this.$el.classList.add('tchart__no-subchart');\r\n    }\r\n\r\n    if(this.data.slave) {\r\n      this.$el.classList.add('tchart__slave');\r\n    }\r\n\r\n    this.$h1 = document.createElement('h1');\r\n    this.$h1.className = 'tchart--header';\r\n    this.$h1.textContent = this.data.caption;\r\n    this.$el.appendChild(this.$h1);\r\n\r\n    this.$zoom = document.createElement('div');\r\n    this.$zoom.className = 'tchart--zoom';\r\n    this.$el.appendChild(this.$zoom);\r\n\r\n    const $zoomIcon = document.createElement('div');\r\n    $zoomIcon.className = 'tchart--zoom-icon';\r\n    this.$zoom.appendChild($zoomIcon);\r\n    const $zoomText = document.createElement('span');\r\n    $zoomText.textContent = this.settings.ZOOM_TEXT;\r\n    this.$zoom.appendChild($zoomText);\r\n\r\n    this.$zoom.addEventListener('click', () => {\r\n      this.toggleZoom(false);\r\n    });\r\n\r\n    this.$graph = document.createElement('div');\r\n    this.$graph.className = 'tchart--graph';\r\n    this.$el.appendChild(this.$graph);\r\n\r\n    this.$switchers = document.createElement('div');\r\n    this.$switchers.className = 'tchart--switchers';\r\n    this.data.sideLegend && this.$switchers.classList.add('tchart--switchers__side-legend');\r\n    this.$el.appendChild(this.$switchers);\r\n\r\n    container.appendChild(this.$el);\r\n\r\n    const rangeGraph = this.getYMinMax(this.state.x1, this.state.x2, false, true);\r\n    const rangeMini = this.getYMinMax(this.state.xg1, this.state.xg2, true);\r\n\r\n    if(this.pairY) {\r\n      for(let i = 0; i < this.data.ys.length; i++) {\r\n        this.state[`y1_${i}`] = (rangeGraph as TChartRangePaired).min[i];\r\n        this.state[`y2_${i}`] = (rangeGraph as TChartRangePaired).max[i];\r\n        this.state[`y1m_${i}`] = (rangeMini as TChartRangePaired).min[i];\r\n        this.state[`y2m_${i}`] = (rangeMini as TChartRangePaired).max[i];\r\n      }\r\n    } else {\r\n      this.state['y1'] = (rangeGraph as TChartRangeSingle).min;\r\n      this.state['y2'] = (rangeGraph as TChartRangeSingle).max;\r\n      this.state['y1m'] = (rangeMini as TChartRangeSingle).min;\r\n      this.state['y2m'] = (rangeMini as TChartRangeSingle).max;\r\n    }\r\n\r\n    this.composer = new TComposer({\r\n      $parent: this.$graph,\r\n      settings: settings,\r\n      chart: this,\r\n      state: this.state,\r\n      data: this.data,\r\n      graphStyle: this.graphStyle\r\n    });\r\n\r\n    this.animator = new TAnimator({\r\n      state: this.state,\r\n      composer: this.composer\r\n    });\r\n\r\n    const graphStyle: {[type in TChartType]: any} = {\r\n      line: TLines,\r\n      step: TLines,\r\n      bar: TBars,\r\n      area: TAreas\r\n    };\r\n\r\n    const objs: [property: string, constructor: any, $parent: HTMLElement, additional?: any][] = [\r\n      ['graph', graphStyle[this.graphStyle], this.$graph],\r\n      ['axisX', TAxisX, this.$graph],\r\n      ['fade', TFade, this.$graph],\r\n      ['axisY', TAxisY, this.$graph],\r\n      ['tip', TTip, this.$graph, {\r\n        onClick: this.toggleZoom\r\n      }],\r\n      ['mini', graphStyle[this.graphStyle], this.$graph, {\r\n        mini: true\r\n      }],\r\n      ['handle', THandle, this.$graph, {\r\n        cb: this.onHandleMove\r\n      }],\r\n      ['switchers', TSwitchers, this.$switchers, {\r\n        onClick: this.onSwitcherChange,\r\n        onLongTap: this.onSwitcherChange,\r\n        onEnter: this.onSwitcherEnter,\r\n        onLeave: this.onSwitcherLeave\r\n      }]\r\n    ];\r\n\r\n    objs.forEach((obj) => {\r\n      const options: TChartUnitOptions = {\r\n        animator: this.animator,\r\n        $canvas: this.composer.$canvas,\r\n        ctx: this.composer.ctx,\r\n        graphStyle: this.graphStyle,\r\n        chart: this,\r\n        pairY: this.pairY,\r\n        state: this.state,\r\n        data: this.data,\r\n        $parent: obj[2],\r\n        settings: settings,\r\n        additional: obj[3] || {}\r\n      };\r\n      // @ts-ignore\r\n      this[obj[0]] = new obj[1](options);\r\n      // @ts-ignore\r\n      this[obj[0]].id = obj[0];\r\n    });\r\n  }\r\n\r\n  onHandleMove = (x1: number, x2: number, tp: 'both', firstMove: boolean) => {\r\n    // snap to days behaviour\r\n    let isMagnet = this.state.zoomMode;\r\n\r\n    this.updateSpeed();\r\n\r\n    isMagnet = false; // due to range reducers on detail data gaps\r\n\r\n    if(isMagnet) {\r\n      const periodLen = this.data.mainPeriodLen;\r\n      x1 = Math.round(x1 / periodLen) * periodLen;\r\n      x2 = Math.round(x2 / periodLen) * periodLen;\r\n\r\n      x1 = Math.min(Math.max(x1, this.state.xg1), this.state.xg2 - periodLen);\r\n      x2 = Math.min(Math.max(x2, this.state.xg1 + periodLen), this.state.xg2);\r\n\r\n      if(x2 <= x1) {\r\n        x2 = x1 + periodLen;\r\n      }\r\n\r\n      const x1AnimItem = this.animator.get('x1');\r\n      const x2AnimItem = this.animator.get('x2');\r\n      const x1End = x1AnimItem ? x1AnimItem.end : this.state['x1'];\r\n      const x2End = x2AnimItem ? x2AnimItem.end : this.state['x2'];\r\n\r\n      if(x1 === x1End && x2 === x2End) {\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    const props: TChartAnimationProperty[] = [];\r\n    const range = this.getYMinMax(x1, x2, false, true);\r\n\r\n    this.axisX.setAnimation(isMagnet || tp !== 'both');\r\n    this.axisY.setAnimation(true);\r\n    this.axisY.setForceUpdate(false);\r\n    firstMove && triggerEvent('chart-hide-tips', {\r\n      except: null\r\n    });\r\n\r\n    props.push({\r\n      prop: 'x1',\r\n      state: this.state,\r\n      end: x1,\r\n      fixed: true,\r\n      duration: isMagnet ? 250 : 0,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    props.push({\r\n      prop: 'x2',\r\n      state: this.state,\r\n      end: x2,\r\n      fixed: true,\r\n      duration: isMagnet ? 250 : 0,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    for(let i = 0; i < this.data.ys.length; i++) {\r\n      if(this.graphStyle === 'line' || this.graphStyle === 'step') {\r\n        props.push({\r\n          prop: this.pairY ? `y1_${i}` : 'y1',\r\n          state: this.state,\r\n          end: this.pairY ? (range as TChartRangePaired).min[i] : (range as TChartRangeSingle).min,\r\n          duration: 500,\r\n          fixed: true,\r\n          tween: 'exp',\r\n          speed: 0.25,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        props.push({\r\n          prop: this.pairY ? `y2_${i}` : 'y2',\r\n          state: this.state,\r\n          end: this.pairY ? (range as TChartRangePaired).max[i] : (range as TChartRangeSingle).max,\r\n          duration: 500,\r\n          fixed: true,\r\n          tween: 'exp',\r\n          speed: 0.25,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.animator.add(props);\r\n  };\r\n\r\n  onSwitcherEnter = (ind: number) => {\r\n    clearTimeout(this.switcherLeaveTimeout);\r\n\r\n    const props: TChartAnimationProperty[] = [];\r\n\r\n    for(let i = 0; i < this.data.ys.length; i++) {\r\n      props.push({\r\n        prop: `f_${i}`,\r\n        state: this.state,\r\n        end: ind === i ? 1 : 0,\r\n        duration: 300,\r\n        tween: 'exp',\r\n        speed: 0.15,\r\n        group: {top: true, bottom: true}\r\n      });\r\n\r\n      props.push({\r\n        prop: `pieInd_${i}`,\r\n        state: this.state,\r\n        end: ind === i ? 1 : 0,\r\n        duration: 300,\r\n        tween: 'exp',\r\n        speed: 0.15,\r\n        group: {top: true, bottom: true}\r\n      });\r\n    }\r\n\r\n    this.animator.add(props);\r\n  };\r\n\r\n  onSwitcherLeave = (propsind?: number) => {\r\n    clearTimeout(this.switcherLeaveTimeout);\r\n\r\n    this.switcherLeaveTimeout = window.setTimeout(() => {\r\n      const props: TChartAnimationProperty[] = [];\r\n\r\n      for(let i = 0; i < this.data.ys.length; i++) {\r\n        props.push({\r\n          prop: `f_${i}`,\r\n          state: this.state,\r\n          end: 1,\r\n          duration: 300,\r\n          tween: 'exp',\r\n          speed: 0.15,\r\n          group: {top: true, bottom: true}\r\n        });\r\n\r\n        props.push({\r\n          prop: `pieInd_${i}`,\r\n          state: this.state,\r\n          end: 0,\r\n          duration: 300,\r\n          tween: 'exp',\r\n          speed: 0.15,\r\n          group: {top: true, bottom: true}\r\n        });\r\n      }\r\n\r\n      this.animator.add(props);\r\n    }, 300);\r\n  };\r\n\r\n  onSwitcherChange = (enabled: boolean, ind: number) => {\r\n    var rangeGraph: TChartRange, rangeMini: TChartRange, i: number, props: TChartAnimationProperty[] = [],\r\n      isCurrent: boolean, e: boolean[] = [],\r\n      prevE: boolean[] = [];\r\n    var longTap: boolean, isAllOffExceptCurrent: boolean;\r\n\r\n    this.updateSpeed();\r\n\r\n    if(typeof(enabled) !== 'boolean') {\r\n      longTap = true;\r\n      ind = enabled;\r\n\r\n      isAllOffExceptCurrent = true;\r\n      for(i = 0; i < this.data.ys.length; i++) {\r\n        isAllOffExceptCurrent = isAllOffExceptCurrent && (i === ind ? this.state[`e_${i}`] : !this.state[`e_${i}`]);\r\n      }\r\n    }\r\n\r\n    var maxYSize = 0;\r\n\r\n    for(i = 0; i < this.data.ys.length; i++) {\r\n      isCurrent = i === ind;\r\n\r\n      prevE[i] = this.state[`e_${i}`];\r\n\r\n      if(longTap) {\r\n        this.state[`e_${i}`] = isCurrent;\r\n      } else if(isCurrent) {\r\n        this.state[`e_${i}`] = !!enabled;\r\n      }\r\n\r\n      if(isAllOffExceptCurrent && longTap) {\r\n        this.state[`e_${i}`] = true;\r\n      }\r\n\r\n      e[i] = this.state[`e_${i}`];\r\n\r\n      if(e[i]) {\r\n        maxYSize = Math.max(maxYSize, this.data.ys[i].y.length);\r\n      }\r\n    }\r\n\r\n    // reduce global range to exclude data gaps\r\n    var reducedRange = this.reduceGlobalRange({});\r\n\r\n    if(reducedRange.isReduced) {\r\n      props.push({\r\n        prop: 'x1',\r\n        state: this.state,\r\n        end: reducedRange.x1,\r\n        duration: 333,\r\n        group: {\r\n          top: true,\r\n          bottom: true\r\n        }\r\n      });\r\n\r\n      props.push({\r\n        prop: 'x2',\r\n        state: this.state,\r\n        end: reducedRange.x2,\r\n        duration: 333,\r\n        group: {\r\n          top: true,\r\n          bottom: true\r\n        }\r\n      });\r\n\r\n      props.push({\r\n        prop: 'xg1',\r\n        state: this.state,\r\n        end: reducedRange.xg1,\r\n        duration: 333,\r\n        group: {\r\n          top: true,\r\n          bottom: true\r\n        }\r\n      });\r\n\r\n      props.push({\r\n        prop: 'xg2',\r\n        state: this.state,\r\n        end: reducedRange.xg2,\r\n        duration: 333,\r\n        group: {\r\n          top: true,\r\n          bottom: true\r\n        }\r\n      });\r\n      this.state.xg1Ind = reducedRange.xg1Ind;\r\n      this.state.xg2Ind = reducedRange.xg2Ind;\r\n\r\n      rangeGraph = this.getYMinMax(reducedRange.x1, reducedRange.x2, false, true);\r\n      rangeMini = this.getYMinMax(reducedRange.xg1, reducedRange.xg2, true);\r\n    } else {\r\n      rangeGraph = this.getYMinMax(this.state.x1, this.state.x2, false, true);\r\n      rangeMini = this.getYMinMax(this.state.xg1, this.state.xg2, true);\r\n    }\r\n\r\n\r\n    triggerEvent('chart-hide-tips', {\r\n      except: null\r\n    });\r\n    this.axisY.setForceUpdate(true);\r\n    this.axisY.setAnimation(true);\r\n\r\n    this.state.activeColumnsCount = 0;\r\n\r\n    for(i = 0; i < e.length; i++) {\r\n      e[i] && this.state.activeColumnsCount++;\r\n\r\n      if(prevE[i] !== e[i]) {\r\n        props.push({\r\n          prop: `o_${i}`,\r\n          state: this.state,\r\n          end: e[i] ? 1 : 0,\r\n          duration: 300,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n\r\n        props.push({\r\n          prop: `om_${i}`,\r\n          state: this.state,\r\n          end: e[i] ? 1 : 0,\r\n          duration: this.graphStyle === 'line' || this.graphStyle === 'step' ? 166 : 300,\r\n          delay: e[i] && this.graphStyle === 'line' || this.graphStyle === 'step' ? 200 : 0,\r\n          tween: 'linear',\r\n          group: {\r\n            bottom: true\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    for(i = 0; i < (this.pairY ? e.length : 1); i++) {\r\n      if(this.graphStyle === 'line' || this.graphStyle === 'step') {\r\n        props.push({\r\n          prop: this.pairY ? `y1_${i}` : 'y1',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeGraph as TChartRangePaired).min[i] : (rangeGraph as TChartRangeSingle).min,\r\n          duration: this.pairY ? 0 : 333,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        props.push({\r\n          prop: this.pairY ? `y2_${i}` : 'y2',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeGraph as TChartRangePaired).max[i] : (rangeGraph as TChartRangeSingle).max,\r\n          duration: this.pairY ? 0 : 333,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle === 'line' || this.graphStyle === 'step') {\r\n        props.push({\r\n          prop: this.pairY ? `y1m_${i}` : 'y1m',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeMini as TChartRangePaired).min[i] : (rangeMini as TChartRangeSingle).min,\r\n          duration: this.pairY ? 0 : 316,\r\n          group: {\r\n            bottom: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        props.push({\r\n          prop: this.pairY ? `y2m_${i}` : 'y2m',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeMini as TChartRangePaired).max[i] : (rangeMini as TChartRangeSingle).max,\r\n          duration: this.pairY ? 0 : 316,\r\n          group: {\r\n            bottom: true\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.state['y1m_hidd'] = this.state.y1m;\r\n    this.state['y2m_hidd'] = this.state.y2m;\r\n    this.state['y1m_show'] = rangeMini.min as number;\r\n    this.state['y2m_show'] = rangeMini.max as number;\r\n\r\n\r\n    this.switchers.render(e);\r\n\r\n    this.animator.add(props);\r\n  };\r\n\r\n  toggleSlave(enabled: boolean, zoomSpecialOrigin: number, details: TChartDataDetails, speed: number) {\r\n    const props: TChartAnimationProperty[] = [];\r\n\r\n    this.updateSpeed(speed);\r\n\r\n    if(this.state.zoomModeSlave === enabled) return;\r\n\r\n    this.state.zoomSpecialOrigin = zoomSpecialOrigin;\r\n\r\n    if(enabled) {\r\n      this.state.zoomModeSlave = true;\r\n\r\n      this.switchers.switchers.forEach((div, ind) => {\r\n        div.classList.add('tchart--switcher__visible');\r\n        div.getElementsByTagName('span')[0].textContent = details.names[ind];\r\n      });\r\n\r\n      this.tip.labels.forEach((item, ind) => {\r\n        item.$label.textContent = details.names[ind];\r\n      });\r\n\r\n\r\n      this.data.x = details.x;\r\n      const e: boolean[] = [];\r\n      for(let i = 0; i < details.y.length; i++) {\r\n        this.data.ys[i].y = details.y[i];\r\n\r\n        const isVisible = details.hidden.indexOf(this.data.ys[i].id) === -1;\r\n\r\n        this.state[`e_${i}`] = isVisible;\r\n        this.state[`o_${i}`] = isVisible ? 1 : 0;\r\n        this.state[`om_${i}`] = isVisible ? 1 : 0;\r\n        e[i] = isVisible;\r\n      }\r\n\r\n      this.switchers.render(e);\r\n\r\n      const x1 = this.data.x[0];\r\n      const x2 = this.data.x[this.data.x.length - 1];\r\n\r\n      this.data.dates = [];\r\n      this.data.datesShort = [];\r\n      this.data.datesRange = [];\r\n\r\n      const xTooltipFormatter = getFormatter('xTooltipFormatter', this.data, 1);\r\n      const xTickFormatter = getFormatter('xTickFormatter', this.data, 1);\r\n      const xRangeFormatter = getFormatter('xRangeFormatter', this.data, 1);\r\n      let maxXTickLength = 0;\r\n\r\n      for(let i = 0; i < this.data.x.length; i++) {\r\n        this.data.dates[i] = xTooltipFormatter(this.data.x[i], true);\r\n        this.data.datesShort[i] = xTickFormatter(this.data.x[i], true);\r\n        this.data.datesRange[i] = xRangeFormatter(this.data.x[i], true);\r\n\r\n        if(this.data.datesShort[i].length > maxXTickLength) {\r\n          maxXTickLength = this.data.datesShort[i].length;\r\n        }\r\n      }\r\n\r\n      this.data.maxXTickLength = maxXTickLength;\r\n\r\n      this.data.subchart = details.subchart;\r\n      this.data.hidden = details.hidden;\r\n\r\n      const defaultZoom = this.getDefaultZoom({\r\n        x1: x1,\r\n        x2: x2,\r\n        xg1: x1,\r\n        xg2: x2,\r\n        default: this.data.subchart.defaultZoom\r\n      });\r\n\r\n      this.state.x1 = defaultZoom.x1;\r\n      this.state.x2 = defaultZoom.x2;\r\n\r\n      this.state['xCount'] = this.data.x.length;\r\n      this.state['xg1'] = x1;\r\n      this.state['xg2'] = x2;\r\n      this.state['xg1Ind'] = 0;\r\n      this.state['xg2Ind'] = this.data.x.length - 1;\r\n      this.state['xMainMin'] = x1;\r\n      this.state['xMainMax'] = x2;\r\n      this.state['xgMin'] = x1;\r\n      this.state['xgMax'] = x2;\r\n\r\n\r\n      // reduce global range to exclude data gaps\r\n      const reducedRange = this.reduceGlobalRange({});\r\n\r\n      if(reducedRange.isReduced) {\r\n        this.state.x1 = reducedRange.x1;\r\n        this.state.x2 = reducedRange.x2;\r\n        this.state.xg1 = reducedRange.xg1;\r\n        this.state.xg2 = reducedRange.xg2;\r\n        this.state.xg1Ind = reducedRange.xg1Ind;\r\n        this.state.xg2Ind = reducedRange.xg2Ind;\r\n      }\r\n\r\n\r\n      const rangeGraph = this.getYMinMax(this.state.x1, this.state.x2, false, true);\r\n      const rangeMini = this.getYMinMax(x1, x2, true);\r\n\r\n      this.state['y1'] = rangeGraph.min as number;\r\n      this.state['y2'] = rangeGraph.max as number;\r\n      this.state['y1m'] = rangeMini.min as number;\r\n      this.state['y2m'] = rangeMini.max as number;\r\n    } else {\r\n      this.switchers.switchers.forEach((div) => {\r\n        div.classList.remove('tchart--switcher__visible');\r\n      });\r\n    }\r\n    const durationY = 450;\r\n\r\n    setTimeout(() => {\r\n      if(!enabled) {\r\n        this.state.zoomModeSlave = false;\r\n      }\r\n    }, durationY + 20);\r\n\r\n    this.state.slaveVisibility = enabled ? 0 : 1;\r\n\r\n    props.push({\r\n      prop: 'slaveVisibility',\r\n      state: this.state,\r\n      end: enabled ? 1 : 0,\r\n      duration: durationY,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    this.animator.add(props);\r\n  }\r\n\r\n  toggleZoomSpecial(enabled: boolean, dt: number, details: TChartDataDetails) {\r\n    var props: TChartAnimationProperty[] = [];\r\n\r\n    if(this.state.zoomModeSpecial === enabled) return;\r\n\r\n    var speed = this.updateSpeed();\r\n\r\n    if(enabled) {\r\n      var scale = (this.state.x2 - this.state.x1) / (this.state.dims.graph.w - this.settings.PADD[3] - this.settings.PADD[1]);\r\n      var lPaddInDt = this.settings.PADD[3] * scale;\r\n      var rPaddInDt = this.settings.PADD[1] * scale;\r\n      this.state.zoomSpecialOrigin = (dt - this.state.x1 + lPaddInDt) / (this.state.x2 - this.state.x1 + lPaddInDt + rPaddInDt);\r\n\r\n      this.state.zoomModeSpecial = true;\r\n      this.$h1.classList.add('tchart--header__hidden');\r\n      this.$zoom.classList.add('tchart--zoom__visible');\r\n\r\n      this.switchers.switchers.forEach((div) => {\r\n        div.classList.remove('tchart--switcher__visible');\r\n      });\r\n\r\n      this.slaveChart.toggleSlave(true, this.state.zoomSpecialOrigin, details, speed);\r\n    } else {\r\n      this.$h1.classList.remove('tchart--header__hidden');\r\n      this.$zoom.classList.remove('tchart--zoom__visible');\r\n\r\n      this.switchers.switchers.forEach((div) => {\r\n        div.classList.add('tchart--switcher__visible');\r\n      });\r\n\r\n      this.slaveChart.toggleSlave(false, this.state.zoomSpecialOrigin, null, speed);\r\n    }\r\n    var durationY = 450;\r\n\r\n    document.body.style.pointerEvents = 'none';\r\n    setTimeout(() => {\r\n      if(!enabled) {\r\n        this.state.zoomModeSpecial = false;\r\n      }\r\n      document.body.style.pointerEvents = '';\r\n    }, durationY + 20);\r\n\r\n    this.state.masterVisibility = enabled ? 1 : 0;\r\n\r\n    props.push({\r\n      prop: 'masterVisibility',\r\n      state: this.state,\r\n      end: enabled ? 0 : 1,\r\n      duration: durationY,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    this.animator.add(props);\r\n  }\r\n\r\n  toggleZoom = (enabled: boolean, dt?: number, data?: TChartData) => {\r\n    // this.specialZoomTransition = true;\r\n    if(enabled) {\r\n      // this.specialZoomTransition = this.state.isSlowNow ? true : undefined;\r\n      // this.specialZoomTransition = true;\r\n    }\r\n\r\n    if(data && this.specialZoomTransition === undefined) {\r\n      if(data.columns.length !== this.data.ys.length + 1) this.specialZoomTransition = true;\r\n      if(!this.specialZoomTransition) {\r\n        data.columns.forEach((item) => {\r\n          const id = item[0];\r\n          const tp = data.types[id];\r\n          const label = data.names[id];\r\n          const ind = this.data.yIds[id];\r\n          if(ind !== undefined) {\r\n            const tpOrig = this.data.ys[ind].tp;\r\n            const labelOrig = this.data.ys[ind].label;\r\n            if(tpOrig !== tp || labelOrig !== label) {\r\n              this.specialZoomTransition = true;\r\n            }\r\n          } else {\r\n            if((id as any as string) !== 'x') {\r\n              this.specialZoomTransition = true;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      if(this.specialZoomTransition === undefined) {\r\n        this.specialZoomTransition = false;\r\n      }\r\n    }\r\n\r\n    if(this.specialZoomTransition) {\r\n      this.data.master = true;\r\n      this.$el.classList.add('tchart__master');\r\n\r\n      if(!this.slaveChart) {\r\n        const clonedData: TChartConstructorOptions['data'] = JSON.parse(JSON.stringify(data));\r\n        clonedData.yTickFormatter = data.yTickFormatter;\r\n        clonedData.yTooltipFormatter = data.yTooltipFormatter;\r\n        clonedData.xTickFormatter = data.xTickFormatter;\r\n        clonedData.xTooltipFormatter = data.xTooltipFormatter;\r\n        clonedData.xRangeFormatter = data.xRangeFormatter;\r\n        clonedData.sideLegend = this.data.sideLegend;\r\n        clonedData.getLabelDate = this.data.getLabelDate;\r\n        clonedData.getLabelTime = this.data.getLabelTime;\r\n        this.slaveChart = new TChart({\r\n          container: this.opts.container,\r\n          slave: true,\r\n          data: clonedData\r\n        });\r\n\r\n        this.slaveChart.setDarkMode(this.darkMode);\r\n      }\r\n    }\r\n\r\n    if(data && !data.details) {\r\n      data.details = {\r\n        y: [],\r\n        names: []\r\n      } as TChartDataDetails;\r\n\r\n      data.columns.forEach((item) => {\r\n        const id = item.shift();\r\n        const tp = data.types[id];\r\n        const label = data.names[id];\r\n\r\n        if(tp === 'x') {\r\n          data.details.x = item;\r\n        } else {\r\n          if(this.specialZoomTransition) {\r\n            data.details.y.push(item);\r\n            data.details.names.push(label);\r\n          } else {\r\n            data.details.y[this.data.yIds[id]] = item;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if(data) {\r\n      data.subchart = {\r\n        show: data.subchart && data.subchart.show !== undefined ? data.subchart.show : true,\r\n        defaultZoom: data.subchart && data.subchart.defaultZoom\r\n      }\r\n      data.details.subchart = data.subchart;\r\n      data.details.hidden = data.hidden || [];\r\n    }\r\n\r\n\r\n    if(this.specialZoomTransition) {\r\n      this.toggleZoomSpecial(enabled, dt, data && data.details);\r\n      return;\r\n    }\r\n\r\n\r\n    const details = data && data.details;\r\n\r\n    var rangeGraph: TChartRange,\r\n      rangeMini: TChartRange,\r\n      props: TChartAnimationProperty[] = [];\r\n\r\n    if(this.state.zoomMode === enabled) return;\r\n\r\n    if(enabled) {\r\n      this.state.zoomMode = true;\r\n      this.state.zoomDir = 1;\r\n      this.$h1.classList.add('tchart--header__hidden');\r\n      this.$zoom.classList.add('tchart--zoom__visible');\r\n\r\n      this.zoomEnterSpeed = this.updateSpeed();\r\n\r\n      // area has no data\r\n      if(data) {\r\n        this.data.details = {\r\n          yTickFormatter: data.yTickFormatter,\r\n          yTooltipFormatter: data.yTooltipFormatter,\r\n          xTickFormatter: data.xTickFormatter,\r\n          xTooltipFormatter: data.xTooltipFormatter,\r\n          xRangeFormatter: data.xRangeFormatter,\r\n          subchart: data.subchart,\r\n          hidden: data.hidden || []\r\n        };\r\n      }\r\n\r\n      // save\r\n      if(!this.hasSavedData) {\r\n        this.data.saved = {};\r\n        this.data.saved.x = this.data.x.slice();\r\n        this.data.saved.dates = this.data.dates.slice();\r\n        this.data.saved.datesShort = this.data.datesShort.slice();\r\n        this.data.saved.datesRange = this.data.datesRange.slice();\r\n        this.data.saved.y = [];\r\n\r\n        for(let j = 0; j < this.data.ys.length; j++) {\r\n          this.data.saved.y[j] = this.data.ys[j].y.slice();\r\n        }\r\n        this.hasSavedData = true;\r\n      }\r\n\r\n      if(this.data.details && this.data.details.subchart) {\r\n        if(!this.data.details.subchart.show) {\r\n          this.$el.classList.add('tchart__no-subchart');\r\n        } else {\r\n          this.$el.classList.remove('tchart__no-subchart');\r\n        }\r\n      }\r\n\r\n\r\n      this.state.zoomSaved = {\r\n        x1: this.state.x1,\r\n        x2: this.state.x2,\r\n        xg1: this.state.xg1,\r\n        xg2: this.state.xg2,\r\n        xgMin: this.state.xgMin,\r\n        xgMax: this.state.xgMax\r\n      }\r\n\r\n      var periodLen = this.data.mainPeriodLen;\r\n      var x1 = dt;\r\n      var x2 = dt + periodLen;\r\n\r\n      if(this.data.details) {\r\n        var defaultZoom = this.getDefaultZoom({\r\n          x1: x1,\r\n          x2: x2,\r\n          xg1: details.x[0],\r\n          xg2: details.x[details.x.length - 1],\r\n          default: this.data.details.subchart.defaultZoom\r\n        });\r\n\r\n        var x1 = defaultZoom.x1;\r\n        var x2 = defaultZoom.x2;\r\n      }\r\n      var xg1, xg2;\r\n\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        this.data.detailPeriodLen = details.x[1] - details.x[0];\r\n\r\n        xg1 = details.x[0];\r\n        xg2 = details.x[details.x.length - 1];\r\n      } else {\r\n        this.data.detailPeriodLen = periodLen;\r\n        var totalRange = this.data.pieZoomRange;\r\n        xg1 = x1 - (totalRange - periodLen) / 2;\r\n        xg2 = xg1 + totalRange;\r\n\r\n        x2 = x1 + Math.round((totalRange / 7) / periodLen) * periodLen;\r\n\r\n        if(xg1 < this.data.x[0]) {\r\n          xg1 = this.data.x[0];\r\n          xg2 = xg1 + totalRange;\r\n\r\n          if(xg2 > this.data.x[this.data.x.length - 1]) {\r\n            xg2 = this.data.x[this.data.x.length - 1] + periodLen;\r\n          }\r\n        } else if(xg2 > this.data.x[this.data.x.length - 1]) {\r\n          xg2 = this.data.x[this.data.x.length - 1] + periodLen;\r\n          xg1 = xg2 - totalRange;\r\n\r\n          if(xg1 < this.data.x[0]) {\r\n            xg1 = this.data.x[0];\r\n          }\r\n        }\r\n      }\r\n\r\n      xg1 = Math.round(xg1 / periodLen) * periodLen;\r\n      xg2 = Math.round(xg2 / periodLen) * periodLen;\r\n\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        this.insertDetails(xg1, xg2, details);\r\n      }\r\n\r\n      this.state.xgMin = xg1;\r\n      this.state.xgMax = xg2;\r\n    } else {\r\n      this.updateSpeed(this.zoomEnterSpeed / (this.graphStyle === 'area' ? 2 : 1));\r\n\r\n      this.$h1.classList.remove('tchart--header__hidden');\r\n      this.$zoom.classList.remove('tchart--zoom__visible');\r\n\r\n      if(this.data.details) {\r\n        if(!this.data.subchart.show) {\r\n          this.$el.classList.add('tchart__no-subchart');\r\n        } else {\r\n          this.$el.classList.remove('tchart__no-subchart');\r\n        }\r\n      }\r\n\r\n      this.state.zoomDir = -1;\r\n\r\n      x1 = this.state.zoomSaved.x1;\r\n      x2 = this.state.zoomSaved.x2;\r\n      xg1 = this.state.zoomSaved.xg1;\r\n      xg2 = this.state.zoomSaved.xg2;\r\n      this.state.xgMin = this.state.zoomSaved.xgMin;\r\n      this.state.xgMax = this.state.zoomSaved.xgMax;\r\n    }\r\n\r\n    this.axisY.setForceUpdate(true);\r\n    this.axisY.setAnimation(true);\r\n    this.axisX.setAnimation(true);\r\n\r\n    let duration = 450;\r\n    let delayMain = 0;\r\n    let delayZoom = 0;\r\n\r\n    if(this.graphStyle === 'area') {\r\n      duration = 350;\r\n      if(enabled) {\r\n        delayZoom = duration * 0.95;\r\n      } else {\r\n        delayMain = duration * 0.95;\r\n      }\r\n    }\r\n\r\n\r\n    // reduce global range to exclude data gaps\r\n    const reducedRange = this.reduceGlobalRange({\r\n      x1: x1,\r\n      x2: x2,\r\n      xg1: xg1,\r\n      xg2: xg2,\r\n      useSaved: !enabled\r\n    });\r\n\r\n    if(reducedRange.isReduced) {\r\n      x1 = reducedRange.x1;\r\n      x2 = reducedRange.x2;\r\n      xg1 = reducedRange.xg1;\r\n      xg2 = reducedRange.xg2;\r\n    }\r\n\r\n    this.state.xg1Ind = Math.floor(getXIndex(enabled ? this.data.x : this.data.saved.x, xg1));\r\n    this.state.xg2Ind = Math.ceil(getXIndex(enabled ? this.data.x : this.data.saved.x, xg2));\r\n\r\n    rangeGraph = this.getYMinMax(x1, x2, false, true, !enabled);\r\n    rangeMini = this.getYMinMax(xg1, xg2, true, false, !enabled);\r\n\r\n\r\n    document.body.style.pointerEvents = 'none';\r\n    setTimeout(() => {\r\n      if(!enabled) {\r\n        this.state.zoomMode = false;\r\n\r\n        if(this.graphStyle !== 'area') {\r\n          this.revertDetails();\r\n        }\r\n      }\r\n      document.body.style.pointerEvents = '';\r\n\r\n      this.composer.render({\r\n        top: true,\r\n        bottom: true\r\n      });\r\n    }, duration + 20 + (this.graphStyle === 'area' ? duration * 0.9 : 0));\r\n\r\n    this.state.zoomMorph = enabled ? 0 : 1;\r\n\r\n\r\n    props.push({\r\n      prop: 'zoomMorph',\r\n      state: this.state,\r\n      end: enabled ? 1 : 0,\r\n      duration: duration,\r\n      delay: delayZoom,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    props.push({\r\n      prop: 'x1',\r\n      state: this.state,\r\n      end: x1,\r\n      delay: delayMain,\r\n      duration: duration,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    props.push({\r\n      prop: 'x2',\r\n      state: this.state,\r\n      end: x2,\r\n      delay: delayMain,\r\n      duration: duration,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    props.push({\r\n      prop: 'xg1',\r\n      state: this.state,\r\n      end: xg1,\r\n      delay: delayMain,\r\n      duration: duration,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    props.push({\r\n      prop: 'xg2',\r\n      state: this.state,\r\n      end: xg2,\r\n      delay: delayMain,\r\n      duration: duration,\r\n      group: {\r\n        top: true,\r\n        bottom: true\r\n      }\r\n    });\r\n\r\n    for(let i = 0; i < (this.pairY ? this.data.ys.length : 1); i++) {\r\n      if(this.graphStyle === 'line' || this.graphStyle === 'step') {\r\n        props.push({\r\n          prop: this.pairY ? `y1_${i}` : 'y1',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeGraph as TChartRangePaired).min[i] : (rangeGraph as TChartRangeSingle).min,\r\n          delay: delayMain,\r\n          duration: duration,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        props.push({\r\n          prop: this.pairY ? `y2_${i}` : 'y2',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeGraph as TChartRangePaired).max[i] : (rangeGraph as TChartRangeSingle).max,\r\n          delay: delayMain,\r\n          duration: duration,\r\n          group: {\r\n            top: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle === 'line' || this.graphStyle === 'step') {\r\n        props.push({\r\n          prop: this.pairY ? `y1m_${i}` : 'y1m',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeMini as TChartRangePaired).min[i] : (rangeMini as TChartRangeSingle).min,\r\n          delay: delayMain,\r\n          duration: duration,\r\n          group: {\r\n            bottom: true\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.graphStyle !== 'area') {\r\n        props.push({\r\n          prop: this.pairY ? `y2m_${i}` : 'y2m',\r\n          state: this.state,\r\n          end: this.pairY ? (rangeMini as TChartRangePaired).max[i] : (rangeMini as TChartRangeSingle).max,\r\n          delay: delayMain,\r\n          duration: duration,\r\n          group: {\r\n            bottom: true\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.animator.add(props);\r\n  };\r\n\r\n  insertDetails(xg1: number, xg2: number, details: TChartDataDetails) {\r\n    const startMain = Math.ceil(getXIndex(this.data.x, xg1));\r\n    let endMain = Math.ceil(getXIndex(this.data.x, xg2));\r\n    const startDetail = 0;\r\n    const endDetail = details.x.length - 1;\r\n\r\n    if(xg2 > this.data.x[endMain]) {\r\n      endMain++;\r\n    }\r\n\r\n\r\n    const xl1 = 0;\r\n    const xl2 = startMain; // not including it\r\n\r\n    const xr1 = endMain - (this.graphStyle === 'bar' || this.graphStyle === 'step' ? 1 : 0); // not including it (for bars shoudl include)\r\n    const xr2 = this.data.x.length - 1;\r\n\r\n\r\n    const newX: number[] = [];\r\n    const newDates: string[] = [];\r\n    const newDatesShort: string[] = [];\r\n    const newDatesRange: string[] = [];\r\n    let newInd: number, y: number[], yFrom: number[], origY: number[], origYDet: number[];\r\n    const newY: number[][] = [];\r\n    const newYFrom: number[][] = [];\r\n\r\n    for(let i = xl1; i < xl2; i++) {\r\n      newInd = i - xl1;\r\n      newX[newInd] = this.data.x[i];\r\n      newDates[newInd] = this.data.dates[i];\r\n      newDatesShort[newInd] = this.data.datesShort[i];\r\n      newDatesRange[newInd] = this.data.datesRange[i];\r\n    }\r\n    for(let j = 0; j < this.data.ys.length; j++) {\r\n      newY[j] = newY[j] || [];\r\n      y = newY[j];\r\n      origY = this.data.ys[j].y;\r\n      for(let i = xl1; i < xl2; i++) {\r\n        y[i - xl1] = origY[i];\r\n      }\r\n    }\r\n\r\n\r\n    // insert details\r\n    const ndx: number[] = [];\r\n    const fdx: number[] = [];\r\n    const cdx: number[] = [];\r\n\r\n    const xTooltipFormatter = getFormatter('xTooltipFormatter', this.data, 1);\r\n    const xTickFormatter = getFormatter('xTickFormatter', this.data, 1);\r\n    const xRangeFormatter = getFormatter('xRangeFormatter', this.data, 1);\r\n    let maxXTickLength = 0;\r\n\r\n    for(let i = startDetail; i <= endDetail; i++) {\r\n      newInd = i - startDetail + xl2;\r\n      newX[newInd] = details.x[i];\r\n\r\n      newDates[newInd] = xTooltipFormatter(newX[newInd], true);\r\n      newDatesShort[newInd] = xTickFormatter(newX[newInd], true);\r\n      newDatesRange[newInd] = xRangeFormatter(newX[newInd], true);\r\n\r\n      if(newDatesShort[newInd].length > maxXTickLength) {\r\n        maxXTickLength = newDatesShort[newInd].length;\r\n      }\r\n\r\n      const dx = getXIndex(this.data.x, newX[newInd]);\r\n      ndx[i] = dx;\r\n      fdx[i] = Math.floor(dx);\r\n      cdx[i] = Math.ceil(dx);\r\n    }\r\n\r\n    this.data.details.maxXTickLength = maxXTickLength;\r\n\r\n    for(let j = 0; j < this.data.ys.length; j++) {\r\n      newY[j] = newY[j] || [];\r\n      y = newY[j];\r\n      origY = this.data.ys[j].y;\r\n      origYDet = details.y[j];\r\n      newYFrom[j] = newYFrom[j] || [];\r\n      yFrom = newYFrom[j];\r\n      for(let i = startDetail; i <= endDetail; i++) {\r\n        let yInter: number;\r\n        if(this.graphStyle === 'bar') {\r\n          yInter = origY[fdx[i]] || 0;\r\n        } else if(this.graphStyle === 'step') {\r\n          yInter = origY[fdx[i]];\r\n        } else {\r\n          yInter = origY[fdx[i]] + (ndx[i] - fdx[i]) * (origY[cdx[i]] - origY[fdx[i]]);\r\n        }\r\n        const yDet = origYDet[i];\r\n        // for bars it is simple, we may use 0 as value, cause they are cumulative and always starts from 0\r\n        if(this.graphStyle !== 'bar') {\r\n          // has no initial value, but has detail value\r\n          if(isNaN(yInter) && !isNaN(yDet)) {\r\n            yInter = 0; // ugly, but seem like this situation is impossible in real cases\r\n          }\r\n        }\r\n\r\n        y[i - startDetail + xl2] = yDet;\r\n        yFrom[i - startDetail + xl2] = yInter;\r\n      }\r\n    }\r\n\r\n\r\n    for(let i = xr1 + 1; i <= xr2; i++) {\r\n      newInd = i - xr1 + endDetail + xl2;\r\n      newX[newInd] = this.data.x[i];\r\n      newDates[newInd] = this.data.dates[i];\r\n      newDatesShort[newInd] = this.data.datesShort[i];\r\n      newDatesRange[newInd] = this.data.datesRange[i];\r\n    }\r\n    for(let j = 0; j < this.data.ys.length; j++) {\r\n      newY[j] = newY[j] || [];\r\n      y = newY[j];\r\n      origY = this.data.ys[j].y;\r\n      for(let i = xr1 + 1; i <= xr2; i++) {\r\n        y[i - xr1 + endDetail + xl2] = origY[i];\r\n      }\r\n    }\r\n\r\n    this.state.detailInd1 = xl2;\r\n    this.state.detailInd2 = xl2 + endDetail - startDetail;\r\n\r\n\r\n    this.data.x = newX;\r\n    this.data.dates = newDates;\r\n    this.data.datesShort = newDatesShort;\r\n    this.data.datesRange = newDatesRange;\r\n\r\n    for(let j = 0; j < this.data.ys.length; j++) {\r\n      this.data.ys[j].y = newY[j];\r\n      this.data.ys[j].yFrom = newYFrom[j];\r\n    }\r\n  }\r\n\r\n  revertDetails() {\r\n    this.data.x = this.data.saved.x;\r\n    this.data.dates = this.data.saved.dates;\r\n    this.data.datesShort = this.data.saved.datesShort;\r\n    this.data.datesRange = this.data.saved.datesRange;\r\n\r\n    for(let i = 0; i < this.data.ys.length; ++i) {\r\n      this.data.ys[i].y = this.data.saved.y[i];\r\n    }\r\n  }\r\n}\r\n"],"names":["easing","st","ed","per","tween","t","b","c","d","TAnimator","opts","done","cur","item","time","duration","curVal","group","itemKey","delayed","newVal","j","params","i","param","delta","queue","prop","MONTHS","MONTHS_SHORT","month","WEEK_DAYS","WEEK_DAYS_SHORT","statsFormatDayHour","value","data","statsFormatDayHourFull","utcDiff","statsFormatDay","statsFormatMin","getLabelDate","isShort","isMonthShort","displayWeekDay","displayYear","displayHours","date","weekDaysArray","string","getLabelTime","x","simplifyData","tp","ys","xScale","xShift","visibleCols","xInd1","xInd2","dw","pointsPerPixel","optX","optYs","xInd","xPrev","colsLen","cnt","tmpX","notTheSame","visColInd","prevOptY","curY","getElemPagePos","$el","rect","getXIndex","xc","doNotClip","i1","i2","triggerEvent","eventName","details","isTouchDevice","prefixes","mq","query","drawRoundedRect","ctx","dpi","w","h","y","r","drawRoundedRect2","getFormatter","formatterName","zoomMorph","f","map","yTooltipFormatter","formatter","yTickFormatter","val","step","isFractional","statsFormatKMBT","kmbt","precision","statsChooseNumKMBT","sval","statsFormatFixedKMBT","statsChoosePrecision","absVal","roundRange","y1","y2","refRange","calc","power","curPower","min","max","scale","maxLevel","minLevel","range","TAreas","dims","enabled","o","state","mini","x1","x2","settings","pTop","pRight","pBottom","pLeft","prevY","totalPerX","overlap","morph","ysLen","hash","joinedHash","hBottom","opacityCols","textToCenter","fullyVisibleCount","fullyVisibleInd","hasUnfocusedColumns","optData","hasGapsInData","angles","radius","cx","cy","xInd1Real","xInd2Real","x1AnimItem","x2AnimItem","x1End","x2End","xInd1RealFloor","xInd1RealCeil","xInd2RealFloor","xInd2RealCeil","totalForAll","totalPerItem","tmpY","tmp","elastic","prevAngle","initAngle","rLen","pointsPerArcLen","percentage","len","newAngle","additionalPoints","overlapAng","yItem","yScale","yShift","colInd","k","curH","sy","calcTrans","fromX","fromY","toAngle","toR","sx","selectionOffset","fromAngle","fromR","ang","res","additionalSteps","dist","cBot","cTop","xj","sc","sy1","sy2","xjprev","syprev","xw","curHNext","yTo","yFrom","opacity","fontSize","rad","offset","cosVal","sinVal","isOutboard","lx1","ly1","lx2","ly2","dx","tx","ty","TAxisX","ind","animator","dimsDates","zoomMode","isPointHasWidth","space","offsetForBarGraphMain","offsetForBarGraphDetail","offsetForBarGraph","offsetForBarGraphScale","xStepMain","xStepDetail","xStep","skipEachMain","skipEachDetail","lxScale","changeSpeed","x1Start","x2Start","dtOffset","tmp1","tmp2","shown","prefix","id","xAligned","datesStr","TAxisY","calcDataLeft","calcDataRight","y1Name","y2Name","withAnimation","y1AnimItem","y2AnimItem","yRealStep","yRealStart","yCurRange","changeSpeedFirst","changeSpeedLast","yEndRange","yScaleCur","yScaleEnd","numName","baseData","leftData","rightData","linesCount","startedAtLeastOne","numReal","numRealLeft","numRealRight","numDisplayLeftStr","numDisplayRightStr","oldFrom","oldTo","newFrom","newTo","props","dimsLeft","dimsRight","dimsLines","TBars","zoom","d1","d2","filteredX1","filteredX2","filteredJ","ysLength","xwMain","xwDetail","filteredInd","tmpX1","tmpX2","yVal","jInd","yStart","yEnd","TComposer","groups","t1","prevX","t2","padd","pieChartAnimating","pieChartAnimated","cw","ch","subchartShown","isNotSpecialAndChangedSubchart","TFade","dimsTop","dimsBottom","backgroundRgbJoined","gradientTop","gradientBottom","TDrag","e","$global","THandle","dy","cursors","isTouch","xl1","xl2","xr2","xr1","updateHandle","minRange","xg2","_x1","_x2","TLines","toCache","isStepMode","lineWidth","lineWidthShift","minY","maxY","prevXc","prevYc","hasPrev","needMove","yc","TSwitchers","arr","$div","$span","isActive","longTapTimer","TTip","dataPromise","successDetailCallback","errorDetailCallback","dh","$row","$label","$labelText","$perText","$per","$value","$valueText","noPropagation","shiftHide","animProps","pieItem","dimsTip","curPieItem","tipMarginFromPointer","left","top","itemsVisible","constrainedDx","xPos","display","sumAll","compStyles","labelWidth","valueWidth","minWidth","dateWidth","pos","perInt","maxLen","percentageWidth","TChart","graphWidthData","rectGraph","s","graphHeight","firstMove","isMagnet","periodLen","propsind","rangeGraph","rangeMini","isCurrent","prevE","longTap","isAllOffExceptCurrent","maxYSize","reducedRange","dt","label","tpOrig","labelOrig","clonedData","defaultZoom","xg1","totalRange","delayMain","delayZoom","isIEOld","isIE11","DAY_COLORS","NIGHT_COLORS","darkMode","xTooltipFormatter","xTickFormatter","xRangeFormatter","maxXTickLength","color","yind","isVisible","wrapper","tChart","xg1Orig","xg2Orig","xg1Ind","xg2Ind","minXInd","maxXInd","shift","speed","points","periods","isMini","fitTo","useSaved","graphAreaWidth","yMin","yMax","datePerPixel","start","end","yMinStep","resMin","resMax","yFirst","yLast","floorStart","ceilStart","floorEnd","ceilEnd","proceedMinMax","startIndex","endIndex","v","tunedY","yCur","colors","hasLegend","rectEl","rectLegend","container","$zoomIcon","$zoomText","graphStyle","obj","options","zoomSpecialOrigin","div","durationY","lPaddInDt","rPaddInDt","startMain","endMain","startDetail","endDetail","newX","newDates","newDatesShort","newDatesRange","newInd","origY","origYDet","newY","newYFrom","ndx","fdx","cdx","yInter","yDet"],"mappings":"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"}